{"version":3,"file":"CyberpunkQuantumVault-9xzfOKMU.js","sources":["../../src/components/ui/QuantumCoherenceGauge.tsx","../../src/components/quantum-vault/QuantumStateVisualizer.tsx","../../src/components/quantum-vault/CyberpunkQuantumVault.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { motion } from 'framer-motion';\n\ninterface QuantumCoherenceGaugeProps {\n  value: number;\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n}\n\nconst sizes = {\n  sm: {\n    width: 80,\n    height: 4,\n    fontSize: 'text-xs',\n  },\n  md: {\n    width: 100,\n    height: 6,\n    fontSize: 'text-sm',\n  },\n  lg: {\n    width: 120,\n    height: 8,\n    fontSize: 'text-base',\n  },\n};\n\nexport const QuantumCoherenceGauge: React.FC<QuantumCoherenceGaugeProps> = ({\n  value,\n  size = 'md',\n  className = '',\n}) => {\n  const gaugeRef = useRef<HTMLDivElement>(null);\n  const { width, height, fontSize } = sizes[size];\n\n  useEffect(() => {\n    if (gaugeRef.current) {\n      const color = value >= 0.7 ? '#8B5CF6' : value >= 0.4 ? '#60A5FA' : '#EF4444';\n      gaugeRef.current.style.setProperty('--gauge-color', color);\n    }\n  }, [value]);\n\n  const getStatusText = () => {\n    if (value >= 0.7) return 'Stable';\n    if (value >= 0.4) return 'Moderate';\n    return 'Critical';\n  };\n\n  return (\n    <div className={`relative ${className}`} ref={gaugeRef}>\n      {/* Background Bar */}\n      <div \n        className=\"rounded-full bg-gray-800\"\n        style={{ width, height }}\n      >\n        {/* Fill Bar */}\n        <motion.div\n          className=\"h-full rounded-full\"\n          style={{\n            background: 'var(--gauge-color, #8B5CF6)',\n            backgroundImage: 'linear-gradient(90deg, transparent 0%, rgba(255,255,255,0.1) 50%, transparent 100%)',\n          }}\n          initial={{ width: 0 }}\n          animate={{ width: `${value * 100}%` }}\n          transition={{ duration: 0.5, ease: 'easeOut' }}\n        />\n      </div>\n\n      {/* Quantum Glow Effect */}\n      <div\n        className=\"absolute inset-0 rounded-full\"\n        style={{\n          boxShadow: `0 0 10px var(--gauge-color, #8B5CF6)`,\n          opacity: value * 0.5,\n        }}\n      />\n\n      {/* Status Text */}\n      <div className={`flex justify-between mt-1 ${fontSize} text-gray-400`}>\n        <span>{getStatusText()}</span>\n        <span>{`${(value * 100).toFixed(0)}%`}</span>\n      </div>\n\n      {/* Quantum Particles Effect */}\n      {value > 0.3 && (\n        <div className=\"absolute inset-0 overflow-hidden\">\n          {[...Array(3)].map((_, i) => (\n            <motion.div\n              key={i}\n              className=\"absolute top-0 h-full w-1 bg-white/20 rounded-full\"\n              animate={{\n                x: ['-100%', '200%'],\n                opacity: [0, 1, 0],\n              }}\n              transition={{\n                duration: 2,\n                delay: i * 0.6,\n                repeat: Infinity,\n                ease: 'linear',\n              }}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Prevent unnecessary re-renders\nexport default React.memo(QuantumCoherenceGauge);","import React, { useEffect, useRef } from 'react';\nimport { QuantumState } from '@/quantum/types';\n\ninterface QuantumMetrics {\n  stability: number;\n  coherence: number;\n  resonance: number;\n  consciousness: number;\n}\n\ninterface QuantumStateVisualizerProps {\n  state: QuantumState;\n  metrics: QuantumMetrics;\n  className?: string;\n}\n\nexport const QuantumStateVisualizer: React.FC<QuantumStateVisualizerProps> = ({\n  state,\n  metrics,\n  className\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    let animationFrame: number;\n\n    const drawQuantumField = () => {\n      if (!ctx || !canvas) return;\n\n      // Clear with fade effect\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      const time = Date.now() * 0.001;\n\n      // Draw quantum field wave patterns\n      ctx.beginPath();\n      for (let x = 0; x < canvas.width; x += 5) {\n        const stability = metrics.stability * 20;\n        const resonance = metrics.resonance * 10;\n        const wave1 = Math.sin(x * 0.02 + time) * stability;\n        const wave2 = Math.cos(x * 0.03 - time * 2) * resonance;\n        const y = canvas.height / 2 + wave1 + wave2;\n\n        if (x === 0) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n      }\n      ctx.strokeStyle = `rgba(147, 51, 234, ${metrics.coherence})`;\n      ctx.lineWidth = 2;\n      ctx.stroke();\n\n      // Draw quantum nodes\n      const nodeCount = 5;\n      for (let i = 0; i < nodeCount; i++) {\n        const x = (canvas.width / (nodeCount - 1)) * i;\n        const baseY = canvas.height / 2;\n        const offset = Math.sin(time * 2 + i) * 20 * metrics.stability;\n        const y = baseY + offset;\n\n        // Node glow\n        const gradient = ctx.createRadialGradient(x, y, 0, x, y, 20);\n        gradient.addColorStop(0, `rgba(147, 51, 234, ${metrics.coherence})`);\n        gradient.addColorStop(1, 'rgba(147, 51, 234, 0)');\n        ctx.fillStyle = gradient;\n        ctx.beginPath();\n        ctx.arc(x, y, 20, 0, Math.PI * 2);\n        ctx.fill();\n\n        // Consciousness field\n        const consciousness = metrics.consciousness;\n        const fieldRadius = 30 + Math.sin(time * 3 + i) * 10;\n        const fieldGradient = ctx.createRadialGradient(x, y, 0, x, y, fieldRadius);\n        fieldGradient.addColorStop(0, `rgba(52, 211, 153, ${consciousness * 0.2})`);\n        fieldGradient.addColorStop(1, 'rgba(52, 211, 153, 0)');\n        ctx.fillStyle = fieldGradient;\n        ctx.beginPath();\n        ctx.arc(x, y, fieldRadius, 0, Math.PI * 2);\n        ctx.fill();\n      }\n\n      // Draw resonance connections\n      ctx.beginPath();\n      for (let i = 0; i < nodeCount - 1; i++) {\n        const x1 = (canvas.width / (nodeCount - 1)) * i;\n        const x2 = (canvas.width / (nodeCount - 1)) * (i + 1);\n        const y1 = canvas.height / 2 + Math.sin(time * 2 + i) * 20 * metrics.stability;\n        const y2 = canvas.height / 2 + Math.sin(time * 2 + i + 1) * 20 * metrics.stability;\n\n        const cpx = (x1 + x2) / 2;\n        const cpy = canvas.height / 2 + \n                   Math.sin(time * 3 + i + 0.5) * 40 * metrics.resonance;\n\n        ctx.moveTo(x1, y1);\n        ctx.quadraticCurveTo(cpx, cpy, x2, y2);\n      }\n      ctx.strokeStyle = `rgba(124, 58, 237, ${metrics.resonance * 0.5})`;\n      ctx.lineWidth = 1;\n      ctx.stroke();\n\n      animationFrame = requestAnimationFrame(drawQuantumField);\n    };\n\n    drawQuantumField();\n\n    return () => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame);\n      }\n    };\n  }, [metrics, state]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      width={400}\n      height={200}\n      className={className}\n      style={{\n        width: '100%',\n        height: '100%',\n        background: 'rgba(0, 0, 0, 0.2)',\n        borderRadius: '0.5rem'\n      }}\n    />\n  );\n};","import React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { useAuth } from '@/hooks/useAuth';\nimport { useQuantumState } from '@/hooks/useQuantumState';\nimport { QuantumCoherenceGauge } from '../ui/QuantumCoherenceGauge';\nimport { QuantumStateVisualizer } from './QuantumStateVisualizer';\nimport { quantumStateService } from '@/services/quantum-state.service';\nimport { QuantumState } from '@/quantum/types';\n\ninterface QuantumMetrics {\n  stability: number;\n  coherence: number;\n  resonance: number;\n  consciousness: number;\n}\n\nexport const CyberpunkQuantumVault: React.FC = () => {\n  const { identity } = useAuth();\n  const { state: quantumState, isInitialized } = useQuantumState();\n  const [metrics, setMetrics] = useState<QuantumMetrics>({\n    stability: 0.5,\n    coherence: 0.5,\n    resonance: 0.5,\n    consciousness: 0.5\n  });\n\n  useEffect(() => {\n    if (identity && isInitialized) {\n      const updateMetrics = async () => {\n        try {\n          const [stability, coherence, consciousness] = await quantumStateService.getStabilityMetrics(identity);\n          const resonance = await quantumStateService.calculateResonance(identity);\n          \n          setMetrics({\n            stability,\n            coherence,\n            resonance,\n            consciousness\n          });\n\n          await quantumStateService.updateStability(identity, stability);\n        } catch (error) {\n          console.error('Failed to update quantum metrics:', error);\n        }\n      };\n\n      const intervalId = setInterval(updateMetrics, 3000);\n      updateMetrics();\n\n      return () => clearInterval(intervalId);\n    }\n  }, [identity, isInitialized]);\n\n  const handleQuantumInteraction = async () => {\n    if (!identity || !isInitialized) return;\n\n    try {\n      const status = await quantumStateService.getQuantumStatus(identity);\n      \n      if (status === 'stable') {\n        await quantumStateService.updateState(identity, {\n          resonance: metrics.resonance * 1.1,\n          consciousness_alignment: metrics.consciousness * 1.05\n        });\n      } else if (status === 'critical') {\n        await quantumStateService.handleQuantumError(\n          new Error('Quantum state critical during interaction'),\n          identity\n        );\n      }\n    } catch (error) {\n      console.error('Quantum interaction failed:', error);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-black text-white\">\n      <div className=\"container mx-auto px-4 py-8\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\"\n        >\n          {/* Quantum State Visualization */}\n          <div className=\"bg-gray-900/50 rounded-xl p-6 backdrop-blur\">\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">\n              Quantum Field\n            </h2>\n            <QuantumStateVisualizer\n              state={quantumState}\n              metrics={metrics}\n              className=\"w-full h-64\"\n            />\n          </div>\n\n          {/* Metrics Display */}\n          <div className=\"space-y-6\">\n            <div className=\"bg-gray-900/50 rounded-xl p-6 backdrop-blur\">\n              <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">\n                Quantum Metrics\n              </h2>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <QuantumCoherenceGauge\n                  value={metrics.coherence}\n                  label=\"Coherence\"\n                  className=\"h-32\"\n                />\n                <QuantumCoherenceGauge\n                  value={metrics.stability}\n                  label=\"Stability\"\n                  color=\"cyan\"\n                  className=\"h-32\"\n                />\n                <QuantumCoherenceGauge\n                  value={metrics.resonance}\n                  label=\"Resonance\"\n                  color=\"violet\"\n                  className=\"h-32\"\n                />\n                <QuantumCoherenceGauge\n                  value={metrics.consciousness}\n                  label=\"Consciousness\"\n                  color=\"emerald\"\n                  className=\"h-32\"\n                />\n              </div>\n            </div>\n\n            {/* Interaction Controls */}\n            <motion.button\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n              onClick={handleQuantumInteraction}\n              className=\"w-full py-4 px-6 rounded-xl bg-purple-600 hover:bg-purple-700 \n                       text-white font-semibold transition-colors\"\n            >\n              Stabilize Quantum Field\n            </motion.button>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n};\n\nexport default CyberpunkQuantumVault;"],"names":["sizes","sm","width","height","fontSize","md","lg","QuantumCoherenceGauge","value","size","className","gaugeRef","useRef","useEffect","current","color","style","setProperty","getStatusText","React","createElement","ref","motion","div","background","backgroundImage","initial","animate","transition","duration","ease","boxShadow","opacity","toFixed","Array","map","_","i","key","x","delay","repeat","Infinity","memo","QuantumStateVisualizer","state","metrics","canvasRef","canvas","ctx","getContext","animationFrame","drawQuantumField","fillStyle","fillRect","time","Date","now","beginPath","stability","resonance","wave1","Math","sin","wave2","cos","y","moveTo","lineTo","strokeStyle","coherence","lineWidth","stroke","nodeCount","baseY","offset","gradient","createRadialGradient","addColorStop","arc","PI","fill","consciousness","fieldRadius","fieldGradient","x1","x2","y1","y2","cpx","cpy","quadraticCurveTo","requestAnimationFrame","cancelAnimationFrame","borderRadius","CyberpunkQuantumVault","identity","useAuth","quantumState","isInitialized","useQuantumState","setMetrics","useState","updateMetrics","quantumStateService","getStabilityMetrics","calculateResonance","updateStability","error","intervalId","setInterval","clearInterval","handleQuantumInteraction","status","getQuantumStatus","updateState","consciousness_alignment","handleQuantumError","Error","label","button","whileHover","scale","whileTap","onClick"],"mappings":"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"}