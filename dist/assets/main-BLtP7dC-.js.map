{"version":3,"mappings":"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AI,EACzBikB,EAAMjkB,EAAS,EAAK,CAAC,EAAI,CAC/B,EAEIA,EAAUA,EAAS,EAAK,EAEjB,EACX,CAEE,SAASsqB,GAAO3D,EAAO,CACrB,OAAAA,EAAQA,EAAQ,EAET,CACX,CAEE,SAAS4D,GAAO5D,EAAO,CACrB,OAAAA,EAAQA,EAAQ,EAEhBR,GAAS,EAETnmB,EAAUA,EAAS,EAAK,EAEjB,CACX,CAIE,IAAIumB,GAAY,CAEdG,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EAEAE,EAEAC,EAEAC,EAEAC,EACAuD,GACAA,GACAA,GACAA,GAEAtD,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EAEAC,EAEAC,EAEAC,EAEAC,EACAkD,GACAA,GACAA,GACAA,GAEAjD,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EAEAE,EAEAC,GAEAC,GAEAC,GACA4C,GACAA,GACAA,GAEA3C,GAEAC,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EAEAC,EAEAC,EAEAC,EAEAC,EAEAsC,GACAA,GACAA,GACArC,EAEAC,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EAEAC,GAEAC,GAEAC,GAEAC,GAEAgC,GACAA,GACAA,GACA/B,GAEAC,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GAEAC,GAEAC,GAEAC,GAEAC,GACA0B,GACAA,GACAA,GAEAzB,GAEAC,GAEAA,GAEAA,GAEAA,GAEAA,GAEAA,GAEAK,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GAEAA,GACAA,GACAA,GAEAI,GACAC,GACAC,GACAC,GACAY,GACAA,GACAA,GACAA,GAEAX,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GAEAC,GAEAC,GAEAC,GAEAC,GAEAC,GAEAC,GAEAG,GAEAC,GACAC,GACAA,GACAA,GAEAC,EACJ,EAIE,MAAO,CACL,MAAOjE,EACX,CACA,cCtzCA,MAAMkE,GAAY1vB,GAAwB,UAE1C2vB,GAAA,GAAa,CACX,QAAS,EACT,QAAS,EACT,YAAa,EACb,YAAa,EACb,MAAO,EACP,IAAK,EACL,IAAK,EACL,aAAc,CAChB,EAEAA,GAAA,IAAc,CACZ,YAAa,EACb,WAAY,EACZ,WAAY,EACZ,WAAY,EACZ,aAAc,EACd,SAAU,EACV,mBAAoB,GACpB,gBAAiB,GACjB,gBAAiB,GACjB,KAAM,GACN,IAAK,GACL,UAAW,GACX,OAAQ,GACR,OAAQ,GACR,KAAM,EACR,EAEAA,GAAA,SAAmB,CACjB,KAAM,EACN,IAAK,GACL,IAAK,GACL,KAAM,GACN,MAAO,GACP,WAAY,EACd,EAEAA,GAAA,OAAiB,CACf,MAAO,GACP,KAAM,GACN,KAAM,GACN,UAAW,EACb,EAEAA,GAAA,KAAe,CACb,KAAM,OAAO,MAAM,EACnB,UAAW,OAAO,OAAO,EACzB,OAAQ,OAAO,QAAQ,EACvB,MAAO,OAAO,OAAO,EACrB,OAA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","names":["m","require$$0","LoadingFallback","className","children","_jsx","motion","div","animate","scale","rotate","transition","duration","repeat","Infinity","ease","initial","opacity","ErrorBoundary","React","Component","constructor","props","state","hasError","error","getDerivedStateFromError","componentDidCatch","errorInfo","render","onClick","setState","LandingPage","lazy","__vitePreload","AnimaPage","GenesisPage","NeuralLinkPage","AdminManagement","withSuspense","Suspense","fallback","router","createBrowserRouter","path","element","Navigate","to","replace","future","v7_startTransition","base64Js","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","code","i","len","getLens","b64","validLen","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","extraBytes","parts","maxChunkLength","len2","ieee754","buffer","offset","isLE","mLen","nBytes","e","eLen","eMax","eBias","nBits","d","s","value","c","rt","base64","require$$1","customInspectSymbol","exports","Buffer","SlowBuffer","K_MAX_LENGTH","typedArraySupport","proto","createBuffer","length","buf","arg","encodingOrOffset","allocUnsafe","from","fromString","fromArrayView","isInstance","fromArrayBuffer","valueOf","b","fromObject","assertSize","size","alloc","fill","encoding","checked","string","actual","fromArrayLike","array","arrayView","copy","byteOffset","obj","numberIsNaN","a","x","y","list","pos","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","str","max","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","indexSize","arrLength","valLength","read","foundIndex","found","j","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","ret","out","hexSliceLookupTable","bytes","newBuf","checkOffset","ext","noAssert","mul","defineBigIntMethod","validateNumber","first","last","boundsError","lo","hi","checkInt","min","maxBytes","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","limit","sub","checkIEEE754","writeFloat","littleEndian","writeDouble","targetStart","errors","E","sym","getMessage","Base","name","range","input","msg","received","addNumericalSeparator","checkBounds","type","INVALID_BASE64_RE","base64clean","units","leadSurrogate","byteArray","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","ReplicaRejectCode","lookupTable","encode","skip","bits","encodeByte","byte","decode","o","decodeChar","char","lookUpTable","getCrc32","crc","t","isBytes","abytes","lengths","aexists","instance","checkFinished","aoutput","crypto","createView","rotr","word","shift","toBytes","data","Hash","wrapConstructor","hashCons","hashC","randomBytes","bytesLength","setBigUint64","view","_32n","_u32_max","wh","wl","h","l","Chi","Maj","HashMD","blockLen","outputLen","padOffset","take","dataView","oview","outLen","finished","destroyed","SHA256_K","SHA256_IV","SHA256_W","SHA256","A","B","C","D","F","G","H","W15","W2","s0","s1","sigma1","T1","T2","SHA224","sha256","sha224","jsSha224","JSON_KEY_PRINCIPAL","SELF_AUTHENTICATING_SUFFIX","ANONYMOUS_SUFFIX","MANAGEMENT_CANISTER_PRINCIPAL_HEX_STR","fromHexString","hexString","_a","toHexString","Principal$1","Principal","_arr","publicKey","sha","other","hex","text","maybePrincipal","canisterIdNoDash","principal","checksumArrayBuf","checksum","matches","cmp","AgentError","message","concat","buffers","result","acc","curr","index","PipeArrayBuffer","bufFromBufLike","amount","v","uint8ToBuf","bufLike","idlHash","idlLabelToId","label","eob","safeRead","pipe","safeReadUint8","lebEncode","Pipe","lebDecode","weight","slebEncode","isNeg","getLowerBytes","slebDecode","pipeView","writeUIntLE","writeIntLE","readUIntLE","readIntLE","iexp2","nBig","magicNumber","toReadableString_max","zipWith","xs","ys","f","TypeTable","idx","knot","knotIdx","typeName","Visitor","ty","fields","components","Type","toReadableString","typeTable","PrimitiveType","ConstructType","RecClass","EmptyClass","UnknownClass","decodedValue","typeFunc","BoolClass","NullClass","ReservedClass","TextClass","IntClass","NatClass","FloatClass","_bits","opcode","FixedIntClass","ok","FixedNatClass","VecClass","_type","encoded","opCode","vec","rets","OptClass","opt","RecordClass","key","k","values","bufs","T","_","record","expectedRecordIdx","actualRecordIdx","hash","expectKey","expectType","expectedId","actualId","TupleClass","_components","tuple","wireType","VariantClass","variant","wireHash","decodePrincipalId","PrincipalId","PrincipalClass","FuncClass","argTypes","retTypes","annotations","types","methodName","canister","method","methodLen","argLen","args","retLen","annLen","anns","annon","ann","ServiceClass","func","meths","labelBuf","labelLen","_key","magic","typs","vals","magicBuffer","readTypeTable","objectLength","prevHash","argLength","returnValues","returnValuesLength","annotationLength","servLength","methods","nameLength","funcName","funcType","rawList","rawTable","rawTypes","Rec","getType","Null","Bool","Nat","Int","Nat8","Nat16","Nat32","Nat64","Int8","Int16","Int32","Int64","Float32","Float64","Text","Reserved","Empty","buildType","entry","Vec","Opt","Record","Tuple","Variant","Func","rec","typeRef","Service","ind","Unknown","globalObject","BigNumber","isNumeric","mathceil","mathfloor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","clone","configObject","convertBase","parseNumeric","P","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","ALPHABET","alphabetHasNormalDecimalDigits","caseChanged","isNum","intCheck","round","p","maxOrMin","pow2_53","random53bitInt","dp","rand","sum","decimal","toBaseOut","baseIn","baseOut","arrL","sign","callerIsToString","r","xc","rm","toFixedPoint","coeffToString","multiply","base","temp","xlo","xhi","carry","klo","khi","compare","aL","bL","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","yc","bitFloor","format","id","c0","ne","toExponential","normalise","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","p1","p2","sd","ni","rd","pows10","half","isModExp","nIsBig","nIsNeg","nIsOdd","isOdd","xLTy","xe","ye","xcL","ycL","ylo","yhi","zc","sqrtBase","rep","g1","g2","groupSeparator","intPart","fractionPart","intDigits","md","d0","d1","d2","exp","n0","n1","z","zs","module","this","decoder_asm","stdlib","foreign","heap","pushInt","pushInt32","pushInt32Neg","pushInt64","pushInt64Neg","pushFloat","pushFloatSingle","pushFloatDouble","pushTrue","pushFalse","pushUndefined","pushNull","pushInfinity","pushInfinityNeg","pushNaN","pushNaNNeg","pushArrayStart","pushArrayStartFixed","pushArrayStartFixed32","pushArrayStartFixed64","pushObjectStart","pushObjectStartFixed","pushObjectStartFixed32","pushObjectStartFixed64","pushByteString","pushByteStringStart","pushUtf8String","pushUtf8StringStart","pushSimpleUnassigned","pushTagStart","pushTagStart4","pushTagStart8","pushTagUnassigned","pushBreak","pow","inputLength","parse","jumpTable","readUInt16","readUInt32","INT_P","octet","UINT_P_8","UINT_P_16","UINT_P_32","UINT_P_64","INT_N","UINT_N_8","UINT_N_16","UINT_N_32","UINT_N_64","BYTE_STRING","step","BYTE_STRING_8","BYTE_STRING_16","BYTE_STRING_32","BYTE_STRING_64","BYTE_STRING_BREAK","UTF8_STRING","UTF8_STRING_8","UTF8_STRING_16","UTF8_STRING_32","UTF8_STRING_64","UTF8_STRING_BREAK","ARRAY","ARRAY_8","ARRAY_16","ARRAY_32","ARRAY_64","ARRAY_BREAK","MAP","MAP_8","MAP_16","MAP_32","MAP_64","MAP_BREAK","TAG_KNOWN","TAG_BIGNUM_POS","TAG_BIGNUM_NEG","TAG_FRAC","TAG_BIGNUM_FLOAT","TAG_UNASSIGNED","TAG_BASE64_URL","TAG_BASE64","TAG_BASE16","TAG_MORE_1","TAG_MORE_2","TAG_MORE_4","TAG_MORE_8","SIMPLE_UNASSIGNED","SIMPLE_FALSE","SIMPLE_TRUE","SIMPLE_NULL","SIMPLE_UNDEFINED","SIMPLE_BYTE","SIMPLE_FLOAT_HALF","g","mant","SIMPLE_FLOAT_SINGLE","SIMPLE_FLOAT_DOUBLE","ERROR","BREAK","Bignumber","constants","require$$2","SHIFT32","SHIFT16","MAX_SAFE_HIGH","toHex","keys","f1","f2","u32","u","s16","lenA","lenB","count","MT","SIMPLE","SYMS","Simple$1","Simple","gen","hasParent","simple","Tagged$1","Tagged","tag","err","converters","er","tagged","defaultBase","URL","URLWithLegacySupport$2","url","host","hostname","href","origin","password","pathname","port","protocol","search","searchParams","username","userPass","auth","urlBrowser","URLWithLegacySupport","relative","location","protocolMap","defaultProtocol","urlParsed","URLSearchParams","isoUrl","parser","require$$3","utils","require$$4","require$$5","require$$6","require$$7","require$$8","Decoder$1","Decoder","opts","global","hasChildren","tagNumber","typ","raw","len1","len3","len4","enc","decoder","Diagnose","fl","map","collectObject","diagnose","NUMBYTES","TAG","HALF","FLOAT","DOUBLE","TRUE","FALSE","UNDEFINED","NULL","MAXINT_BN","BUF_NAN","BUF_INF_NEG","BUF_INF_POS","toType","Encoder","options","addTypes","fun","old","b2","b4","mt","orig","dec","slide","keyLength","resultLength","resultMethod","encoder","hexRe","fromHex","b1","u1","u2","bufEquals","hashValue","borc","hashString","hashOfMap","requestIdOf","request","sorted","hashedKey","hashedValue","k1","k2","concatenated","__rest","domainSeparator","SignIdentity","body","requestId","AnonymousIdentity","MAX_U64_NUMBER","_concat","newBuffer","_serializeValue","major","minor","_serializeNumber","_serializeString","utf8","charcode","uSmall","u8","radix","u16","u64","iSmall","i8","i32","i64","done","newI64","number","items","stable","entries","keyA","keyB","singleFloat","single","doubleFloat","bool","true_","false_","null_","undefined_","__importStar","mod","serializer","cbor","BufferClasses","JsonDefaultCborEncoder","_serializer","_stable","item","ToCborEncoder","CborSerializer","chosenEncoder","SelfDescribeCborSerializer","__export","PrincipalEncoder","cbor.value","BufferEncoder","BigIntEncoder","CborTag","decodePositiveBigInt","Uint8ArrayDecoder","randomNumber","SubmitRequestType","makeNonce","rand1","rand2","rand3","rand4","NANOSECONDS_PER_MILLISECONDS","REPLICA_PERMITTED_DRIFT_MILLISECONDS","Expiry","deltaInMSec","rounded_down_nanos","makeNonceTransform","nonceFn","headers","httpHeadersTransform","headerFields","AgentHTTPResponseError","response","_0n","_1n","_2n","abool","title","hexes","bytesToHex","hexToNumber","asciis","asciiToBase16","ch","hexToBytes","hl","al","ai","n2","bytesToNumberBE","bytesToNumberLE","numberToBytesBE","numberToBytesLE","ensureBytes","expectedLength","concatBytes","arrays","pad","isPosBig","inRange","aInRange","bitLen","bitGet","bitMask","validatorFns","object","validateObject","validators","optValidators","checkField","fieldName","isOptional","checkVal","notImplemented","memoized","computed","_3n","_4n","_5n","_8n","power","modulo","pow2","invert","tonelliShanks","legendreC","Q","S","Z","p1div4","Fp","root","Q1div2","t2","ge","FpSqrt","c1","nv","isNegativeLE","FIELD_FIELDS","validateField","field","FpPow","FpInvertBatch","nums","lastMultiplied","inverted","FpLegendre","order","legendreConst","nLength","nBitLength","_nBitLength","nByteLength","Field","ORDER","redef","BITS","BYTES","sqrtP","lhs","rhs","lst","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","mapHashToField","fieldLen","minLen","reduced","os2ip","i2osp","anum","strxor","expand_message_xmd","DST","lenInBytes","b_in_bytes","r_in_bytes","ell","DST_prime","Z_pad","l_i_b_str","b_0","expand_message_xof","dkLen","hash_to_field","expand","_DST","log2p","L","len_in_bytes","prb","elm_offset","tv","isogenyMap","COEFF","xNum","xDen","yNum","yDen","createHasher","Point","mapToCurve","def","u0","scalars","constTimeNegate","condition","neg","validateW","W","calcWOpts","windows","windowSize","validateMSMPoints","points","validateMSMScalars","pointPrecomputes","pointWindowSizes","getW","wNAF","elm","window","precomputes","mask","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","transform","comp","prev","pippenger","fieldN","zero","MASK","buckets","lastBits","scalar","resI","sumI","validateBasic","curve","validatePointOpts","ut.validateObject","endo","weierstrassPoints","CURVE","Fn","mod.Field","_c","point","_isCompressed","ut.concatBytes","fromBytes","tail","weierstrassEquation","x2","x3","isWithinCurveOrder","ut.inRange","normPrivateKeyToScalar","wrapPrivateKey","N","ut.isBytes","ut.bytesToHex","ut.bytesToNumberBE","mod.mod","ut.aInRange","assertPrjPoint","toAffineMemo","iz","is0","ax","ay","zz","assertValidMemo","left","right","px","py","pz","toInv","privateKey","wnaf","X1","Y1","Z1","X2","Y2","Z2","U1","U2","b3","X3","Y3","Z3","t0","t1","t3","t4","t5","sc","I","k1neg","k2neg","k1p","k2p","fake","f1p","f2p","cofactor","isTorsionFree","clearCofactor","isCompressed","SWUFpSqrtRatio","_2n_pow_c1_1","_2n_pow_c1","c2","c3","c4","c5","c6","c7","sqrtRatio","tv1","tv2","tv3","tv5","tv4","isQR","tvv5","e1","y1","y2","mapToCurveSimpleSWU","mod.validateField","tv6","isValid","NAfDecomposition","bls","Fr","Fp2","Fp6","Fp12","BLS_X_IS_NEGATIVE","TWIST","G1_","G1","G2_","G2","lineFunction","Px","Py","Fp2div2","pointDouble","Rx","Ry","Rz","pointAdd","Qx","Qy","ATE_NAF","calcPairingPrecomputes","negQy","bit","cur","millerLoopBatch","pairs","withFinalExponent","f12","ellLen","pairingBatch","Qa","pairing","ShortSignature","Signature","normP1","normP1Hash","htfOpts","normP2","normP2Hash","getPublicKey","getPublicKeyForShortSignatures","msgPoint","sigPoint","signShortSignature","verify","signature","Hm","verifyShortSignature","aNonEmpty","aggregatePublicKeys","publicKeys","aggAffine","aggregateSignatures","signatures","aggregateShortSignatures","verifyBatch","messages","sig","nMessages","nPublicKeys","messagePubKeyMap","pub","paired","groupPublicKey","calcFrobeniusCoefficients","nonResidue","modulus","degree","divisor","_divisor","towerModulus","powers","qPower","psiFrobenius","PSI_X","PSI_Y","psi","PSI2_X","PSI2_Y","psi2","mapAffine","affine","G2psi","G2psi2","tower12","FpNONRESIDUE","mod.FpLegendre","Fpdiv2","FP2_FROBENIUS_COEFFICIENTS","Fp2Add","r0","r1","Fp2Subtract","Fp2Multiply","o0","o1","Fp2Square","Fp2fromBigTuple","fps","FP2_ORDER","Fp2Nonresidue","mod.FpPow","mod.FpInvertBatch","factor","legendre","a0","candidateSqrt","x1","re1","im1","re2","im2","x0","sign_0","zero_0","sign_1","Fp6Add","r2","Fp6Subtract","Fp6Multiply","Fp6Square","FP6_FROBENIUS_COEFFICIENTS_1","FP6_FROBENIUS_COEFFICIENTS_2","b0","FP12_FROBENIUS_COEFFICIENTS","Fp12Add","Fp12Subtract","Fp12Multiply","Fp12Square","ab","Fp4Square","a2","coeff","o4","o3","BLS_X","BLS_X_LEN","c0c0","c0c1","c0c2","c1c0","c1c1","c1c2","t6","t7","t8","t9","t2_t5_pow_q2","t4_t1_pow_q3","t6_t1c_pow_q1","t7_t3c_t1","isogenyMapG2","pair","isogenyMapG1","G2_SWU","G1_SWU","htfDefaults","COMPRESSED_ZERO","setMask","parseMask","compressed","infinity","sort","signatureG1ToRawBytes","isZero","bls12_381","signatureG2ToRawBytes","concatB","y0","z2","cubicRootOfUnityModP","phi","compressedValue","aflag","slc","x_1","x_0","Y_bit","flag","z1","aflag1","isGreater","blsVerify","pk","primaryKey","decodeLeb128","decodeTime","decoded","CertificateVerificationError","reason","NodeType","isBufferGreaterThan","a8","b8","Certificate","certificate","_rootKey","_canisterId","_blsVerify","_maxAgeInMinutes","cbor.decode","cert","bls.blsVerify","lookup_path","rootHash","reconstruct","derKey","extractDER","domain_sep","sigVer","lookupTime","lookupResultToBuffer","FIVE_MINUTES_IN_MSEC","MAX_AGE_IN_MSEC","now","earliestCertificateTime","fiveMinutesFromNow","certTime","check_canister_ranges","publicKeyLookup","DER_PREFIX","KEY_LENGTH","prefix","LookupStatus","LabelLookupStatus","tree","lookupResult","find_label","flatten_forks","leftLookupResult","rightLookupResult","params","canisterId","subnetId","rangeLookup","CustomPath","decodeStrategy","agent","paths","uniquePaths","encodedPaths","encodePath","status","promises","fetchNodeKeys","decodeControllers","decodeHex","decodeCbor","decodeUtf8","root_key","Cbor.decode","delegation","subnetLookupResult","nodeForks","nodeKeys","fork","node_id","publicKeyLookupResult","derEncodedPublicKey","canisterBuffer","metaPath","U32_MASK64","fromBig","le","split","Ah","Al","toBig","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","sha512","VERIFY_DEFAULT","validateOpts","twistedEdwards","curveDef","CURVE_ORDER","prehash","cHash","modP","uvRatio","adjustScalarBytes","domain","ctx","phflag","aCoordinate","assertPoint","X","Y","Z4","aX2","XY","ZT","ex","ey","ez","et","X1Z2","X2Z1","Y1Z2","Y2Z1","x1y1","T3","zip215","normed","lastByte","ut.bytesToNumberLE","isXOdd","isLastByteOdd","privKey","getExtendedPublicKey","ut.numberToBytesLE","modN","modN_LE","hashed","head","pointBytes","hashDomainToScalar","context","msgs","R","verifyOpts","SB","ED25519_P","ED25519_SQRT_M1","ed25519_pow_2_252_3","_10n","_20n","_40n","_80n","b5","b10","b20","b40","b80","b160","b240","b250","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519Defaults","ed25519","__classPrivateFieldSet","receiver","kind","__classPrivateFieldGet","_ExpirableMap_inner","_ExpirableMap_expirationTime","_b","ExpirableMap","source","expirationTime","currentTime","iterator","callbackfn","thisArg","encodeLenBytes","encodeLen","decodeLenBytes","decodeLen","lenBytes","ED25519_OID","wrapDER","payload","oid","bitStringHeaderLength","unwrapDER","derEncoded","expect","payloadLen","_Ed25519PublicKey_rawKey","_Ed25519PublicKey_derKey","Ed25519PublicKey$1","Ed25519PublicKey","rawKey","unwrapped","Observable","observer","rest","ObservableLog","_ExponentialBackoff_currentInterval","_ExponentialBackoff_randomizationFactor","_ExponentialBackoff_multiplier","_ExponentialBackoff_maxInterval","_ExponentialBackoff_startTime","_ExponentialBackoff_maxElapsedTime","_ExponentialBackoff_maxIterations","_ExponentialBackoff_date","_ExponentialBackoff_count","RANDOMIZATION_FACTOR","MULTIPLIER","INITIAL_INTERVAL_MSEC","MAX_INTERVAL_MSEC","MAX_ELAPSED_TIME_MSEC","MAX_ITERATIONS","ExponentialBackoff","initialInterval","randomizationFactor","multiplier","maxInterval","maxElapsedTime","maxIterations","date","delta","_HttpAgent_instances","_HttpAgent_retryTimes","_HttpAgent_backoffStrategy","_HttpAgent_waterMark","_HttpAgent_queryPipeline","_HttpAgent_updatePipeline","_HttpAgent_subnetKeys","_HttpAgent_verifyQuerySignatures","_HttpAgent_requestAndRetryQuery","_HttpAgent_requestAndRetry","_HttpAgent_verifyQueryResponse","RequestStatusResponseStatus","DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS","IC_ROOT_KEY","IC0_DOMAIN","IC0_SUB_DOMAIN","ICP0_DOMAIN","ICP0_SUB_DOMAIN","ICP_API_DOMAIN","ICP_API_SUB_DOMAIN","HttpDefaultFetchError","IdentityInvalidError","getDefaultFetch","defaultFetch","HttpAgent","queryResponse","subnetStatus","timestamp","identity","nodeId","reply","reject_code","reject_message","error_code","separatorWithHash","pubKey","knownHosts","remoteHosts","knownHost","defaultBackoffFactory","log","priority","ecid","sender","ingress_expiry","submit","transformedRequest","cbor.encode","backoff","responseBuffer","responseBody","makeQuery","getSubnetStatus","query","updatedSubnetStatus","decodedResponse","parsedTime","timeLookup","CanisterStatus","callTime","replicaTime","effectiveCanisterId","subnetResponse","tries","delay","resolve","fetchResponse","timeStampInMs","responseText","errorMessage","ProxyMessageKind","getDefaultAgent","defaultStrategy","chain","conditionalDelay","once","timeout","timeInMsec","startingThrottleInMsec","backoffFactor","currentThrottling","strategies","pollForResponse","strategy","currentRequest","maybeBuf","rejectCode","rejectMessage","managementCanisterIdl","IDL","bitcoin_network","bitcoin_address","bitcoin_get_balance_args","satoshi","bitcoin_get_balance_result","bitcoin_get_current_fee_percentiles_args","millisatoshi_per_byte","bitcoin_get_current_fee_percentiles_result","bitcoin_get_utxos_args","block_hash","outpoint","utxo","bitcoin_get_utxos_result","bitcoin_send_transaction_args","canister_id","canister_info_args","change_origin","change_details","change","canister_info_result","canister_status_args","log_visibility","definite_canister_settings","canister_status_result","clear_chunk_store_args","canister_settings","create_canister_args","create_canister_result","delete_canister_args","deposit_cycles_args","ecdsa_curve","ecdsa_public_key_args","ecdsa_public_key_result","fetch_canister_logs_args","canister_log_record","fetch_canister_logs_result","http_header","http_request_result","http_request_args","canister_install_mode","chunk_hash","install_chunked_code_args","wasm_module","install_code_args","node_metrics_history_args","node_metrics","node_metrics_history_result","provisional_create_canister_with_cycles_args","provisional_create_canister_with_cycles_result","provisional_top_up_canister_args","raw_rand_result","sign_with_ecdsa_args","sign_with_ecdsa_result","start_canister_args","stop_canister_args","stored_chunks_args","stored_chunks_result","uninstall_code_args","update_settings_args","upload_chunk_args","upload_chunk_result","ActorCallError","QueryCallRejectedError","UpdateCallRejectedError","metadataSymbol","Actor","metadata","actor","config","mode","wasmModule","getManagementCanister","settings","settingsToCanisterSettings","interfaceFactory","service","CanisterActor","DEFAULT_ACTOR_CONFIG","ACTOR_METHOD_WITH_HTTP_DETAILS","_createActorMethod","configuration","decodeReturnValue","IDL.decode","strategy.defaultStrategy","caller","cid","IDL.encode","pollingStrategyFactory","pollStrategy","responseBytes","shouldIncludeHttpDetails","handler","_methodName","_Ed25519KeyIdentity_publicKey","_Ed25519KeyIdentity_privateKey","isObject","maybeKey","Ed25519KeyIdentity","seed","sk","publicKeyDer","privateKeyRaw","json","secretKey","challenge","blob","CryptoError","_getEffectiveCrypto","subtleCrypto","ECDSAKeyIdentity","keyPair","extractable","keyUsages","effectiveCrypto","_PartialIdentity_inner","PartialIdentity","inner","_PartialDelegationIdentity_delegation","requestDomainSeparator","_parseBlob","Delegation","pubkey","expiration","targets","_createSingleDelegation","DelegationChain","delegations","parsedDelegations","signedDelegation","DelegationIdentity","_inner","_delegation","PartialDelegationIdentity","isDelegationValid","checks","scopes","scope","none","PubKeyCoseAlgo","events","IdleManager","onIdle","idleTimeout","_resetTimer","debounce","wait","later","scroll","callback","cb","exit","instanceOfAny","constructors","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","getCursorAdvanceMethods","cursorRequestMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","promisifyRequest","promise","reject","unlisten","success","wrap","cacheDonePromiseForTransaction","tx","complete","idbProxyTraps","prop","replaceTraps","wrapFunction","storeNames","unwrap","transformCachableValue","newValue","openDB","version","blocked","upgrade","blocking","terminated","openPromise","event","db","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","storeName","oldTraps","AUTH_DB_NAME","OBJECT_STORE_NAME","_openDbStore","dbName","isBrowser","KEY_STORAGE_DELEGATION","KEY_STORAGE_KEY","database","_getValue","_setValue","_removeValue","IdbKeyVal","_db","_storeName","DB_VERSION","_IdbStorage_options","KEY_VECTOR","LocalStorage","_localStorage","ls","IdbStorage","IDENTITY_PROVIDER_DEFAULT","IDENTITY_PROVIDER_ENDPOINT","ECDSA_KEY_LABEL","ED25519_KEY_LABEL","INTERRUPT_CHECK_INTERVAL","ERROR_USER_INTERRUPT","AuthClient","_identity","_chain","_storage","idleManager","_createOptions","_idpWindow","_eventHandler","storage","keyType","maybeIdentityStorage","fallbackLocalStorage","localChain","localKey","chainStorage","_deleteStorage","idleOptions","onSuccess","delegationChain","_d","defaultTimeToLive","identityProviderUrl","checkInterruption","onError","AuthContext","createContext","useAuth","useContext","Error","AuthProvider","authClient","setAuthClient","useState","isAuthenticated","setIsAuthenticated","isInitialized","setIsInitialized","useEffect","client","create","isAuthed","login","identityProvider","process","II_URL","logout","Provider","idlFactory","TokenIdentifier","NFTPersonality","AnimaState","ConsciousnessLevel","ActionResult","createActor","agentOptions","console","warn","DFX_NETWORK","fetchRootKey","catch","actorOptions","IS_LOCAL","CANISTER_IDS","anima","ANIMA_CANISTER_ID","assets","ASSETS_CANISTER_ID","HOST","ICManager","initialized","initializationPromise","retryCount","maxRetries","getInstance","initialize","initializeInternal","disableIdle","disableDefaultIdleCallback","getIdentity","verifyQuerySignatures","ic","setTimeout","features","verifyFeatures","Promise","getActor","getAgent","maxTimeToLive","BigInt","replaceIdentity","then","icManager","verifyICFeatures","AppContent","initState","setInitState","isLoading","env","buildTime","Date","toISOString","reload","RouterProvider","App","RootErrorFallback","initializeApp","rootElement","document","getElementById","ReactDOM","createRoot","StrictMode","FallbackComponent"],"ignoreList":[0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"sources":["../../node_modules/react-dom/client.js","../../src/components/ui/LoadingFallback.tsx","../../src/components/error-boundary/ErrorBoundary.jsx","../../src/router.tsx","../../node_modules/base64-js/index.js","../../node_modules/ieee754/index.js","../../node_modules/buffer/index.js","../../node_modules/@dfinity/agent/lib/esm/agent/api.js","../../node_modules/@dfinity/principal/lib/esm/utils/base32.js","../../node_modules/@dfinity/principal/lib/esm/utils/getCrc.js","../../node_modules/@noble/hashes/esm/_assert.js","../../node_modules/@noble/hashes/esm/crypto.js","../../node_modules/@noble/hashes/esm/utils.js","../../node_modules/@noble/hashes/esm/_md.js","../../node_modules/@noble/hashes/esm/sha256.js","../../node_modules/@dfinity/principal/lib/esm/utils/sha224.js","../../node_modules/@dfinity/principal/lib/esm/index.js","../../node_modules/@dfinity/agent/lib/esm/errors.js","../../node_modules/@dfinity/candid/lib/esm/utils/buffer.js","../../node_modules/@dfinity/candid/lib/esm/utils/hash.js","../../node_modules/@dfinity/candid/lib/esm/utils/leb128.js","../../node_modules/@dfinity/candid/lib/esm/utils/bigint-math.js","../../node_modules/@dfinity/candid/lib/esm/idl.js","../../node_modules/borc/node_modules/buffer/index.js","../../node_modules/bignumber.js/bignumber.js","../../node_modules/borc/src/decoder.asm.js","../../node_modules/borc/src/constants.js","../../node_modules/borc/src/utils.js","../../node_modules/borc/src/simple.js","../../node_modules/borc/src/tagged.js","../../node_modules/iso-url/src/url-browser.js","../../node_modules/iso-url/src/relative.js","../../node_modules/iso-url/index.js","../../node_modules/borc/src/decoder.js","../../node_modules/borc/src/diagnose.js","../../node_modules/borc/src/encoder.js","../../node_modules/borc/src/index.js","../../node_modules/@dfinity/agent/lib/esm/utils/buffer.js","../../node_modules/@dfinity/agent/lib/esm/request_id.js","../../node_modules/@dfinity/agent/lib/esm/auth.js","../../node_modules/simple-cbor/src/value.js","../../node_modules/simple-cbor/src/serializer.js","../../node_modules/simple-cbor/src/index.js","../../node_modules/@dfinity/agent/lib/esm/cbor.js","../../node_modules/@dfinity/agent/lib/esm/utils/random.js","../../node_modules/@dfinity/agent/lib/esm/agent/http/types.js","../../node_modules/@dfinity/agent/lib/esm/agent/http/transforms.js","../../node_modules/@dfinity/agent/lib/esm/agent/http/errors.js","../../node_modules/@noble/curves/esm/abstract/utils.js","../../node_modules/@noble/curves/esm/abstract/modular.js","../../node_modules/@noble/curves/esm/abstract/hash-to-curve.js","../../node_modules/@noble/curves/esm/abstract/curve.js","../../node_modules/@noble/curves/esm/abstract/weierstrass.js","../../node_modules/@noble/curves/esm/abstract/bls.js","../../node_modules/@noble/curves/esm/abstract/tower.js","../../node_modules/@noble/curves/esm/bls12-381.js","../../node_modules/@dfinity/agent/lib/esm/utils/bls.js","../../node_modules/@dfinity/agent/lib/esm/utils/leb.js","../../node_modules/@dfinity/agent/lib/esm/certificate.js","../../node_modules/@dfinity/agent/lib/esm/canisterStatus/index.js","../../node_modules/@noble/hashes/esm/_u64.js","../../node_modules/@noble/hashes/esm/sha512.js","../../node_modules/@noble/curves/esm/abstract/edwards.js","../../node_modules/@noble/curves/esm/ed25519.js","../../node_modules/@dfinity/agent/lib/esm/utils/expirableMap.js","../../node_modules/@dfinity/agent/lib/esm/der.js","../../node_modules/@dfinity/agent/lib/esm/public_key.js","../../node_modules/@dfinity/agent/lib/esm/observable.js","../../node_modules/@dfinity/agent/lib/esm/polling/backoff.js","../../node_modules/@dfinity/agent/lib/esm/agent/http/index.js","../../node_modules/@dfinity/agent/lib/esm/agent/proxy.js","../../node_modules/@dfinity/agent/lib/esm/agent/index.js","../../node_modules/@dfinity/agent/lib/esm/polling/strategy.js","../../node_modules/@dfinity/agent/lib/esm/polling/index.js","../../node_modules/@dfinity/agent/lib/esm/canisters/management_idl.js","../../node_modules/@dfinity/agent/lib/esm/actor.js","../../node_modules/@dfinity/identity/lib/esm/identity/ed25519.js","../../node_modules/@dfinity/identity/lib/esm/identity/ecdsa.js","../../node_modules/@dfinity/identity/lib/esm/identity/partial.js","../../node_modules/@dfinity/identity/lib/esm/identity/delegation.js","../../node_modules/@dfinity/identity/lib/esm/identity/webauthn.js","../../node_modules/@dfinity/auth-client/lib/esm/idleManager.js","../../node_modules/idb/build/wrap-idb-value.js","../../node_modules/idb/build/index.js","../../node_modules/@dfinity/auth-client/lib/esm/db.js","../../node_modules/@dfinity/auth-client/lib/esm/storage.js","../../node_modules/@dfinity/auth-client/lib/esm/index.js","../../src/contexts/auth-context.tsx","../../src/declarations/anima/anima.did.js","../../src/declarations/anima/index.js","../../src/ic-init.ts","../../src/components/App.tsx","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React from 'react';\nimport { motion } from 'framer-motion';\n\nexport const LoadingFallback: React.FC = () => {\n  return (\n    <div className=\"min-h-screen bg-black flex items-center justify-center\">\n      <div className=\"text-center\">\n        <motion.div\n          animate={{\n            scale: [1, 1.2, 1],\n            rotate: [0, 360],\n          }}\n          transition={{\n            duration: 2,\n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }}\n          className=\"w-16 h-16 mb-4 mx-auto\"\n        >\n          <div className=\"w-full h-full rounded-full border-t-2 border-b-2 border-blue-500\" />\n        </motion.div>\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 0.5 }}\n          className=\"text-white text-lg\"\n        >\n          <p>Initializing Quantum Interface...</p>\n          <p className=\"text-sm text-blue-400 mt-2\">Please wait while we connect to the Internet Computer</p>\n        </motion.div>\n      </div>\n    </div>\n  );\n};","import React from 'react';\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('Error caught by boundary:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"p-4 bg-red-900/20 border border-red-800 rounded-lg\">\n          <h3 className=\"text-red-500 font-bold mb-2\">System Malfunction</h3>\n          <p className=\"text-red-400 text-sm\">\n            Neural interface disrupted. Attempting recovery...\n          </p>\n          <button\n            onClick={() => this.setState({ hasError: false, error: null })}\n            className=\"mt-4 px-4 py-2 bg-red-800 hover:bg-red-700 rounded text-sm text-white\"\n          >\n            Reset Interface\n          </button>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}","import { createBrowserRouter, RouterProvider, Navigate } from 'react-router-dom';\nimport { Suspense, lazy } from 'react';\nimport { LoadingFallback } from './components/ui/LoadingFallback';\nimport { ErrorBoundary } from './components/error-boundary/ErrorBoundary';\n\n// Lazy load components\nconst LandingPage = lazy(() => import('./components/pages/LandingPage'));\nconst AnimaPage = lazy(() => import('./components/pages/AnimaPage'));\nconst GenesisPage = lazy(() => import('./components/pages/GenesisPage'));\nconst NeuralLinkPage = lazy(() => import('./components/pages/NeuralLinkPage'));\nconst AdminManagement = lazy(() => import('./components/admin/AdminManagement'));\n\nconst withSuspense = (Component: React.ComponentType<any>) => (\n  <Suspense fallback={<LoadingFallback />}>\n    <ErrorBoundary>\n      <Component />\n    </ErrorBoundary>\n  </Suspense>\n);\n\nexport const router = createBrowserRouter([\n  {\n    path: '/',\n    element: withSuspense(LandingPage),\n  },\n  {\n    path: '/anima',\n    element: withSuspense(AnimaPage),\n  },\n  {\n    path: '/genesis',\n    element: withSuspense(GenesisPage),\n  },\n  {\n    path: '/neural-link',\n    element: withSuspense(NeuralLinkPage),\n  },\n  {\n    path: '/admin',\n    element: withSuspense(AdminManagement),\n  },\n  {\n    path: '*',\n    element: <Navigate to=\"/\" replace />,\n  }\n], {\n  future: {\n    v7_startTransition: true,\n  },\n});","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/**\n * Codes used by the replica for rejecting a message.\n * See {@link https://sdk.dfinity.org/docs/interface-spec/#reject-codes | the interface spec}.\n */\nexport var ReplicaRejectCode;\n(function (ReplicaRejectCode) {\n    ReplicaRejectCode[ReplicaRejectCode[\"SysFatal\"] = 1] = \"SysFatal\";\n    ReplicaRejectCode[ReplicaRejectCode[\"SysTransient\"] = 2] = \"SysTransient\";\n    ReplicaRejectCode[ReplicaRejectCode[\"DestinationInvalid\"] = 3] = \"DestinationInvalid\";\n    ReplicaRejectCode[ReplicaRejectCode[\"CanisterReject\"] = 4] = \"CanisterReject\";\n    ReplicaRejectCode[ReplicaRejectCode[\"CanisterError\"] = 5] = \"CanisterError\";\n})(ReplicaRejectCode || (ReplicaRejectCode = {}));\n//# sourceMappingURL=api.js.map","const alphabet = 'abcdefghijklmnopqrstuvwxyz234567';\n// Build a lookup table for decoding.\nconst lookupTable = Object.create(null);\nfor (let i = 0; i < alphabet.length; i++) {\n    lookupTable[alphabet[i]] = i;\n}\n// Add aliases for rfc4648.\nlookupTable['0'] = lookupTable.o;\nlookupTable['1'] = lookupTable.i;\n/**\n * @param input The input array to encode.\n * @returns A Base32 string encoding the input.\n */\nexport function encode(input) {\n    // How many bits will we skip from the first byte.\n    let skip = 0;\n    // 5 high bits, carry from one byte to the next.\n    let bits = 0;\n    // The output string in base32.\n    let output = '';\n    function encodeByte(byte) {\n        if (skip < 0) {\n            // we have a carry from the previous byte\n            bits |= byte >> -skip;\n        }\n        else {\n            // no carry\n            bits = (byte << skip) & 248;\n        }\n        if (skip > 3) {\n            // Not enough data to produce a character, get us another one\n            skip -= 8;\n            return 1;\n        }\n        if (skip < 4) {\n            // produce a character\n            output += alphabet[bits >> 3];\n            skip += 5;\n        }\n        return 0;\n    }\n    for (let i = 0; i < input.length;) {\n        i += encodeByte(input[i]);\n    }\n    return output + (skip < 0 ? alphabet[bits >> 3] : '');\n}\n/**\n * @param input The base32 encoded string to decode.\n */\nexport function decode(input) {\n    // how many bits we have from the previous character.\n    let skip = 0;\n    // current byte we're producing.\n    let byte = 0;\n    const output = new Uint8Array(((input.length * 4) / 3) | 0);\n    let o = 0;\n    function decodeChar(char) {\n        // Consume a character from the stream, store\n        // the output in this.output. As before, better\n        // to use update().\n        let val = lookupTable[char.toLowerCase()];\n        if (val === undefined) {\n            throw new Error(`Invalid character: ${JSON.stringify(char)}`);\n        }\n        // move to the high bits\n        val <<= 3;\n        byte |= val >>> skip;\n        skip += 5;\n        if (skip >= 8) {\n            // We have enough bytes to produce an output\n            output[o++] = byte;\n            skip -= 8;\n            if (skip > 0) {\n                byte = (val << (5 - skip)) & 255;\n            }\n            else {\n                byte = 0;\n            }\n        }\n    }\n    for (const c of input) {\n        decodeChar(c);\n    }\n    return output.slice(0, o);\n}\n//# sourceMappingURL=base32.js.map","// This file is translated to JavaScript from\n// https://lxp32.github.io/docs/a-simple-example-crc32-calculation/\nconst lookUpTable = new Uint32Array([\n    0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,\n    0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,\n    0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n    0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,\n    0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n    0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n    0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,\n    0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,\n    0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n    0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n    0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\n    0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n    0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,\n    0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,\n    0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n    0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,\n    0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,\n    0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n    0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,\n    0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n    0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n    0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\n    0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\n    0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n    0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n    0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,\n    0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n    0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,\n    0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,\n    0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n    0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,\n    0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d,\n]);\n/**\n * Calculate the CRC32 of an ArrayBufferLike.\n * @param buf The BufferLike to calculate the CRC32 of.\n */\nexport function getCrc32(buf) {\n    const b = new Uint8Array(buf);\n    let crc = -1;\n    for (let i = 0; i < b.length; i++) {\n        const byte = b[i];\n        const t = (byte ^ crc) & 0xff;\n        crc = lookUpTable[t] ^ (crc >>> 8);\n    }\n    return (crc ^ -1) >>> 0;\n}\n//# sourceMappingURL=getCrc.js.map","/**\n * Assertion helpers\n * @module\n */\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n// copied from utils\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\nfunction abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\nfunction ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\nfunction aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\nexport { anumber, abytes, ahash, aexists, aoutput };\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n/** The rotate right (circular right shift) operation for uint32 */\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n/** The rotate left (circular left shift) operation for uint32 */\nexport const rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n// The byte swap operation for uint32\nexport const byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n/** Conditionally byte swap if on a big-endian platform */\nexport const byteSwapIfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Convert JS string to byte array.\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('utf8ToBytes expected string, got ' + typeof str);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return crypto.randomBytes(bytesLength);\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { aexists, aoutput } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n/**\n * Merkle-Damgard hash utils.\n * @module\n */\n/**\n * Polyfill for Safari 14\n */\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/**\n * Choice: a ? b : c\n */\nexport const Chi = (a, b, c) => (a & b) ^ (~a & c);\n/**\n * Majority function, true if any two inputs is true\n */\nexport const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\n/** Round constants: first 32 bits of fractional parts of the cube roots of the first 64 primes 2..311). */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n/** Initial state: first 32 bits of fractional parts of the square roots of the first 8 primes 2..19. */\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n/**\n * Temporary buffer, not used to store anything between runs.\n * Named this way because it matches specification.\n */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * Constants taken from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf.\n */\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/** SHA2-256 hash function */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\n/** SHA2-224 hash function */\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","import { sha224 as jsSha224 } from '@noble/hashes/sha256';\n/**\n * Returns the SHA224 hash of the buffer.\n * @param data Arraybuffer to encode\n */\nexport function sha224(data) {\n    return jsSha224.create().update(new Uint8Array(data)).digest();\n}\n//# sourceMappingURL=sha224.js.map","import { decode, encode } from './utils/base32';\nimport { getCrc32 } from './utils/getCrc';\nimport { sha224 } from './utils/sha224';\nexport const JSON_KEY_PRINCIPAL = '__principal__';\nconst SELF_AUTHENTICATING_SUFFIX = 2;\nconst ANONYMOUS_SUFFIX = 4;\nconst MANAGEMENT_CANISTER_PRINCIPAL_HEX_STR = 'aaaaa-aa';\nconst fromHexString = (hexString) => { var _a; return new Uint8Array(((_a = hexString.match(/.{1,2}/g)) !== null && _a !== void 0 ? _a : []).map(byte => parseInt(byte, 16))); };\nconst toHexString = (bytes) => bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\nexport class Principal {\n    constructor(_arr) {\n        this._arr = _arr;\n        this._isPrincipal = true;\n    }\n    static anonymous() {\n        return new this(new Uint8Array([ANONYMOUS_SUFFIX]));\n    }\n    /**\n     * Utility method, returning the principal representing the management canister, decoded from the hex string `'aaaaa-aa'`\n     * @returns {Principal} principal of the management canister\n     */\n    static managementCanister() {\n        return this.fromHex(MANAGEMENT_CANISTER_PRINCIPAL_HEX_STR);\n    }\n    static selfAuthenticating(publicKey) {\n        const sha = sha224(publicKey);\n        return new this(new Uint8Array([...sha, SELF_AUTHENTICATING_SUFFIX]));\n    }\n    static from(other) {\n        if (typeof other === 'string') {\n            return Principal.fromText(other);\n        }\n        else if (Object.getPrototypeOf(other) === Uint8Array.prototype) {\n            return new Principal(other);\n        }\n        else if (typeof other === 'object' &&\n            other !== null &&\n            other._isPrincipal === true) {\n            return new Principal(other._arr);\n        }\n        throw new Error(`Impossible to convert ${JSON.stringify(other)} to Principal.`);\n    }\n    static fromHex(hex) {\n        return new this(fromHexString(hex));\n    }\n    static fromText(text) {\n        let maybePrincipal = text;\n        // If formatted as JSON string, parse it first\n        if (text.includes(JSON_KEY_PRINCIPAL)) {\n            const obj = JSON.parse(text);\n            if (JSON_KEY_PRINCIPAL in obj) {\n                maybePrincipal = obj[JSON_KEY_PRINCIPAL];\n            }\n        }\n        const canisterIdNoDash = maybePrincipal.toLowerCase().replace(/-/g, '');\n        let arr = decode(canisterIdNoDash);\n        arr = arr.slice(4, arr.length);\n        const principal = new this(arr);\n        if (principal.toText() !== maybePrincipal) {\n            throw new Error(`Principal \"${principal.toText()}\" does not have a valid checksum (original value \"${maybePrincipal}\" may not be a valid Principal ID).`);\n        }\n        return principal;\n    }\n    static fromUint8Array(arr) {\n        return new this(arr);\n    }\n    isAnonymous() {\n        return this._arr.byteLength === 1 && this._arr[0] === ANONYMOUS_SUFFIX;\n    }\n    toUint8Array() {\n        return this._arr;\n    }\n    toHex() {\n        return toHexString(this._arr).toUpperCase();\n    }\n    toText() {\n        const checksumArrayBuf = new ArrayBuffer(4);\n        const view = new DataView(checksumArrayBuf);\n        view.setUint32(0, getCrc32(this._arr));\n        const checksum = new Uint8Array(checksumArrayBuf);\n        const bytes = Uint8Array.from(this._arr);\n        const array = new Uint8Array([...checksum, ...bytes]);\n        const result = encode(array);\n        const matches = result.match(/.{1,5}/g);\n        if (!matches) {\n            // This should only happen if there's no character, which is unreachable.\n            throw new Error();\n        }\n        return matches.join('-');\n    }\n    toString() {\n        return this.toText();\n    }\n    /**\n     * Serializes to JSON\n     * @returns {JsonnablePrincipal} a JSON object with a single key, {@link JSON_KEY_PRINCIPAL}, whose value is the principal as a string\n     */\n    toJSON() {\n        return { [JSON_KEY_PRINCIPAL]: this.toText() };\n    }\n    /**\n     * Utility method taking a Principal to compare against. Used for determining canister ranges in certificate verification\n     * @param {Principal} other - a {@link Principal} to compare\n     * @returns {'lt' | 'eq' | 'gt'} `'lt' | 'eq' | 'gt'` a string, representing less than, equal to, or greater than\n     */\n    compareTo(other) {\n        for (let i = 0; i < Math.min(this._arr.length, other._arr.length); i++) {\n            if (this._arr[i] < other._arr[i])\n                return 'lt';\n            else if (this._arr[i] > other._arr[i])\n                return 'gt';\n        }\n        // Here, at least one principal is a prefix of the other principal (they could be the same)\n        if (this._arr.length < other._arr.length)\n            return 'lt';\n        if (this._arr.length > other._arr.length)\n            return 'gt';\n        return 'eq';\n    }\n    /**\n     * Utility method checking whether a provided Principal is less than or equal to the current one using the {@link Principal.compareTo} method\n     * @param other a {@link Principal} to compare\n     * @returns {boolean} boolean\n     */\n    ltEq(other) {\n        const cmp = this.compareTo(other);\n        return cmp == 'lt' || cmp == 'eq';\n    }\n    /**\n     * Utility method checking whether a provided Principal is greater than or equal to the current one using the {@link Principal.compareTo} method\n     * @param other a {@link Principal} to compare\n     * @returns {boolean} boolean\n     */\n    gtEq(other) {\n        const cmp = this.compareTo(other);\n        return cmp == 'gt' || cmp == 'eq';\n    }\n}\n//# sourceMappingURL=index.js.map","/**\n * An error that happens in the Agent. This is the root of all errors and should be used\n * everywhere in the Agent code (this package).\n *\n * @todo https://github.com/dfinity/agent-js/issues/420\n */\nexport class AgentError extends Error {\n    constructor(message) {\n        super(message);\n        this.message = message;\n        Object.setPrototypeOf(this, AgentError.prototype);\n    }\n}\n//# sourceMappingURL=errors.js.map","/**\n * Concatenate multiple array buffers.\n * @param buffers The buffers to concatenate.\n */\nexport function concat(...buffers) {\n    const result = new Uint8Array(buffers.reduce((acc, curr) => acc + curr.byteLength, 0));\n    let index = 0;\n    for (const b of buffers) {\n        result.set(new Uint8Array(b), index);\n        index += b.byteLength;\n    }\n    return result;\n}\n/**\n * Returns an hexadecimal representation of an array buffer.\n * @param bytes The array buffer.\n */\nexport function toHexString(bytes) {\n    return new Uint8Array(bytes).reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\n}\n/**\n * Return an array buffer from its hexadecimal representation.\n * @param hexString The hexadecimal string.\n */\nexport function fromHexString(hexString) {\n    var _a;\n    return new Uint8Array(((_a = hexString.match(/.{1,2}/g)) !== null && _a !== void 0 ? _a : []).map(byte => parseInt(byte, 16)));\n}\n/**\n * A class that abstracts a pipe-like ArrayBuffer.\n */\nexport class PipeArrayBuffer {\n    /**\n     * Creates a new instance of a pipe\n     * @param buffer an optional buffer to start with\n     * @param length an optional amount of bytes to use for the length.\n     */\n    constructor(buffer, length = (buffer === null || buffer === void 0 ? void 0 : buffer.byteLength) || 0) {\n        this._buffer = bufFromBufLike(buffer || new ArrayBuffer(0));\n        this._view = new Uint8Array(this._buffer, 0, length);\n    }\n    get buffer() {\n        // Return a copy of the buffer.\n        return bufFromBufLike(this._view.slice());\n    }\n    get byteLength() {\n        return this._view.byteLength;\n    }\n    /**\n     * Read `num` number of bytes from the front of the pipe.\n     * @param num The number of bytes to read.\n     */\n    read(num) {\n        const result = this._view.subarray(0, num);\n        this._view = this._view.subarray(num);\n        return result.slice().buffer;\n    }\n    readUint8() {\n        const result = this._view[0];\n        this._view = this._view.subarray(1);\n        return result;\n    }\n    /**\n     * Write a buffer to the end of the pipe.\n     * @param buf The bytes to write.\n     */\n    write(buf) {\n        const b = new Uint8Array(buf);\n        const offset = this._view.byteLength;\n        if (this._view.byteOffset + this._view.byteLength + b.byteLength >= this._buffer.byteLength) {\n            // Alloc grow the view to include the new bytes.\n            this.alloc(b.byteLength);\n        }\n        else {\n            // Update the view to include the new bytes.\n            this._view = new Uint8Array(this._buffer, this._view.byteOffset, this._view.byteLength + b.byteLength);\n        }\n        this._view.set(b, offset);\n    }\n    /**\n     * Whether or not there is more data to read from the buffer\n     */\n    get end() {\n        return this._view.byteLength === 0;\n    }\n    /**\n     * Allocate a fixed amount of memory in the buffer. This does not affect the view.\n     * @param amount A number of bytes to add to the buffer.\n     */\n    alloc(amount) {\n        // Add a little bit of exponential growth.\n        const b = new ArrayBuffer(((this._buffer.byteLength + amount) * 1.2) | 0);\n        const v = new Uint8Array(b, 0, this._view.byteLength + amount);\n        v.set(this._view);\n        this._buffer = b;\n        this._view = v;\n    }\n}\n/**\n * Returns a true ArrayBuffer from a Uint8Array, as Uint8Array.buffer is unsafe.\n * @param {Uint8Array} arr Uint8Array to convert\n * @returns ArrayBuffer\n */\nexport function uint8ToBuf(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength).buffer;\n}\n/**\n * Returns a true ArrayBuffer from an ArrayBufferLike object.\n * @param bufLike a buffer-like object\n * @returns ArrayBuffer\n */\nexport function bufFromBufLike(bufLike) {\n    if (bufLike instanceof Uint8Array) {\n        return uint8ToBuf(bufLike);\n    }\n    if (bufLike instanceof ArrayBuffer) {\n        return bufLike;\n    }\n    if (Array.isArray(bufLike)) {\n        return uint8ToBuf(new Uint8Array(bufLike));\n    }\n    if ('buffer' in bufLike) {\n        return bufFromBufLike(bufLike.buffer);\n    }\n    return uint8ToBuf(new Uint8Array(bufLike));\n}\n//# sourceMappingURL=buffer.js.map","/**\n * Hashes a string to a number. Algorithm can be found here:\n * https://caml.inria.fr/pub/papers/garrigue-polymorphic_variants-ml98.pdf\n * @param s - string to hash\n * @returns number representing hashed string\n */\nfunction idlHash(s) {\n    const utf8encoder = new TextEncoder();\n    const array = utf8encoder.encode(s);\n    let h = 0;\n    for (const c of array) {\n        h = (h * 223 + c) % 2 ** 32;\n    }\n    return h;\n}\n/**\n *\n * @param label string\n * @returns number representing hashed label\n */\nexport function idlLabelToId(label) {\n    if (/^_\\d+_$/.test(label) || /^_0x[0-9a-fA-F]+_$/.test(label)) {\n        const num = +label.slice(1, -1);\n        if (Number.isSafeInteger(num) && num >= 0 && num < 2 ** 32) {\n            return num;\n        }\n    }\n    return idlHash(label);\n}\n//# sourceMappingURL=hash.js.map","/* eslint-disable no-constant-condition */\n// Note: this file uses buffer-pipe, which on Node only, uses the Node Buffer\n//       implementation, which isn't compatible with the NPM buffer package\n//       which we use everywhere else. This means that we have to transform\n//       one into the other, hence why every function that returns a Buffer\n//       actually return `new Buffer(pipe.buffer)`.\n// TODO: The best solution would be to have our own buffer type around\n//       Uint8Array which is standard.\nimport { PipeArrayBuffer as Pipe } from './buffer';\nfunction eob() {\n    throw new Error('unexpected end of buffer');\n}\n/**\n *\n * @param pipe Pipe from buffer-pipe\n * @param num number\n * @returns Buffer\n */\nexport function safeRead(pipe, num) {\n    if (pipe.byteLength < num) {\n        eob();\n    }\n    return pipe.read(num);\n}\n/**\n * @param pipe - PipeArrayBuffer simulating buffer-pipe api\n */\nexport function safeReadUint8(pipe) {\n    const byte = pipe.readUint8();\n    if (byte === undefined) {\n        eob();\n    }\n    return byte;\n}\n/**\n * Encode a positive number (or bigint) into a Buffer. The number will be floored to the\n * nearest integer.\n * @param value The number to encode.\n */\nexport function lebEncode(value) {\n    if (typeof value === 'number') {\n        value = BigInt(value);\n    }\n    if (value < BigInt(0)) {\n        throw new Error('Cannot leb encode negative values.');\n    }\n    const byteLength = (value === BigInt(0) ? 0 : Math.ceil(Math.log2(Number(value)))) + 1;\n    const pipe = new Pipe(new ArrayBuffer(byteLength), 0);\n    while (true) {\n        const i = Number(value & BigInt(0x7f));\n        value /= BigInt(0x80);\n        if (value === BigInt(0)) {\n            pipe.write(new Uint8Array([i]));\n            break;\n        }\n        else {\n            pipe.write(new Uint8Array([i | 0x80]));\n        }\n    }\n    return pipe.buffer;\n}\n/**\n * Decode a leb encoded buffer into a bigint. The number will always be positive (does not\n * support signed leb encoding).\n * @param pipe A Buffer containing the leb encoded bits.\n */\nexport function lebDecode(pipe) {\n    let weight = BigInt(1);\n    let value = BigInt(0);\n    let byte;\n    do {\n        byte = safeReadUint8(pipe);\n        value += BigInt(byte & 0x7f).valueOf() * weight;\n        weight *= BigInt(128);\n    } while (byte >= 0x80);\n    return value;\n}\n/**\n * Encode a number (or bigint) into a Buffer, with support for negative numbers. The number\n * will be floored to the nearest integer.\n * @param value The number to encode.\n */\nexport function slebEncode(value) {\n    if (typeof value === 'number') {\n        value = BigInt(value);\n    }\n    const isNeg = value < BigInt(0);\n    if (isNeg) {\n        value = -value - BigInt(1);\n    }\n    const byteLength = (value === BigInt(0) ? 0 : Math.ceil(Math.log2(Number(value)))) + 1;\n    const pipe = new Pipe(new ArrayBuffer(byteLength), 0);\n    while (true) {\n        const i = getLowerBytes(value);\n        value /= BigInt(0x80);\n        // prettier-ignore\n        if ((isNeg && value === BigInt(0) && (i & 0x40) !== 0)\n            || (!isNeg && value === BigInt(0) && (i & 0x40) === 0)) {\n            pipe.write(new Uint8Array([i]));\n            break;\n        }\n        else {\n            pipe.write(new Uint8Array([i | 0x80]));\n        }\n    }\n    function getLowerBytes(num) {\n        const bytes = num % BigInt(0x80);\n        if (isNeg) {\n            // We swap the bits here again, and remove 1 to do two's complement.\n            return Number(BigInt(0x80) - bytes - BigInt(1));\n        }\n        else {\n            return Number(bytes);\n        }\n    }\n    return pipe.buffer;\n}\n/**\n * Decode a leb encoded buffer into a bigint. The number is decoded with support for negative\n * signed-leb encoding.\n * @param pipe A Buffer containing the signed leb encoded bits.\n */\nexport function slebDecode(pipe) {\n    // Get the size of the buffer, then cut a buffer of that size.\n    const pipeView = new Uint8Array(pipe.buffer);\n    let len = 0;\n    for (; len < pipeView.byteLength; len++) {\n        if (pipeView[len] < 0x80) {\n            // If it's a positive number, we reuse lebDecode.\n            if ((pipeView[len] & 0x40) === 0) {\n                return lebDecode(pipe);\n            }\n            break;\n        }\n    }\n    const bytes = new Uint8Array(safeRead(pipe, len + 1));\n    let value = BigInt(0);\n    for (let i = bytes.byteLength - 1; i >= 0; i--) {\n        value = value * BigInt(0x80) + BigInt(0x80 - (bytes[i] & 0x7f) - 1);\n    }\n    return -value - BigInt(1);\n}\n/**\n *\n * @param value bigint or number\n * @param byteLength number\n * @returns Buffer\n */\nexport function writeUIntLE(value, byteLength) {\n    if (BigInt(value) < BigInt(0)) {\n        throw new Error('Cannot write negative values.');\n    }\n    return writeIntLE(value, byteLength);\n}\n/**\n *\n * @param value - bigint or number\n * @param byteLength - number\n * @returns ArrayBuffer\n */\nexport function writeIntLE(value, byteLength) {\n    value = BigInt(value);\n    const pipe = new Pipe(new ArrayBuffer(Math.min(1, byteLength)), 0);\n    let i = 0;\n    let mul = BigInt(256);\n    let sub = BigInt(0);\n    let byte = Number(value % mul);\n    pipe.write(new Uint8Array([byte]));\n    while (++i < byteLength) {\n        if (value < 0 && sub === BigInt(0) && byte !== 0) {\n            sub = BigInt(1);\n        }\n        byte = Number((value / mul - sub) % BigInt(256));\n        pipe.write(new Uint8Array([byte]));\n        mul *= BigInt(256);\n    }\n    return pipe.buffer;\n}\n/**\n *\n * @param pipe Pipe from buffer-pipe\n * @param byteLength number\n * @returns bigint\n */\nexport function readUIntLE(pipe, byteLength) {\n    let val = BigInt(safeReadUint8(pipe));\n    let mul = BigInt(1);\n    let i = 0;\n    while (++i < byteLength) {\n        mul *= BigInt(256);\n        const byte = BigInt(safeReadUint8(pipe));\n        val = val + mul * byte;\n    }\n    return val;\n}\n/**\n *\n * @param pipe Pipe from buffer-pipe\n * @param byteLength number\n * @returns bigint\n */\nexport function readIntLE(pipe, byteLength) {\n    let val = readUIntLE(pipe, byteLength);\n    const mul = BigInt(2) ** (BigInt(8) * BigInt(byteLength - 1) + BigInt(7));\n    if (val >= mul) {\n        val -= mul * BigInt(2);\n    }\n    return val;\n}\n//# sourceMappingURL=leb128.js.map","/**\n * Equivalent to `Math.log2(n)` with support for `BigInt` values\n * @param n bigint or integer\n * @returns integer\n */\nexport function ilog2(n) {\n    const nBig = BigInt(n);\n    if (n <= 0) {\n        throw new RangeError('Input must be positive');\n    }\n    return nBig.toString(2).length - 1;\n}\n/**\n * Equivalent to `2 ** n` with support for `BigInt` values\n * (necessary for browser preprocessors which replace the `**` operator with `Math.pow`)\n * @param n bigint or integer\n * @returns bigint\n */\nexport function iexp2(n) {\n    const nBig = BigInt(n);\n    if (n < 0) {\n        throw new RangeError('Input must be non-negative');\n    }\n    return BigInt(1) << nBig;\n}\n//# sourceMappingURL=bigint-math.js.map","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Principal as PrincipalId } from '@dfinity/principal';\nimport { concat, PipeArrayBuffer as Pipe } from './utils/buffer';\nimport { idlLabelToId } from './utils/hash';\nimport { lebDecode, lebEncode, readIntLE, readUIntLE, safeRead, safeReadUint8, slebDecode, slebEncode, writeIntLE, writeUIntLE, } from './utils/leb128';\nimport { iexp2 } from './utils/bigint-math';\nconst magicNumber = 'DIDL';\nconst toReadableString_max = 400; // will not display arguments after 400chars. Makes sure 2mb blobs don't get inside the error\nfunction zipWith(xs, ys, f) {\n    return xs.map((x, i) => f(x, ys[i]));\n}\n/**\n * An IDL Type Table, which precedes the data in the stream.\n */\nclass TypeTable {\n    constructor() {\n        // List of types. Needs to be an array as the index needs to be stable.\n        this._typs = [];\n        this._idx = new Map();\n    }\n    has(obj) {\n        return this._idx.has(obj.name);\n    }\n    add(type, buf) {\n        const idx = this._typs.length;\n        this._idx.set(type.name, idx);\n        this._typs.push(buf);\n    }\n    merge(obj, knot) {\n        const idx = this._idx.get(obj.name);\n        const knotIdx = this._idx.get(knot);\n        if (idx === undefined) {\n            throw new Error('Missing type index for ' + obj);\n        }\n        if (knotIdx === undefined) {\n            throw new Error('Missing type index for ' + knot);\n        }\n        this._typs[idx] = this._typs[knotIdx];\n        // Delete the type.\n        this._typs.splice(knotIdx, 1);\n        this._idx.delete(knot);\n    }\n    encode() {\n        const len = lebEncode(this._typs.length);\n        const buf = concat(...this._typs);\n        return concat(len, buf);\n    }\n    indexOf(typeName) {\n        if (!this._idx.has(typeName)) {\n            throw new Error('Missing type index for ' + typeName);\n        }\n        return slebEncode(this._idx.get(typeName) || 0);\n    }\n}\nexport class Visitor {\n    visitType(t, data) {\n        throw new Error('Not implemented');\n    }\n    visitPrimitive(t, data) {\n        return this.visitType(t, data);\n    }\n    visitEmpty(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitBool(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitNull(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitReserved(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitText(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitNumber(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitInt(t, data) {\n        return this.visitNumber(t, data);\n    }\n    visitNat(t, data) {\n        return this.visitNumber(t, data);\n    }\n    visitFloat(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitFixedInt(t, data) {\n        return this.visitNumber(t, data);\n    }\n    visitFixedNat(t, data) {\n        return this.visitNumber(t, data);\n    }\n    visitPrincipal(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitConstruct(t, data) {\n        return this.visitType(t, data);\n    }\n    visitVec(t, ty, data) {\n        return this.visitConstruct(t, data);\n    }\n    visitOpt(t, ty, data) {\n        return this.visitConstruct(t, data);\n    }\n    visitRecord(t, fields, data) {\n        return this.visitConstruct(t, data);\n    }\n    visitTuple(t, components, data) {\n        const fields = components.map((ty, i) => [`_${i}_`, ty]);\n        return this.visitRecord(t, fields, data);\n    }\n    visitVariant(t, fields, data) {\n        return this.visitConstruct(t, data);\n    }\n    visitRec(t, ty, data) {\n        return this.visitConstruct(ty, data);\n    }\n    visitFunc(t, data) {\n        return this.visitConstruct(t, data);\n    }\n    visitService(t, data) {\n        return this.visitConstruct(t, data);\n    }\n}\n/**\n * Represents an IDL type.\n */\nexport class Type {\n    /* Display type name */\n    display() {\n        return this.name;\n    }\n    valueToString(x) {\n        return toReadableString(x);\n    }\n    /* Implement `T` in the IDL spec, only needed for non-primitive types */\n    buildTypeTable(typeTable) {\n        if (!typeTable.has(this)) {\n            this._buildTypeTableImpl(typeTable);\n        }\n    }\n}\nexport class PrimitiveType extends Type {\n    checkType(t) {\n        if (this.name !== t.name) {\n            throw new Error(`type mismatch: type on the wire ${t.name}, expect type ${this.name}`);\n        }\n        return t;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _buildTypeTableImpl(typeTable) {\n        // No type table encoding for Primitive types.\n        return;\n    }\n}\nexport class ConstructType extends Type {\n    checkType(t) {\n        if (t instanceof RecClass) {\n            const ty = t.getType();\n            if (typeof ty === 'undefined') {\n                throw new Error('type mismatch with uninitialized type');\n            }\n            return ty;\n        }\n        throw new Error(`type mismatch: type on the wire ${t.name}, expect type ${this.name}`);\n    }\n    encodeType(typeTable) {\n        return typeTable.indexOf(this.name);\n    }\n}\n/**\n * Represents an IDL Empty, a type which has no inhabitants.\n * Since no values exist for this type, it cannot be serialised or deserialised.\n * Result types like `Result<Text, Empty>` should always succeed.\n */\nexport class EmptyClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitEmpty(this, d);\n    }\n    covariant(x) {\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue() {\n        throw new Error('Empty cannot appear as a function argument');\n    }\n    valueToString() {\n        throw new Error('Empty cannot appear as a value');\n    }\n    encodeType() {\n        return slebEncode(-17 /* IDLTypeIds.Empty */);\n    }\n    decodeValue() {\n        throw new Error('Empty cannot appear as an output');\n    }\n    get name() {\n        return 'empty';\n    }\n}\n/**\n * Represents an IDL Unknown, a placeholder type for deserialization only.\n * When decoding a value as Unknown, all fields will be retained but the names are only available in\n * hashed form.\n * A deserialized unknown will offer it's actual type by calling the `type()` function.\n * Unknown cannot be serialized and attempting to do so will throw an error.\n */\nexport class UnknownClass extends Type {\n    checkType(t) {\n        throw new Error('Method not implemented for unknown.');\n    }\n    accept(v, d) {\n        throw v.visitType(this, d);\n    }\n    covariant(x) {\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue() {\n        throw new Error('Unknown cannot appear as a function argument');\n    }\n    valueToString() {\n        throw new Error('Unknown cannot appear as a value');\n    }\n    encodeType() {\n        throw new Error('Unknown cannot be serialized');\n    }\n    decodeValue(b, t) {\n        let decodedValue = t.decodeValue(b, t);\n        if (Object(decodedValue) !== decodedValue) {\n            // decodedValue is primitive. Box it, otherwise we cannot add the type() function.\n            // The type() function is important for primitives because otherwise we cannot tell apart the\n            // different number types.\n            decodedValue = Object(decodedValue);\n        }\n        let typeFunc;\n        if (t instanceof RecClass) {\n            typeFunc = () => t.getType();\n        }\n        else {\n            typeFunc = () => t;\n        }\n        // Do not use 'decodedValue.type = typeFunc' because this would lead to an enumerable property\n        // 'type' which means it would be serialized if the value would be candid encoded again.\n        // This in turn leads to problems if the decoded value is a variant because these values are\n        // only allowed to have a single property.\n        Object.defineProperty(decodedValue, 'type', {\n            value: typeFunc,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        });\n        return decodedValue;\n    }\n    _buildTypeTableImpl() {\n        throw new Error('Unknown cannot be serialized');\n    }\n    get name() {\n        return 'Unknown';\n    }\n}\n/**\n * Represents an IDL Bool\n */\nexport class BoolClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitBool(this, d);\n    }\n    covariant(x) {\n        if (typeof x === 'boolean')\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        return new Uint8Array([x ? 1 : 0]);\n    }\n    encodeType() {\n        return slebEncode(-2 /* IDLTypeIds.Bool */);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        switch (safeReadUint8(b)) {\n            case 0:\n                return false;\n            case 1:\n                return true;\n            default:\n                throw new Error('Boolean value out of range');\n        }\n    }\n    get name() {\n        return 'bool';\n    }\n}\n/**\n * Represents an IDL Null\n */\nexport class NullClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitNull(this, d);\n    }\n    covariant(x) {\n        if (x === null)\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue() {\n        return new ArrayBuffer(0);\n    }\n    encodeType() {\n        return slebEncode(-1 /* IDLTypeIds.Null */);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        return null;\n    }\n    get name() {\n        return 'null';\n    }\n}\n/**\n * Represents an IDL Reserved\n */\nexport class ReservedClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitReserved(this, d);\n    }\n    covariant(x) {\n        return true;\n    }\n    encodeValue() {\n        return new ArrayBuffer(0);\n    }\n    encodeType() {\n        return slebEncode(-16 /* IDLTypeIds.Reserved */);\n    }\n    decodeValue(b, t) {\n        if (t.name !== this.name) {\n            t.decodeValue(b, t);\n        }\n        return null;\n    }\n    get name() {\n        return 'reserved';\n    }\n}\n/**\n * Represents an IDL Text\n */\nexport class TextClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitText(this, d);\n    }\n    covariant(x) {\n        if (typeof x === 'string')\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        const buf = new TextEncoder().encode(x);\n        const len = lebEncode(buf.byteLength);\n        return concat(len, buf);\n    }\n    encodeType() {\n        return slebEncode(-15 /* IDLTypeIds.Text */);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        const len = lebDecode(b);\n        const buf = safeRead(b, Number(len));\n        const decoder = new TextDecoder('utf8', { fatal: true });\n        return decoder.decode(buf);\n    }\n    get name() {\n        return 'text';\n    }\n    valueToString(x) {\n        return '\"' + x + '\"';\n    }\n}\n/**\n * Represents an IDL Int\n */\nexport class IntClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitInt(this, d);\n    }\n    covariant(x) {\n        // We allow encoding of JavaScript plain numbers.\n        // But we will always decode to bigint.\n        if (typeof x === 'bigint' || Number.isInteger(x))\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        return slebEncode(x);\n    }\n    encodeType() {\n        return slebEncode(-4 /* IDLTypeIds.Int */);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        return slebDecode(b);\n    }\n    get name() {\n        return 'int';\n    }\n    valueToString(x) {\n        return x.toString();\n    }\n}\n/**\n * Represents an IDL Nat\n */\nexport class NatClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitNat(this, d);\n    }\n    covariant(x) {\n        // We allow encoding of JavaScript plain numbers.\n        // But we will always decode to bigint.\n        if ((typeof x === 'bigint' && x >= BigInt(0)) || (Number.isInteger(x) && x >= 0))\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        return lebEncode(x);\n    }\n    encodeType() {\n        return slebEncode(-3 /* IDLTypeIds.Nat */);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        return lebDecode(b);\n    }\n    get name() {\n        return 'nat';\n    }\n    valueToString(x) {\n        return x.toString();\n    }\n}\n/**\n * Represents an IDL Float\n */\nexport class FloatClass extends PrimitiveType {\n    constructor(_bits) {\n        super();\n        this._bits = _bits;\n        if (_bits !== 32 && _bits !== 64) {\n            throw new Error('not a valid float type');\n        }\n    }\n    accept(v, d) {\n        return v.visitFloat(this, d);\n    }\n    covariant(x) {\n        if (typeof x === 'number' || x instanceof Number)\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        const buf = new ArrayBuffer(this._bits / 8);\n        const view = new DataView(buf);\n        if (this._bits === 32) {\n            view.setFloat32(0, x, true);\n        }\n        else {\n            view.setFloat64(0, x, true);\n        }\n        return buf;\n    }\n    encodeType() {\n        const opcode = this._bits === 32 ? -13 /* IDLTypeIds.Float32 */ : -14 /* IDLTypeIds.Float64 */;\n        return slebEncode(opcode);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        const bytes = safeRead(b, this._bits / 8);\n        const view = new DataView(bytes);\n        if (this._bits === 32) {\n            return view.getFloat32(0, true);\n        }\n        else {\n            return view.getFloat64(0, true);\n        }\n    }\n    get name() {\n        return 'float' + this._bits;\n    }\n    valueToString(x) {\n        return x.toString();\n    }\n}\n/**\n * Represents an IDL fixed-width Int(n)\n */\nexport class FixedIntClass extends PrimitiveType {\n    constructor(_bits) {\n        super();\n        this._bits = _bits;\n    }\n    accept(v, d) {\n        return v.visitFixedInt(this, d);\n    }\n    covariant(x) {\n        const min = iexp2(this._bits - 1) * BigInt(-1);\n        const max = iexp2(this._bits - 1) - BigInt(1);\n        let ok = false;\n        if (typeof x === 'bigint') {\n            ok = x >= min && x <= max;\n        }\n        else if (Number.isInteger(x)) {\n            const v = BigInt(x);\n            ok = v >= min && v <= max;\n        }\n        else {\n            ok = false;\n        }\n        if (ok)\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        return writeIntLE(x, this._bits / 8);\n    }\n    encodeType() {\n        const offset = Math.log2(this._bits) - 3;\n        return slebEncode(-9 - offset);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        const num = readIntLE(b, this._bits / 8);\n        if (this._bits <= 32) {\n            return Number(num);\n        }\n        else {\n            return num;\n        }\n    }\n    get name() {\n        return `int${this._bits}`;\n    }\n    valueToString(x) {\n        return x.toString();\n    }\n}\n/**\n * Represents an IDL fixed-width Nat(n)\n */\nexport class FixedNatClass extends PrimitiveType {\n    constructor(_bits) {\n        super();\n        this._bits = _bits;\n    }\n    accept(v, d) {\n        return v.visitFixedNat(this, d);\n    }\n    covariant(x) {\n        const max = iexp2(this._bits);\n        let ok = false;\n        if (typeof x === 'bigint' && x >= BigInt(0)) {\n            ok = x < max;\n        }\n        else if (Number.isInteger(x) && x >= 0) {\n            const v = BigInt(x);\n            ok = v < max;\n        }\n        else {\n            ok = false;\n        }\n        if (ok)\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        return writeUIntLE(x, this._bits / 8);\n    }\n    encodeType() {\n        const offset = Math.log2(this._bits) - 3;\n        return slebEncode(-5 - offset);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        const num = readUIntLE(b, this._bits / 8);\n        if (this._bits <= 32) {\n            return Number(num);\n        }\n        else {\n            return num;\n        }\n    }\n    get name() {\n        return `nat${this._bits}`;\n    }\n    valueToString(x) {\n        return x.toString();\n    }\n}\n/**\n * Represents an IDL Array\n *\n * Arrays of fixed-sized nat/int type (e.g. nat8), are encoded from and decoded to TypedArrays (e.g. Uint8Array).\n * Arrays of float or other non-primitive types are encoded/decoded as untyped array in Javascript.\n * @param {Type} t\n */\nexport class VecClass extends ConstructType {\n    constructor(_type) {\n        super();\n        this._type = _type;\n        // If true, this vector is really a blob and we can just use memcpy.\n        //\n        // NOTE:\n        // With support of encoding/dencoding of TypedArrays, this optimization is\n        // only used when plain array of bytes are passed as encoding input in order\n        // to be backward compatible.\n        this._blobOptimization = false;\n        if (_type instanceof FixedNatClass && _type._bits === 8) {\n            this._blobOptimization = true;\n        }\n    }\n    accept(v, d) {\n        return v.visitVec(this, this._type, d);\n    }\n    covariant(x) {\n        // Special case for ArrayBuffer\n        const bits = this._type instanceof FixedNatClass\n            ? this._type._bits\n            : this._type instanceof FixedIntClass\n                ? this._type._bits\n                : 0;\n        if ((ArrayBuffer.isView(x) && bits == x.BYTES_PER_ELEMENT * 8) ||\n            (Array.isArray(x) &&\n                x.every((v, idx) => {\n                    try {\n                        return this._type.covariant(v);\n                    }\n                    catch (e) {\n                        throw new Error(`Invalid ${this.display()} argument: \\n\\nindex ${idx} -> ${e.message}`);\n                    }\n                })))\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        const len = lebEncode(x.length);\n        if (this._blobOptimization) {\n            return concat(len, new Uint8Array(x));\n        }\n        if (ArrayBuffer.isView(x)) {\n            return concat(len, new Uint8Array(x.buffer));\n        }\n        const buf = new Pipe(new ArrayBuffer(len.byteLength + x.length), 0);\n        buf.write(len);\n        for (const d of x) {\n            const encoded = this._type.encodeValue(d);\n            buf.write(new Uint8Array(encoded));\n        }\n        return buf.buffer;\n    }\n    _buildTypeTableImpl(typeTable) {\n        this._type.buildTypeTable(typeTable);\n        const opCode = slebEncode(-19 /* IDLTypeIds.Vector */);\n        const buffer = this._type.encodeType(typeTable);\n        typeTable.add(this, concat(opCode, buffer));\n    }\n    decodeValue(b, t) {\n        const vec = this.checkType(t);\n        if (!(vec instanceof VecClass)) {\n            throw new Error('Not a vector type');\n        }\n        const len = Number(lebDecode(b));\n        if (this._type instanceof FixedNatClass) {\n            if (this._type._bits == 8) {\n                return new Uint8Array(b.read(len));\n            }\n            if (this._type._bits == 16) {\n                return new Uint16Array(b.read(len * 2));\n            }\n            if (this._type._bits == 32) {\n                return new Uint32Array(b.read(len * 4));\n            }\n            if (this._type._bits == 64) {\n                return new BigUint64Array(b.read(len * 8));\n            }\n        }\n        if (this._type instanceof FixedIntClass) {\n            if (this._type._bits == 8) {\n                return new Int8Array(b.read(len));\n            }\n            if (this._type._bits == 16) {\n                return new Int16Array(b.read(len * 2));\n            }\n            if (this._type._bits == 32) {\n                return new Int32Array(b.read(len * 4));\n            }\n            if (this._type._bits == 64) {\n                return new BigInt64Array(b.read(len * 8));\n            }\n        }\n        const rets = [];\n        for (let i = 0; i < len; i++) {\n            rets.push(this._type.decodeValue(b, vec._type));\n        }\n        return rets;\n    }\n    get name() {\n        return `vec ${this._type.name}`;\n    }\n    display() {\n        return `vec ${this._type.display()}`;\n    }\n    valueToString(x) {\n        const elements = x.map(e => this._type.valueToString(e));\n        return 'vec {' + elements.join('; ') + '}';\n    }\n}\n/**\n * Represents an IDL Option\n * @param {Type} t\n */\nexport class OptClass extends ConstructType {\n    constructor(_type) {\n        super();\n        this._type = _type;\n    }\n    accept(v, d) {\n        return v.visitOpt(this, this._type, d);\n    }\n    covariant(x) {\n        try {\n            if (Array.isArray(x) && (x.length === 0 || (x.length === 1 && this._type.covariant(x[0]))))\n                return true;\n        }\n        catch (e) {\n            throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)} \\n\\n-> ${e.message}`);\n        }\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        if (x.length === 0) {\n            return new Uint8Array([0]);\n        }\n        else {\n            return concat(new Uint8Array([1]), this._type.encodeValue(x[0]));\n        }\n    }\n    _buildTypeTableImpl(typeTable) {\n        this._type.buildTypeTable(typeTable);\n        const opCode = slebEncode(-18 /* IDLTypeIds.Opt */);\n        const buffer = this._type.encodeType(typeTable);\n        typeTable.add(this, concat(opCode, buffer));\n    }\n    decodeValue(b, t) {\n        const opt = this.checkType(t);\n        if (!(opt instanceof OptClass)) {\n            throw new Error('Not an option type');\n        }\n        switch (safeReadUint8(b)) {\n            case 0:\n                return [];\n            case 1:\n                return [this._type.decodeValue(b, opt._type)];\n            default:\n                throw new Error('Not an option value');\n        }\n    }\n    get name() {\n        return `opt ${this._type.name}`;\n    }\n    display() {\n        return `opt ${this._type.display()}`;\n    }\n    valueToString(x) {\n        if (x.length === 0) {\n            return 'null';\n        }\n        else {\n            return `opt ${this._type.valueToString(x[0])}`;\n        }\n    }\n}\n/**\n * Represents an IDL Record\n * @param {object} [fields] - mapping of function name to Type\n */\nexport class RecordClass extends ConstructType {\n    constructor(fields = {}) {\n        super();\n        this._fields = Object.entries(fields).sort((a, b) => idlLabelToId(a[0]) - idlLabelToId(b[0]));\n    }\n    accept(v, d) {\n        return v.visitRecord(this, this._fields, d);\n    }\n    tryAsTuple() {\n        const res = [];\n        for (let i = 0; i < this._fields.length; i++) {\n            const [key, type] = this._fields[i];\n            if (key !== `_${i}_`) {\n                return null;\n            }\n            res.push(type);\n        }\n        return res;\n    }\n    covariant(x) {\n        if (typeof x === 'object' &&\n            this._fields.every(([k, t]) => {\n                // eslint-disable-next-line\n                if (!x.hasOwnProperty(k)) {\n                    throw new Error(`Record is missing key \"${k}\".`);\n                }\n                try {\n                    return t.covariant(x[k]);\n                }\n                catch (e) {\n                    throw new Error(`Invalid ${this.display()} argument: \\n\\nfield ${k} -> ${e.message}`);\n                }\n            }))\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        const values = this._fields.map(([key]) => x[key]);\n        const bufs = zipWith(this._fields, values, ([, c], d) => c.encodeValue(d));\n        return concat(...bufs);\n    }\n    _buildTypeTableImpl(T) {\n        this._fields.forEach(([_, value]) => value.buildTypeTable(T));\n        const opCode = slebEncode(-20 /* IDLTypeIds.Record */);\n        const len = lebEncode(this._fields.length);\n        const fields = this._fields.map(([key, value]) => concat(lebEncode(idlLabelToId(key)), value.encodeType(T)));\n        T.add(this, concat(opCode, len, concat(...fields)));\n    }\n    decodeValue(b, t) {\n        const record = this.checkType(t);\n        if (!(record instanceof RecordClass)) {\n            throw new Error('Not a record type');\n        }\n        const x = {};\n        let expectedRecordIdx = 0;\n        let actualRecordIdx = 0;\n        while (actualRecordIdx < record._fields.length) {\n            const [hash, type] = record._fields[actualRecordIdx];\n            if (expectedRecordIdx >= this._fields.length) {\n                // skip unexpected left over fields present on the wire\n                type.decodeValue(b, type);\n                actualRecordIdx++;\n                continue;\n            }\n            const [expectKey, expectType] = this._fields[expectedRecordIdx];\n            const expectedId = idlLabelToId(this._fields[expectedRecordIdx][0]);\n            const actualId = idlLabelToId(hash);\n            if (expectedId === actualId) {\n                // the current field on the wire matches the expected field\n                x[expectKey] = expectType.decodeValue(b, type);\n                expectedRecordIdx++;\n                actualRecordIdx++;\n            }\n            else if (actualId > expectedId) {\n                // The expected field does not exist on the wire\n                if (expectType instanceof OptClass || expectType instanceof ReservedClass) {\n                    x[expectKey] = [];\n                    expectedRecordIdx++;\n                }\n                else {\n                    throw new Error('Cannot find required field ' + expectKey);\n                }\n            }\n            else {\n                // The field on the wire does not exist in the output type, so we can skip it\n                type.decodeValue(b, type);\n                actualRecordIdx++;\n            }\n        }\n        // initialize left over expected optional fields\n        for (const [expectKey, expectType] of this._fields.slice(expectedRecordIdx)) {\n            if (expectType instanceof OptClass || expectType instanceof ReservedClass) {\n                // TODO this assumes null value in opt is represented as []\n                x[expectKey] = [];\n            }\n            else {\n                throw new Error('Cannot find required field ' + expectKey);\n            }\n        }\n        return x;\n    }\n    get name() {\n        const fields = this._fields.map(([key, value]) => key + ':' + value.name);\n        return `record {${fields.join('; ')}}`;\n    }\n    display() {\n        const fields = this._fields.map(([key, value]) => key + ':' + value.display());\n        return `record {${fields.join('; ')}}`;\n    }\n    valueToString(x) {\n        const values = this._fields.map(([key]) => x[key]);\n        const fields = zipWith(this._fields, values, ([k, c], d) => k + '=' + c.valueToString(d));\n        return `record {${fields.join('; ')}}`;\n    }\n}\n/**\n * Represents Tuple, a syntactic sugar for Record.\n * @param {Type} components\n */\nexport class TupleClass extends RecordClass {\n    constructor(_components) {\n        const x = {};\n        _components.forEach((e, i) => (x['_' + i + '_'] = e));\n        super(x);\n        this._components = _components;\n    }\n    accept(v, d) {\n        return v.visitTuple(this, this._components, d);\n    }\n    covariant(x) {\n        // `>=` because tuples can be covariant when encoded.\n        if (Array.isArray(x) &&\n            x.length >= this._fields.length &&\n            this._components.every((t, i) => {\n                try {\n                    return t.covariant(x[i]);\n                }\n                catch (e) {\n                    throw new Error(`Invalid ${this.display()} argument: \\n\\nindex ${i} -> ${e.message}`);\n                }\n            }))\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        const bufs = zipWith(this._components, x, (c, d) => c.encodeValue(d));\n        return concat(...bufs);\n    }\n    decodeValue(b, t) {\n        const tuple = this.checkType(t);\n        if (!(tuple instanceof TupleClass)) {\n            throw new Error('not a tuple type');\n        }\n        if (tuple._components.length < this._components.length) {\n            throw new Error('tuple mismatch');\n        }\n        const res = [];\n        for (const [i, wireType] of tuple._components.entries()) {\n            if (i >= this._components.length) {\n                // skip value\n                wireType.decodeValue(b, wireType);\n            }\n            else {\n                res.push(this._components[i].decodeValue(b, wireType));\n            }\n        }\n        return res;\n    }\n    display() {\n        const fields = this._components.map(value => value.display());\n        return `record {${fields.join('; ')}}`;\n    }\n    valueToString(values) {\n        const fields = zipWith(this._components, values, (c, d) => c.valueToString(d));\n        return `record {${fields.join('; ')}}`;\n    }\n}\n/**\n * Represents an IDL Variant\n * @param {object} [fields] - mapping of function name to Type\n */\nexport class VariantClass extends ConstructType {\n    constructor(fields = {}) {\n        super();\n        this._fields = Object.entries(fields).sort((a, b) => idlLabelToId(a[0]) - idlLabelToId(b[0]));\n    }\n    accept(v, d) {\n        return v.visitVariant(this, this._fields, d);\n    }\n    covariant(x) {\n        if (typeof x === 'object' &&\n            Object.entries(x).length === 1 &&\n            this._fields.every(([k, v]) => {\n                try {\n                    // eslint-disable-next-line\n                    return !x.hasOwnProperty(k) || v.covariant(x[k]);\n                }\n                catch (e) {\n                    throw new Error(`Invalid ${this.display()} argument: \\n\\nvariant ${k} -> ${e.message}`);\n                }\n            }))\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        for (let i = 0; i < this._fields.length; i++) {\n            const [name, type] = this._fields[i];\n            // eslint-disable-next-line\n            if (x.hasOwnProperty(name)) {\n                const idx = lebEncode(i);\n                const buf = type.encodeValue(x[name]);\n                return concat(idx, buf);\n            }\n        }\n        throw Error('Variant has no data: ' + x);\n    }\n    _buildTypeTableImpl(typeTable) {\n        this._fields.forEach(([, type]) => {\n            type.buildTypeTable(typeTable);\n        });\n        const opCode = slebEncode(-21 /* IDLTypeIds.Variant */);\n        const len = lebEncode(this._fields.length);\n        const fields = this._fields.map(([key, value]) => concat(lebEncode(idlLabelToId(key)), value.encodeType(typeTable)));\n        typeTable.add(this, concat(opCode, len, ...fields));\n    }\n    decodeValue(b, t) {\n        const variant = this.checkType(t);\n        if (!(variant instanceof VariantClass)) {\n            throw new Error('Not a variant type');\n        }\n        const idx = Number(lebDecode(b));\n        if (idx >= variant._fields.length) {\n            throw Error('Invalid variant index: ' + idx);\n        }\n        const [wireHash, wireType] = variant._fields[idx];\n        for (const [key, expectType] of this._fields) {\n            if (idlLabelToId(wireHash) === idlLabelToId(key)) {\n                const value = expectType.decodeValue(b, wireType);\n                return { [key]: value };\n            }\n        }\n        throw new Error('Cannot find field hash ' + wireHash);\n    }\n    get name() {\n        const fields = this._fields.map(([key, type]) => key + ':' + type.name);\n        return `variant {${fields.join('; ')}}`;\n    }\n    display() {\n        const fields = this._fields.map(([key, type]) => key + (type.name === 'null' ? '' : `:${type.display()}`));\n        return `variant {${fields.join('; ')}}`;\n    }\n    valueToString(x) {\n        for (const [name, type] of this._fields) {\n            // eslint-disable-next-line\n            if (x.hasOwnProperty(name)) {\n                const value = type.valueToString(x[name]);\n                if (value === 'null') {\n                    return `variant {${name}}`;\n                }\n                else {\n                    return `variant {${name}=${value}}`;\n                }\n            }\n        }\n        throw new Error('Variant has no data: ' + x);\n    }\n}\n/**\n * Represents a reference to an IDL type, used for defining recursive data\n * types.\n */\nexport class RecClass extends ConstructType {\n    constructor() {\n        super(...arguments);\n        this._id = RecClass._counter++;\n        this._type = undefined;\n    }\n    accept(v, d) {\n        if (!this._type) {\n            throw Error('Recursive type uninitialized.');\n        }\n        return v.visitRec(this, this._type, d);\n    }\n    fill(t) {\n        this._type = t;\n    }\n    getType() {\n        return this._type;\n    }\n    covariant(x) {\n        if (this._type ? this._type.covariant(x) : false)\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        if (!this._type) {\n            throw Error('Recursive type uninitialized.');\n        }\n        return this._type.encodeValue(x);\n    }\n    _buildTypeTableImpl(typeTable) {\n        if (!this._type) {\n            throw Error('Recursive type uninitialized.');\n        }\n        typeTable.add(this, new Uint8Array([]));\n        this._type.buildTypeTable(typeTable);\n        typeTable.merge(this, this._type.name);\n    }\n    decodeValue(b, t) {\n        if (!this._type) {\n            throw Error('Recursive type uninitialized.');\n        }\n        return this._type.decodeValue(b, t);\n    }\n    get name() {\n        return `rec_${this._id}`;\n    }\n    display() {\n        if (!this._type) {\n            throw Error('Recursive type uninitialized.');\n        }\n        return `μ${this.name}.${this._type.name}`;\n    }\n    valueToString(x) {\n        if (!this._type) {\n            throw Error('Recursive type uninitialized.');\n        }\n        return this._type.valueToString(x);\n    }\n}\nRecClass._counter = 0;\nfunction decodePrincipalId(b) {\n    const x = safeReadUint8(b);\n    if (x !== 1) {\n        throw new Error('Cannot decode principal');\n    }\n    const len = Number(lebDecode(b));\n    return PrincipalId.fromUint8Array(new Uint8Array(safeRead(b, len)));\n}\n/**\n * Represents an IDL principal reference\n */\nexport class PrincipalClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitPrincipal(this, d);\n    }\n    covariant(x) {\n        if (x && x._isPrincipal)\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        const buf = x.toUint8Array();\n        const len = lebEncode(buf.byteLength);\n        return concat(new Uint8Array([1]), len, buf);\n    }\n    encodeType() {\n        return slebEncode(-24 /* IDLTypeIds.Principal */);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        return decodePrincipalId(b);\n    }\n    get name() {\n        return 'principal';\n    }\n    valueToString(x) {\n        return `${this.name} \"${x.toText()}\"`;\n    }\n}\n/**\n * Represents an IDL function reference.\n * @param argTypes Argument types.\n * @param retTypes Return types.\n * @param annotations Function annotations.\n */\nexport class FuncClass extends ConstructType {\n    constructor(argTypes, retTypes, annotations = []) {\n        super();\n        this.argTypes = argTypes;\n        this.retTypes = retTypes;\n        this.annotations = annotations;\n    }\n    static argsToString(types, v) {\n        if (types.length !== v.length) {\n            throw new Error('arity mismatch');\n        }\n        return '(' + types.map((t, i) => t.valueToString(v[i])).join(', ') + ')';\n    }\n    accept(v, d) {\n        return v.visitFunc(this, d);\n    }\n    covariant(x) {\n        if (Array.isArray(x) && x.length === 2 && x[0] && x[0]._isPrincipal && typeof x[1] === 'string')\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue([principal, methodName]) {\n        const buf = principal.toUint8Array();\n        const len = lebEncode(buf.byteLength);\n        const canister = concat(new Uint8Array([1]), len, buf);\n        const method = new TextEncoder().encode(methodName);\n        const methodLen = lebEncode(method.byteLength);\n        return concat(new Uint8Array([1]), canister, methodLen, method);\n    }\n    _buildTypeTableImpl(T) {\n        this.argTypes.forEach(arg => arg.buildTypeTable(T));\n        this.retTypes.forEach(arg => arg.buildTypeTable(T));\n        const opCode = slebEncode(-22 /* IDLTypeIds.Func */);\n        const argLen = lebEncode(this.argTypes.length);\n        const args = concat(...this.argTypes.map(arg => arg.encodeType(T)));\n        const retLen = lebEncode(this.retTypes.length);\n        const rets = concat(...this.retTypes.map(arg => arg.encodeType(T)));\n        const annLen = lebEncode(this.annotations.length);\n        const anns = concat(...this.annotations.map(a => this.encodeAnnotation(a)));\n        T.add(this, concat(opCode, argLen, args, retLen, rets, annLen, anns));\n    }\n    decodeValue(b) {\n        const x = safeReadUint8(b);\n        if (x !== 1) {\n            throw new Error('Cannot decode function reference');\n        }\n        const canister = decodePrincipalId(b);\n        const mLen = Number(lebDecode(b));\n        const buf = safeRead(b, mLen);\n        const decoder = new TextDecoder('utf8', { fatal: true });\n        const method = decoder.decode(buf);\n        return [canister, method];\n    }\n    get name() {\n        const args = this.argTypes.map(arg => arg.name).join(', ');\n        const rets = this.retTypes.map(arg => arg.name).join(', ');\n        const annon = ' ' + this.annotations.join(' ');\n        return `(${args}) -> (${rets})${annon}`;\n    }\n    valueToString([principal, str]) {\n        return `func \"${principal.toText()}\".${str}`;\n    }\n    display() {\n        const args = this.argTypes.map(arg => arg.display()).join(', ');\n        const rets = this.retTypes.map(arg => arg.display()).join(', ');\n        const annon = ' ' + this.annotations.join(' ');\n        return `(${args}) → (${rets})${annon}`;\n    }\n    encodeAnnotation(ann) {\n        if (ann === 'query') {\n            return new Uint8Array([1]);\n        }\n        else if (ann === 'oneway') {\n            return new Uint8Array([2]);\n        }\n        else if (ann === 'composite_query') {\n            return new Uint8Array([3]);\n        }\n        else {\n            throw new Error('Illegal function annotation');\n        }\n    }\n}\nexport class ServiceClass extends ConstructType {\n    constructor(fields) {\n        super();\n        this._fields = Object.entries(fields).sort((a, b) => {\n            if (a[0] < b[0]) {\n                return -1;\n            }\n            if (a[0] > b[0]) {\n                return 1;\n            }\n            return 0;\n        });\n    }\n    accept(v, d) {\n        return v.visitService(this, d);\n    }\n    covariant(x) {\n        if (x && x._isPrincipal)\n            return true;\n        throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n    }\n    encodeValue(x) {\n        const buf = x.toUint8Array();\n        const len = lebEncode(buf.length);\n        return concat(new Uint8Array([1]), len, buf);\n    }\n    _buildTypeTableImpl(T) {\n        this._fields.forEach(([_, func]) => func.buildTypeTable(T));\n        const opCode = slebEncode(-23 /* IDLTypeIds.Service */);\n        const len = lebEncode(this._fields.length);\n        const meths = this._fields.map(([label, func]) => {\n            const labelBuf = new TextEncoder().encode(label);\n            const labelLen = lebEncode(labelBuf.length);\n            return concat(labelLen, labelBuf, func.encodeType(T));\n        });\n        T.add(this, concat(opCode, len, ...meths));\n    }\n    decodeValue(b) {\n        return decodePrincipalId(b);\n    }\n    get name() {\n        const fields = this._fields.map(([key, value]) => key + ':' + value.name);\n        return `service {${fields.join('; ')}}`;\n    }\n    valueToString(x) {\n        return `service \"${x.toText()}\"`;\n    }\n}\n/**\n * Takes an unknown value and returns a string representation of it.\n * @param x - unknown value\n * @returns {string} string representation of the value\n */\nfunction toReadableString(x) {\n    const str = JSON.stringify(x, (_key, value) => typeof value === 'bigint' ? `BigInt(${value})` : value);\n    return str && str.length > toReadableString_max\n        ? str.substring(0, toReadableString_max - 3) + '...'\n        : str;\n}\n/**\n * Encode a array of values\n * @param argTypes - array of Types\n * @param args - array of values\n * @returns {ArrayBuffer} serialised value\n */\nexport function encode(argTypes, args) {\n    if (args.length < argTypes.length) {\n        throw Error('Wrong number of message arguments');\n    }\n    const typeTable = new TypeTable();\n    argTypes.forEach(t => t.buildTypeTable(typeTable));\n    const magic = new TextEncoder().encode(magicNumber);\n    const table = typeTable.encode();\n    const len = lebEncode(args.length);\n    const typs = concat(...argTypes.map(t => t.encodeType(typeTable)));\n    const vals = concat(...zipWith(argTypes, args, (t, x) => {\n        try {\n            t.covariant(x);\n        }\n        catch (e) {\n            const err = new Error(e.message + '\\n\\n');\n            throw err;\n        }\n        return t.encodeValue(x);\n    }));\n    return concat(magic, table, len, typs, vals);\n}\n/**\n * Decode a binary value\n * @param retTypes - Types expected in the buffer.\n * @param bytes - hex-encoded string, or buffer.\n * @returns Value deserialised to JS type\n */\nexport function decode(retTypes, bytes) {\n    const b = new Pipe(bytes);\n    if (bytes.byteLength < magicNumber.length) {\n        throw new Error('Message length smaller than magic number');\n    }\n    const magicBuffer = safeRead(b, magicNumber.length);\n    const magic = new TextDecoder().decode(magicBuffer);\n    if (magic !== magicNumber) {\n        throw new Error('Wrong magic number: ' + JSON.stringify(magic));\n    }\n    function readTypeTable(pipe) {\n        const typeTable = [];\n        const len = Number(lebDecode(pipe));\n        for (let i = 0; i < len; i++) {\n            const ty = Number(slebDecode(pipe));\n            switch (ty) {\n                case -18 /* IDLTypeIds.Opt */:\n                case -19 /* IDLTypeIds.Vector */: {\n                    const t = Number(slebDecode(pipe));\n                    typeTable.push([ty, t]);\n                    break;\n                }\n                case -20 /* IDLTypeIds.Record */:\n                case -21 /* IDLTypeIds.Variant */: {\n                    const fields = [];\n                    let objectLength = Number(lebDecode(pipe));\n                    let prevHash;\n                    while (objectLength--) {\n                        const hash = Number(lebDecode(pipe));\n                        if (hash >= Math.pow(2, 32)) {\n                            throw new Error('field id out of 32-bit range');\n                        }\n                        if (typeof prevHash === 'number' && prevHash >= hash) {\n                            throw new Error('field id collision or not sorted');\n                        }\n                        prevHash = hash;\n                        const t = Number(slebDecode(pipe));\n                        fields.push([hash, t]);\n                    }\n                    typeTable.push([ty, fields]);\n                    break;\n                }\n                case -22 /* IDLTypeIds.Func */: {\n                    const args = [];\n                    let argLength = Number(lebDecode(pipe));\n                    while (argLength--) {\n                        args.push(Number(slebDecode(pipe)));\n                    }\n                    const returnValues = [];\n                    let returnValuesLength = Number(lebDecode(pipe));\n                    while (returnValuesLength--) {\n                        returnValues.push(Number(slebDecode(pipe)));\n                    }\n                    const annotations = [];\n                    let annotationLength = Number(lebDecode(pipe));\n                    while (annotationLength--) {\n                        const annotation = Number(lebDecode(pipe));\n                        switch (annotation) {\n                            case 1: {\n                                annotations.push('query');\n                                break;\n                            }\n                            case 2: {\n                                annotations.push('oneway');\n                                break;\n                            }\n                            case 3: {\n                                annotations.push('composite_query');\n                                break;\n                            }\n                            default:\n                                throw new Error('unknown annotation');\n                        }\n                    }\n                    typeTable.push([ty, [args, returnValues, annotations]]);\n                    break;\n                }\n                case -23 /* IDLTypeIds.Service */: {\n                    let servLength = Number(lebDecode(pipe));\n                    const methods = [];\n                    while (servLength--) {\n                        const nameLength = Number(lebDecode(pipe));\n                        const funcName = new TextDecoder().decode(safeRead(pipe, nameLength));\n                        const funcType = slebDecode(pipe);\n                        methods.push([funcName, funcType]);\n                    }\n                    typeTable.push([ty, methods]);\n                    break;\n                }\n                default:\n                    throw new Error('Illegal op_code: ' + ty);\n            }\n        }\n        const rawList = [];\n        const length = Number(lebDecode(pipe));\n        for (let i = 0; i < length; i++) {\n            rawList.push(Number(slebDecode(pipe)));\n        }\n        return [typeTable, rawList];\n    }\n    const [rawTable, rawTypes] = readTypeTable(b);\n    if (rawTypes.length < retTypes.length) {\n        throw new Error('Wrong number of return values');\n    }\n    const table = rawTable.map(_ => Rec());\n    function getType(t) {\n        if (t < -24) {\n            throw new Error('future value not supported');\n        }\n        if (t < 0) {\n            switch (t) {\n                case -1:\n                    return Null;\n                case -2:\n                    return Bool;\n                case -3:\n                    return Nat;\n                case -4:\n                    return Int;\n                case -5:\n                    return Nat8;\n                case -6:\n                    return Nat16;\n                case -7:\n                    return Nat32;\n                case -8:\n                    return Nat64;\n                case -9:\n                    return Int8;\n                case -10:\n                    return Int16;\n                case -11:\n                    return Int32;\n                case -12:\n                    return Int64;\n                case -13:\n                    return Float32;\n                case -14:\n                    return Float64;\n                case -15:\n                    return Text;\n                case -16:\n                    return Reserved;\n                case -17:\n                    return Empty;\n                case -24:\n                    return Principal;\n                default:\n                    throw new Error('Illegal op_code: ' + t);\n            }\n        }\n        if (t >= rawTable.length) {\n            throw new Error('type index out of range');\n        }\n        return table[t];\n    }\n    function buildType(entry) {\n        switch (entry[0]) {\n            case -19 /* IDLTypeIds.Vector */: {\n                const ty = getType(entry[1]);\n                return Vec(ty);\n            }\n            case -18 /* IDLTypeIds.Opt */: {\n                const ty = getType(entry[1]);\n                return Opt(ty);\n            }\n            case -20 /* IDLTypeIds.Record */: {\n                const fields = {};\n                for (const [hash, ty] of entry[1]) {\n                    const name = `_${hash}_`;\n                    fields[name] = getType(ty);\n                }\n                const record = Record(fields);\n                const tuple = record.tryAsTuple();\n                if (Array.isArray(tuple)) {\n                    return Tuple(...tuple);\n                }\n                else {\n                    return record;\n                }\n            }\n            case -21 /* IDLTypeIds.Variant */: {\n                const fields = {};\n                for (const [hash, ty] of entry[1]) {\n                    const name = `_${hash}_`;\n                    fields[name] = getType(ty);\n                }\n                return Variant(fields);\n            }\n            case -22 /* IDLTypeIds.Func */: {\n                const [args, returnValues, annotations] = entry[1];\n                return Func(args.map((t) => getType(t)), returnValues.map((t) => getType(t)), annotations);\n            }\n            case -23 /* IDLTypeIds.Service */: {\n                const rec = {};\n                const methods = entry[1];\n                for (const [name, typeRef] of methods) {\n                    let type = getType(typeRef);\n                    if (type instanceof RecClass) {\n                        // unpack reference type\n                        type = type.getType();\n                    }\n                    if (!(type instanceof FuncClass)) {\n                        throw new Error('Illegal service definition: services can only contain functions');\n                    }\n                    rec[name] = type;\n                }\n                return Service(rec);\n            }\n            default:\n                throw new Error('Illegal op_code: ' + entry[0]);\n        }\n    }\n    rawTable.forEach((entry, i) => {\n        // Process function type first, so that we can construct the correct service type\n        if (entry[0] === -22 /* IDLTypeIds.Func */) {\n            const t = buildType(entry);\n            table[i].fill(t);\n        }\n    });\n    rawTable.forEach((entry, i) => {\n        if (entry[0] !== -22 /* IDLTypeIds.Func */) {\n            const t = buildType(entry);\n            table[i].fill(t);\n        }\n    });\n    const types = rawTypes.map(t => getType(t));\n    const output = retTypes.map((t, i) => {\n        return t.decodeValue(b, types[i]);\n    });\n    // skip unused values\n    for (let ind = retTypes.length; ind < types.length; ind++) {\n        types[ind].decodeValue(b, types[ind]);\n    }\n    if (b.byteLength > 0) {\n        throw new Error('decode: Left-over bytes');\n    }\n    return output;\n}\n// Export Types instances.\nexport const Empty = new EmptyClass();\nexport const Reserved = new ReservedClass();\n/**\n * Client-only type for deserializing unknown data. Not supported by Candid, and its use is discouraged.\n */\nexport const Unknown = new UnknownClass();\nexport const Bool = new BoolClass();\nexport const Null = new NullClass();\nexport const Text = new TextClass();\nexport const Int = new IntClass();\nexport const Nat = new NatClass();\nexport const Float32 = new FloatClass(32);\nexport const Float64 = new FloatClass(64);\nexport const Int8 = new FixedIntClass(8);\nexport const Int16 = new FixedIntClass(16);\nexport const Int32 = new FixedIntClass(32);\nexport const Int64 = new FixedIntClass(64);\nexport const Nat8 = new FixedNatClass(8);\nexport const Nat16 = new FixedNatClass(16);\nexport const Nat32 = new FixedNatClass(32);\nexport const Nat64 = new FixedNatClass(64);\nexport const Principal = new PrincipalClass();\n/**\n *\n * @param types array of any types\n * @returns TupleClass from those types\n */\nexport function Tuple(...types) {\n    return new TupleClass(types);\n}\n/**\n *\n * @param t IDL Type\n * @returns VecClass from that type\n */\nexport function Vec(t) {\n    return new VecClass(t);\n}\n/**\n *\n * @param t IDL Type\n * @returns OptClass of Type\n */\nexport function Opt(t) {\n    return new OptClass(t);\n}\n/**\n *\n * @param t Record of string and IDL Type\n * @returns RecordClass of string and Type\n */\nexport function Record(t) {\n    return new RecordClass(t);\n}\n/**\n *\n * @param fields Record of string and IDL Type\n * @returns VariantClass\n */\nexport function Variant(fields) {\n    return new VariantClass(fields);\n}\n/**\n *\n * @returns new RecClass\n */\nexport function Rec() {\n    return new RecClass();\n}\n/**\n *\n * @param args array of IDL Types\n * @param ret array of IDL Types\n * @param annotations array of strings, [] by default\n * @returns new FuncClass\n */\nexport function Func(args, ret, annotations = []) {\n    return new FuncClass(args, ret, annotations);\n}\n/**\n *\n * @param t Record of string and FuncClass\n * @returns ServiceClass\n */\nexport function Service(t) {\n    return new ServiceClass(t);\n}\n//# sourceMappingURL=idl.js.map","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.1.2\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n      alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, -1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    // If any number is NaN, return NaN.\r\n    function maxOrMin(args, n) {\r\n      var k, y,\r\n        i = 1,\r\n        x = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        y = new BigNumber(args[i]);\r\n        if (!y.s || (k = compare(x, y)) === n || k === 0 && x.s === n) {\r\n          x = y;\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = mathfloor(n / pows10[d - j - 1] % 10);\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : mathfloor(n / pows10[d - j - 1] % 10);\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) {\r\n        t = xc;\r\n        xc = yc;\r\n        yc = t;\r\n        y.s = -y.s;\r\n      }\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) {\r\n        zc = xc;\r\n        xc = yc;\r\n        yc = zc;\r\n        i = xcL;\r\n        xcL = ycL;\r\n        ycL = i;\r\n      }\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) {\r\n        t = yc;\r\n        yc = xc;\r\n        xc = t;\r\n        b = a;\r\n      }\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) {\r\n          i = g1;\r\n          g1 = g2;\r\n          g2 = i;\r\n          len -= i;\r\n        }\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","/* eslint-disable */\n\nmodule.exports = function decodeAsm (stdlib, foreign, buffer) {\n  'use asm'\n\n  // -- Imports\n\n  var heap = new stdlib.Uint8Array(buffer)\n  // var log = foreign.log\n  var pushInt = foreign.pushInt\n  var pushInt32 = foreign.pushInt32\n  var pushInt32Neg = foreign.pushInt32Neg\n  var pushInt64 = foreign.pushInt64\n  var pushInt64Neg = foreign.pushInt64Neg\n  var pushFloat = foreign.pushFloat\n  var pushFloatSingle = foreign.pushFloatSingle\n  var pushFloatDouble = foreign.pushFloatDouble\n  var pushTrue = foreign.pushTrue\n  var pushFalse = foreign.pushFalse\n  var pushUndefined = foreign.pushUndefined\n  var pushNull = foreign.pushNull\n  var pushInfinity = foreign.pushInfinity\n  var pushInfinityNeg = foreign.pushInfinityNeg\n  var pushNaN = foreign.pushNaN\n  var pushNaNNeg = foreign.pushNaNNeg\n\n  var pushArrayStart = foreign.pushArrayStart\n  var pushArrayStartFixed = foreign.pushArrayStartFixed\n  var pushArrayStartFixed32 = foreign.pushArrayStartFixed32\n  var pushArrayStartFixed64 = foreign.pushArrayStartFixed64\n  var pushObjectStart = foreign.pushObjectStart\n  var pushObjectStartFixed = foreign.pushObjectStartFixed\n  var pushObjectStartFixed32 = foreign.pushObjectStartFixed32\n  var pushObjectStartFixed64 = foreign.pushObjectStartFixed64\n\n  var pushByteString = foreign.pushByteString\n  var pushByteStringStart = foreign.pushByteStringStart\n  var pushUtf8String = foreign.pushUtf8String\n  var pushUtf8StringStart = foreign.pushUtf8StringStart\n\n  var pushSimpleUnassigned = foreign.pushSimpleUnassigned\n\n  var pushTagStart = foreign.pushTagStart\n  var pushTagStart4 = foreign.pushTagStart4\n  var pushTagStart8 = foreign.pushTagStart8\n  var pushTagUnassigned = foreign.pushTagUnassigned\n\n  var pushBreak = foreign.pushBreak\n\n  var pow = stdlib.Math.pow\n\n  // -- Constants\n\n\n  // -- Mutable Variables\n\n  var offset = 0\n  var inputLength = 0\n  var code = 0\n\n  // Decode a cbor string represented as Uint8Array\n  // which is allocated on the heap from 0 to inputLength\n  //\n  // input - Int\n  //\n  // Returns Code - Int,\n  // Success = 0\n  // Error > 0\n  function parse (input) {\n    input = input | 0\n\n    offset = 0\n    inputLength = input\n\n    while ((offset | 0) < (inputLength | 0)) {\n      code = jumpTable[heap[offset] & 255](heap[offset] | 0) | 0\n\n      if ((code | 0) > 0) {\n        break\n      }\n    }\n\n    return code | 0\n  }\n\n  // -- Helper Function\n\n  function checkOffset (n) {\n    n = n | 0\n\n    if ((((offset | 0) + (n | 0)) | 0) < (inputLength | 0)) {\n      return 0\n    }\n\n    return 1\n  }\n\n  function readUInt16 (n) {\n    n = n | 0\n\n    return (\n      (heap[n | 0] << 8) | heap[(n + 1) | 0]\n    ) | 0\n  }\n\n  function readUInt32 (n) {\n    n = n | 0\n\n    return (\n      (heap[n | 0] << 24) | (heap[(n + 1) | 0] << 16) | (heap[(n + 2) | 0] << 8) | heap[(n + 3) | 0]\n    ) | 0\n  }\n\n  // -- Initial Byte Handlers\n\n  function INT_P (octet) {\n    octet = octet | 0\n\n    pushInt(octet | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function UINT_P_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushInt(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2) | 0\n\n    return 0\n  }\n\n  function UINT_P_16 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    pushInt(\n      readUInt16((offset + 1) | 0) | 0\n    )\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function UINT_P_32 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushInt32(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function UINT_P_64 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushInt64(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function INT_N (octet) {\n    octet = octet | 0\n\n    pushInt((-1 - ((octet - 32) | 0)) | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function UINT_N_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushInt(\n      (-1 - (heap[(offset + 1) | 0] | 0)) | 0\n    )\n\n    offset = (offset + 2) | 0\n\n    return 0\n  }\n\n  function UINT_N_16 (octet) {\n    octet = octet | 0\n\n    var val = 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    val = readUInt16((offset + 1) | 0) | 0\n    pushInt((-1 - (val | 0)) | 0)\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function UINT_N_32 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushInt32Neg(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function UINT_N_64 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushInt64Neg(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function BYTE_STRING (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var step = 0\n\n    step = (octet - 64) | 0\n    if (checkOffset(step | 0) | 0) {\n      return 1\n    }\n\n    start = (offset + 1) | 0\n    end = (((offset + 1) | 0) + (step | 0)) | 0\n\n    pushByteString(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function BYTE_STRING_8 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    length = heap[(offset + 1) | 0] | 0\n    start = (offset + 2) | 0\n    end = (((offset + 2) | 0) + (length | 0)) | 0\n\n    if (checkOffset((length + 1) | 0) | 0) {\n      return 1\n    }\n\n    pushByteString(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function BYTE_STRING_16 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    length = readUInt16((offset + 1) | 0) | 0\n    start = (offset + 3) | 0\n    end = (((offset + 3) | 0) + (length | 0)) | 0\n\n\n    if (checkOffset((length + 2) | 0) | 0) {\n      return 1\n    }\n\n    pushByteString(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function BYTE_STRING_32 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    length = readUInt32((offset + 1) | 0) | 0\n    start = (offset + 5) | 0\n    end = (((offset + 5) | 0) + (length | 0)) | 0\n\n\n    if (checkOffset((length + 4) | 0) | 0) {\n      return 1\n    }\n\n    pushByteString(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function BYTE_STRING_64 (octet) {\n    // NOT IMPLEMENTED\n    octet = octet | 0\n\n    return 1\n  }\n\n  function BYTE_STRING_BREAK (octet) {\n    octet = octet | 0\n\n    pushByteStringStart()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function UTF8_STRING (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var step = 0\n\n    step = (octet - 96) | 0\n\n    if (checkOffset(step | 0) | 0) {\n      return 1\n    }\n\n    start = (offset + 1) | 0\n    end = (((offset + 1) | 0) + (step | 0)) | 0\n\n    pushUtf8String(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function UTF8_STRING_8 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    length = heap[(offset + 1) | 0] | 0\n    start = (offset + 2) | 0\n    end = (((offset + 2) | 0) + (length | 0)) | 0\n\n    if (checkOffset((length + 1) | 0) | 0) {\n      return 1\n    }\n\n    pushUtf8String(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function UTF8_STRING_16 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    length = readUInt16((offset + 1) | 0) | 0\n    start = (offset + 3) | 0\n    end = (((offset + 3) | 0) + (length | 0)) | 0\n\n    if (checkOffset((length + 2) | 0) | 0) {\n      return 1\n    }\n\n    pushUtf8String(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function UTF8_STRING_32 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    length = readUInt32((offset + 1) | 0) | 0\n    start = (offset + 5) | 0\n    end = (((offset + 5) | 0) + (length | 0)) | 0\n\n    if (checkOffset((length + 4) | 0) | 0) {\n      return 1\n    }\n\n    pushUtf8String(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function UTF8_STRING_64 (octet) {\n    // NOT IMPLEMENTED\n    octet = octet | 0\n\n    return 1\n  }\n\n  function UTF8_STRING_BREAK (octet) {\n    octet = octet | 0\n\n    pushUtf8StringStart()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function ARRAY (octet) {\n    octet = octet | 0\n\n    pushArrayStartFixed((octet - 128) | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function ARRAY_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushArrayStartFixed(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2) | 0\n\n    return 0\n  }\n\n  function ARRAY_16 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    pushArrayStartFixed(\n      readUInt16((offset + 1) | 0) | 0\n    )\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function ARRAY_32 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushArrayStartFixed32(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function ARRAY_64 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushArrayStartFixed64(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function ARRAY_BREAK (octet) {\n    octet = octet | 0\n\n    pushArrayStart()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function MAP (octet) {\n    octet = octet | 0\n\n    var step = 0\n\n    step = (octet - 160) | 0\n\n    if (checkOffset(step | 0) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed(step | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function MAP_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2) | 0\n\n    return 0\n  }\n\n  function MAP_16 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed(\n      readUInt16((offset + 1) | 0) | 0\n    )\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function MAP_32 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed32(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function MAP_64 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed64(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function MAP_BREAK (octet) {\n    octet = octet | 0\n\n    pushObjectStart()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function TAG_KNOWN (octet) {\n    octet = octet | 0\n\n    pushTagStart((octet - 192| 0) | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BIGNUM_POS (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BIGNUM_NEG (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_FRAC (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BIGNUM_FLOAT (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_UNASSIGNED (octet) {\n    octet = octet | 0\n\n    pushTagStart((octet - 192| 0) | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BASE64_URL (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BASE64 (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BASE16 (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_MORE_1 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushTagStart(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2 | 0)\n\n    return 0\n  }\n\n  function TAG_MORE_2 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    pushTagStart(\n      readUInt16((offset + 1) | 0) | 0\n    )\n\n    offset = (offset + 3 | 0)\n\n    return 0\n  }\n\n  function TAG_MORE_4 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushTagStart4(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5 | 0)\n\n    return 0\n  }\n\n  function TAG_MORE_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushTagStart8(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9 | 0)\n\n    return 0\n  }\n\n  function SIMPLE_UNASSIGNED (octet) {\n    octet = octet | 0\n\n    pushSimpleUnassigned(((octet | 0) - 224) | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_FALSE (octet) {\n    octet = octet | 0\n\n    pushFalse()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_TRUE (octet) {\n    octet = octet | 0\n\n    pushTrue()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_NULL (octet) {\n    octet = octet | 0\n\n    pushNull()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_UNDEFINED (octet) {\n    octet = octet | 0\n\n    pushUndefined()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_BYTE (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushSimpleUnassigned(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2)  | 0\n\n    return 0\n  }\n\n  function SIMPLE_FLOAT_HALF (octet) {\n    octet = octet | 0\n\n    var f = 0\n    var g = 0\n    var sign = 1.0\n    var exp = 0.0\n    var mant = 0.0\n    var r = 0.0\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    f = heap[(offset + 1) | 0] | 0\n    g = heap[(offset + 2) | 0] | 0\n\n    if ((f | 0) & 0x80) {\n      sign = -1.0\n    }\n\n    exp = +(((f | 0) & 0x7C) >> 2)\n    mant = +((((f | 0) & 0x03) << 8) | g)\n\n    if (+exp == 0.0) {\n      pushFloat(+(\n        (+sign) * +5.9604644775390625e-8 * (+mant)\n      ))\n    } else if (+exp == 31.0) {\n      if (+sign == 1.0) {\n        if (+mant > 0.0) {\n          pushNaN()\n        } else {\n          pushInfinity()\n        }\n      } else {\n        if (+mant > 0.0) {\n          pushNaNNeg()\n        } else {\n          pushInfinityNeg()\n        }\n      }\n    } else {\n      pushFloat(+(\n        +sign * pow(+2, +(+exp - 25.0)) * +(1024.0 + mant)\n      ))\n    }\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function SIMPLE_FLOAT_SINGLE (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushFloatSingle(\n      heap[(offset + 1) | 0] | 0,\n      heap[(offset + 2) | 0] | 0,\n      heap[(offset + 3) | 0] | 0,\n      heap[(offset + 4) | 0] | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function SIMPLE_FLOAT_DOUBLE (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushFloatDouble(\n      heap[(offset + 1) | 0] | 0,\n      heap[(offset + 2) | 0] | 0,\n      heap[(offset + 3) | 0] | 0,\n      heap[(offset + 4) | 0] | 0,\n      heap[(offset + 5) | 0] | 0,\n      heap[(offset + 6) | 0] | 0,\n      heap[(offset + 7) | 0] | 0,\n      heap[(offset + 8) | 0] | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function ERROR (octet) {\n    octet = octet | 0\n\n    return 1\n  }\n\n  function BREAK (octet) {\n    octet = octet | 0\n\n    pushBreak()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  // -- Jump Table\n\n  var jumpTable = [\n    // Integer 0x00..0x17 (0..23)\n    INT_P, // 0x00\n    INT_P, // 0x01\n    INT_P, // 0x02\n    INT_P, // 0x03\n    INT_P, // 0x04\n    INT_P, // 0x05\n    INT_P, // 0x06\n    INT_P, // 0x07\n    INT_P, // 0x08\n    INT_P, // 0x09\n    INT_P, // 0x0A\n    INT_P, // 0x0B\n    INT_P, // 0x0C\n    INT_P, // 0x0D\n    INT_P, // 0x0E\n    INT_P, // 0x0F\n    INT_P, // 0x10\n    INT_P, // 0x11\n    INT_P, // 0x12\n    INT_P, // 0x13\n    INT_P, // 0x14\n    INT_P, // 0x15\n    INT_P, // 0x16\n    INT_P, // 0x17\n    // Unsigned integer (one-byte uint8_t follows)\n    UINT_P_8, // 0x18\n    // Unsigned integer (two-byte uint16_t follows)\n    UINT_P_16, // 0x19\n    // Unsigned integer (four-byte uint32_t follows)\n    UINT_P_32, // 0x1a\n    // Unsigned integer (eight-byte uint64_t follows)\n    UINT_P_64, // 0x1b\n    ERROR, // 0x1c\n    ERROR, // 0x1d\n    ERROR, // 0x1e\n    ERROR, // 0x1f\n    // Negative integer -1-0x00..-1-0x17 (-1..-24)\n    INT_N, // 0x20\n    INT_N, // 0x21\n    INT_N, // 0x22\n    INT_N, // 0x23\n    INT_N, // 0x24\n    INT_N, // 0x25\n    INT_N, // 0x26\n    INT_N, // 0x27\n    INT_N, // 0x28\n    INT_N, // 0x29\n    INT_N, // 0x2A\n    INT_N, // 0x2B\n    INT_N, // 0x2C\n    INT_N, // 0x2D\n    INT_N, // 0x2E\n    INT_N, // 0x2F\n    INT_N, // 0x30\n    INT_N, // 0x31\n    INT_N, // 0x32\n    INT_N, // 0x33\n    INT_N, // 0x34\n    INT_N, // 0x35\n    INT_N, // 0x36\n    INT_N, // 0x37\n    // Negative integer -1-n (one-byte uint8_t for n follows)\n    UINT_N_8, // 0x38\n    // Negative integer -1-n (two-byte uint16_t for n follows)\n    UINT_N_16, // 0x39\n    // Negative integer -1-n (four-byte uint32_t for nfollows)\n    UINT_N_32, // 0x3a\n    // Negative integer -1-n (eight-byte uint64_t for n follows)\n    UINT_N_64, // 0x3b\n    ERROR, // 0x3c\n    ERROR, // 0x3d\n    ERROR, // 0x3e\n    ERROR, // 0x3f\n    // byte string (0x00..0x17 bytes follow)\n    BYTE_STRING, // 0x40\n    BYTE_STRING, // 0x41\n    BYTE_STRING, // 0x42\n    BYTE_STRING, // 0x43\n    BYTE_STRING, // 0x44\n    BYTE_STRING, // 0x45\n    BYTE_STRING, // 0x46\n    BYTE_STRING, // 0x47\n    BYTE_STRING, // 0x48\n    BYTE_STRING, // 0x49\n    BYTE_STRING, // 0x4A\n    BYTE_STRING, // 0x4B\n    BYTE_STRING, // 0x4C\n    BYTE_STRING, // 0x4D\n    BYTE_STRING, // 0x4E\n    BYTE_STRING, // 0x4F\n    BYTE_STRING, // 0x50\n    BYTE_STRING, // 0x51\n    BYTE_STRING, // 0x52\n    BYTE_STRING, // 0x53\n    BYTE_STRING, // 0x54\n    BYTE_STRING, // 0x55\n    BYTE_STRING, // 0x56\n    BYTE_STRING, // 0x57\n    // byte string (one-byte uint8_t for n, and then n bytes follow)\n    BYTE_STRING_8, // 0x58\n    // byte string (two-byte uint16_t for n, and then n bytes follow)\n    BYTE_STRING_16, // 0x59\n    // byte string (four-byte uint32_t for n, and then n bytes follow)\n    BYTE_STRING_32, // 0x5a\n    // byte string (eight-byte uint64_t for n, and then n bytes follow)\n    BYTE_STRING_64, // 0x5b\n    ERROR, // 0x5c\n    ERROR, // 0x5d\n    ERROR, // 0x5e\n    // byte string, byte strings follow, terminated by \"break\"\n    BYTE_STRING_BREAK, // 0x5f\n    // UTF-8 string (0x00..0x17 bytes follow)\n    UTF8_STRING, // 0x60\n    UTF8_STRING, // 0x61\n    UTF8_STRING, // 0x62\n    UTF8_STRING, // 0x63\n    UTF8_STRING, // 0x64\n    UTF8_STRING, // 0x65\n    UTF8_STRING, // 0x66\n    UTF8_STRING, // 0x67\n    UTF8_STRING, // 0x68\n    UTF8_STRING, // 0x69\n    UTF8_STRING, // 0x6A\n    UTF8_STRING, // 0x6B\n    UTF8_STRING, // 0x6C\n    UTF8_STRING, // 0x6D\n    UTF8_STRING, // 0x6E\n    UTF8_STRING, // 0x6F\n    UTF8_STRING, // 0x70\n    UTF8_STRING, // 0x71\n    UTF8_STRING, // 0x72\n    UTF8_STRING, // 0x73\n    UTF8_STRING, // 0x74\n    UTF8_STRING, // 0x75\n    UTF8_STRING, // 0x76\n    UTF8_STRING, // 0x77\n    // UTF-8 string (one-byte uint8_t for n, and then n bytes follow)\n    UTF8_STRING_8, // 0x78\n    // UTF-8 string (two-byte uint16_t for n, and then n bytes follow)\n    UTF8_STRING_16, // 0x79\n    // UTF-8 string (four-byte uint32_t for n, and then n bytes follow)\n    UTF8_STRING_32, // 0x7a\n    // UTF-8 string (eight-byte uint64_t for n, and then n bytes follow)\n    UTF8_STRING_64, // 0x7b\n    // UTF-8 string, UTF-8 strings follow, terminated by \"break\"\n    ERROR, // 0x7c\n    ERROR, // 0x7d\n    ERROR, // 0x7e\n    UTF8_STRING_BREAK, // 0x7f\n    // array (0x00..0x17 data items follow)\n    ARRAY, // 0x80\n    ARRAY, // 0x81\n    ARRAY, // 0x82\n    ARRAY, // 0x83\n    ARRAY, // 0x84\n    ARRAY, // 0x85\n    ARRAY, // 0x86\n    ARRAY, // 0x87\n    ARRAY, // 0x88\n    ARRAY, // 0x89\n    ARRAY, // 0x8A\n    ARRAY, // 0x8B\n    ARRAY, // 0x8C\n    ARRAY, // 0x8D\n    ARRAY, // 0x8E\n    ARRAY, // 0x8F\n    ARRAY, // 0x90\n    ARRAY, // 0x91\n    ARRAY, // 0x92\n    ARRAY, // 0x93\n    ARRAY, // 0x94\n    ARRAY, // 0x95\n    ARRAY, // 0x96\n    ARRAY, // 0x97\n    // array (one-byte uint8_t fo, and then n data items follow)\n    ARRAY_8, // 0x98\n    // array (two-byte uint16_t for n, and then n data items follow)\n    ARRAY_16, // 0x99\n    // array (four-byte uint32_t for n, and then n data items follow)\n    ARRAY_32, // 0x9a\n    // array (eight-byte uint64_t for n, and then n data items follow)\n    ARRAY_64, // 0x9b\n    // array, data items follow, terminated by \"break\"\n    ERROR, // 0x9c\n    ERROR, // 0x9d\n    ERROR, // 0x9e\n    ARRAY_BREAK, // 0x9f\n    // map (0x00..0x17 pairs of data items follow)\n    MAP, // 0xa0\n    MAP, // 0xa1\n    MAP, // 0xa2\n    MAP, // 0xa3\n    MAP, // 0xa4\n    MAP, // 0xa5\n    MAP, // 0xa6\n    MAP, // 0xa7\n    MAP, // 0xa8\n    MAP, // 0xa9\n    MAP, // 0xaA\n    MAP, // 0xaB\n    MAP, // 0xaC\n    MAP, // 0xaD\n    MAP, // 0xaE\n    MAP, // 0xaF\n    MAP, // 0xb0\n    MAP, // 0xb1\n    MAP, // 0xb2\n    MAP, // 0xb3\n    MAP, // 0xb4\n    MAP, // 0xb5\n    MAP, // 0xb6\n    MAP, // 0xb7\n    // map (one-byte uint8_t for n, and then n pairs of data items follow)\n    MAP_8, // 0xb8\n    // map (two-byte uint16_t for n, and then n pairs of data items follow)\n    MAP_16, // 0xb9\n    // map (four-byte uint32_t for n, and then n pairs of data items follow)\n    MAP_32, // 0xba\n    // map (eight-byte uint64_t for n, and then n pairs of data items follow)\n    MAP_64, // 0xbb\n    ERROR, // 0xbc\n    ERROR, // 0xbd\n    ERROR, // 0xbe\n    // map, pairs of data items follow, terminated by \"break\"\n    MAP_BREAK, // 0xbf\n    // Text-based date/time (data item follows; see Section 2.4.1)\n    TAG_KNOWN, // 0xc0\n    // Epoch-based date/time (data item follows; see Section 2.4.1)\n    TAG_KNOWN, // 0xc1\n    // Positive bignum (data item \"byte string\" follows)\n    TAG_KNOWN, // 0xc2\n    // Negative bignum (data item \"byte string\" follows)\n    TAG_KNOWN, // 0xc3\n    // Decimal Fraction (data item \"array\" follows; see Section 2.4.3)\n    TAG_KNOWN, // 0xc4\n    // Bigfloat (data item \"array\" follows; see Section 2.4.3)\n    TAG_KNOWN, // 0xc5\n    // (tagged item)\n    TAG_UNASSIGNED, // 0xc6\n    TAG_UNASSIGNED, // 0xc7\n    TAG_UNASSIGNED, // 0xc8\n    TAG_UNASSIGNED, // 0xc9\n    TAG_UNASSIGNED, // 0xca\n    TAG_UNASSIGNED, // 0xcb\n    TAG_UNASSIGNED, // 0xcc\n    TAG_UNASSIGNED, // 0xcd\n    TAG_UNASSIGNED, // 0xce\n    TAG_UNASSIGNED, // 0xcf\n    TAG_UNASSIGNED, // 0xd0\n    TAG_UNASSIGNED, // 0xd1\n    TAG_UNASSIGNED, // 0xd2\n    TAG_UNASSIGNED, // 0xd3\n    TAG_UNASSIGNED, // 0xd4\n    // Expected Conversion (data item follows; see Section 2.4.4.2)\n    TAG_UNASSIGNED, // 0xd5\n    TAG_UNASSIGNED, // 0xd6\n    TAG_UNASSIGNED, // 0xd7\n    // (more tagged items, 1/2/4/8 bytes and then a data item follow)\n    TAG_MORE_1, // 0xd8\n    TAG_MORE_2, // 0xd9\n    TAG_MORE_4, // 0xda\n    TAG_MORE_8, // 0xdb\n    ERROR, // 0xdc\n    ERROR, // 0xdd\n    ERROR, // 0xde\n    ERROR, // 0xdf\n    // (simple value)\n    SIMPLE_UNASSIGNED, // 0xe0\n    SIMPLE_UNASSIGNED, // 0xe1\n    SIMPLE_UNASSIGNED, // 0xe2\n    SIMPLE_UNASSIGNED, // 0xe3\n    SIMPLE_UNASSIGNED, // 0xe4\n    SIMPLE_UNASSIGNED, // 0xe5\n    SIMPLE_UNASSIGNED, // 0xe6\n    SIMPLE_UNASSIGNED, // 0xe7\n    SIMPLE_UNASSIGNED, // 0xe8\n    SIMPLE_UNASSIGNED, // 0xe9\n    SIMPLE_UNASSIGNED, // 0xea\n    SIMPLE_UNASSIGNED, // 0xeb\n    SIMPLE_UNASSIGNED, // 0xec\n    SIMPLE_UNASSIGNED, // 0xed\n    SIMPLE_UNASSIGNED, // 0xee\n    SIMPLE_UNASSIGNED, // 0xef\n    SIMPLE_UNASSIGNED, // 0xf0\n    SIMPLE_UNASSIGNED, // 0xf1\n    SIMPLE_UNASSIGNED, // 0xf2\n    SIMPLE_UNASSIGNED, // 0xf3\n    // False\n    SIMPLE_FALSE, // 0xf4\n    // True\n    SIMPLE_TRUE, // 0xf5\n    // Null\n    SIMPLE_NULL, // 0xf6\n    // Undefined\n    SIMPLE_UNDEFINED, // 0xf7\n    // (simple value, one byte follows)\n    SIMPLE_BYTE, // 0xf8\n    // Half-Precision Float (two-byte IEEE 754)\n    SIMPLE_FLOAT_HALF, // 0xf9\n    // Single-Precision Float (four-byte IEEE 754)\n    SIMPLE_FLOAT_SINGLE, // 0xfa\n    // Double-Precision Float (eight-byte IEEE 754)\n    SIMPLE_FLOAT_DOUBLE, // 0xfb\n    ERROR, // 0xfc\n    ERROR, // 0xfd\n    ERROR, // 0xfe\n    // \"break\" stop code\n    BREAK // 0xff\n  ]\n\n  // --\n\n  return {\n    parse: parse\n  }\n}\n","'use strict'\n\nconst Bignumber = require('bignumber.js').BigNumber\n\nexports.MT = {\n  POS_INT: 0,\n  NEG_INT: 1,\n  BYTE_STRING: 2,\n  UTF8_STRING: 3,\n  ARRAY: 4,\n  MAP: 5,\n  TAG: 6,\n  SIMPLE_FLOAT: 7\n}\n\nexports.TAG = {\n  DATE_STRING: 0,\n  DATE_EPOCH: 1,\n  POS_BIGINT: 2,\n  NEG_BIGINT: 3,\n  DECIMAL_FRAC: 4,\n  BIGFLOAT: 5,\n  BASE64URL_EXPECTED: 21,\n  BASE64_EXPECTED: 22,\n  BASE16_EXPECTED: 23,\n  CBOR: 24,\n  URI: 32,\n  BASE64URL: 33,\n  BASE64: 34,\n  REGEXP: 35,\n  MIME: 36\n}\n\nexports.NUMBYTES = {\n  ZERO: 0,\n  ONE: 24,\n  TWO: 25,\n  FOUR: 26,\n  EIGHT: 27,\n  INDEFINITE: 31\n}\n\nexports.SIMPLE = {\n  FALSE: 20,\n  TRUE: 21,\n  NULL: 22,\n  UNDEFINED: 23\n}\n\nexports.SYMS = {\n  NULL: Symbol('null'),\n  UNDEFINED: Symbol('undef'),\n  PARENT: Symbol('parent'),\n  BREAK: Symbol('break'),\n  STREAM: Symbol('stream')\n}\n\nexports.SHIFT32 = Math.pow(2, 32)\nexports.SHIFT16 = Math.pow(2, 16)\n\nexports.MAX_SAFE_HIGH = 0x1fffff\nexports.NEG_ONE = new Bignumber(-1)\nexports.TEN = new Bignumber(10)\nexports.TWO = new Bignumber(2)\n\nexports.PARENT = {\n  ARRAY: 0,\n  OBJECT: 1,\n  MAP: 2,\n  TAG: 3,\n  BYTE_STRING: 4,\n  UTF8_STRING: 5\n}\n","'use strict'\n\nconst { Buffer } = require('buffer')\nconst Bignumber = require('bignumber.js').BigNumber\n\nconst constants = require('./constants')\nconst SHIFT32 = constants.SHIFT32\nconst SHIFT16 = constants.SHIFT16\nconst MAX_SAFE_HIGH = 0x1fffff\n\nexports.parseHalf = function parseHalf (buf) {\n  var exp, mant, sign\n  sign = buf[0] & 0x80 ? -1 : 1\n  exp = (buf[0] & 0x7C) >> 2\n  mant = ((buf[0] & 0x03) << 8) | buf[1]\n  if (!exp) {\n    return sign * 5.9604644775390625e-8 * mant\n  } else if (exp === 0x1f) {\n    return sign * (mant ? 0 / 0 : 2e308)\n  } else {\n    return sign * Math.pow(2, exp - 25) * (1024 + mant)\n  }\n}\n\nfunction toHex (n) {\n  if (n < 16) {\n    return '0' + n.toString(16)\n  }\n\n  return n.toString(16)\n}\n\nexports.arrayBufferToBignumber = function (buf) {\n  const len = buf.byteLength\n  let res = ''\n  for (let i = 0; i < len; i++) {\n    res += toHex(buf[i])\n  }\n\n  return new Bignumber(res, 16)\n}\n\n// convert an Object into a Map\nexports.buildMap = (obj) => {\n  const res = new Map()\n  const keys = Object.keys(obj)\n  const length = keys.length\n  for (let i = 0; i < length; i++) {\n    res.set(keys[i], obj[keys[i]])\n  }\n  return res\n}\n\nexports.buildInt32 = (f, g) => {\n  return f * SHIFT16 + g\n}\n\nexports.buildInt64 = (f1, f2, g1, g2) => {\n  const f = exports.buildInt32(f1, f2)\n  const g = exports.buildInt32(g1, g2)\n\n  if (f > MAX_SAFE_HIGH) {\n    return new Bignumber(f).times(SHIFT32).plus(g)\n  } else {\n    return (f * SHIFT32) + g\n  }\n}\n\nexports.writeHalf = function writeHalf (buf, half) {\n  // assume 0, -0, NaN, Infinity, and -Infinity have already been caught\n\n  // HACK: everyone settle in.  This isn't going to be pretty.\n  // Translate cn-cbor's C code (from Carsten Borman):\n\n  // uint32_t be32;\n  // uint16_t be16, u16;\n  // union {\n  //   float f;\n  //   uint32_t u;\n  // } u32;\n  // u32.f = float_val;\n\n  const u32 = Buffer.allocUnsafe(4)\n  u32.writeFloatBE(half, 0)\n  const u = u32.readUInt32BE(0)\n\n  // if ((u32.u & 0x1FFF) == 0) { /* worth trying half */\n\n  // hildjj: If the lower 13 bits are 0, we won't lose anything in the conversion\n  if ((u & 0x1FFF) !== 0) {\n    return false\n  }\n\n  //   int s16 = (u32.u >> 16) & 0x8000;\n  //   int exp = (u32.u >> 23) & 0xff;\n  //   int mant = u32.u & 0x7fffff;\n\n  var s16 = (u >> 16) & 0x8000 // top bit is sign\n  const exp = (u >> 23) & 0xff // then 5 bits of exponent\n  const mant = u & 0x7fffff\n\n  //   if (exp == 0 && mant == 0)\n  //     ;              /* 0.0, -0.0 */\n\n  // hildjj: zeros already handled.  Assert if you don't believe me.\n\n  //   else if (exp >= 113 && exp <= 142) /* normalized */\n  //     s16 += ((exp - 112) << 10) + (mant >> 13);\n  if ((exp >= 113) && (exp <= 142)) {\n    s16 += ((exp - 112) << 10) + (mant >> 13)\n\n  //   else if (exp >= 103 && exp < 113) { /* denorm, exp16 = 0 */\n  //     if (mant & ((1 << (126 - exp)) - 1))\n  //       goto float32;         /* loss of precision */\n  //     s16 += ((mant + 0x800000) >> (126 - exp));\n  } else if ((exp >= 103) && (exp < 113)) {\n    if (mant & ((1 << (126 - exp)) - 1)) {\n      return false\n    }\n    s16 += ((mant + 0x800000) >> (126 - exp))\n\n    //   } else if (exp == 255 && mant == 0) { /* Inf */\n    //     s16 += 0x7c00;\n\n    // hildjj: Infinity already handled\n\n  //   } else\n  //     goto float32;           /* loss of range */\n  } else {\n    return false\n  }\n\n  //   ensure_writable(3);\n  //   u16 = s16;\n  //   be16 = hton16p((const uint8_t*)&u16);\n  buf.writeUInt16BE(s16, 0)\n  return true\n}\n\nexports.keySorter = function (a, b) {\n  var lenA = a[0].byteLength\n  var lenB = b[0].byteLength\n\n  if (lenA > lenB) {\n    return 1\n  }\n\n  if (lenB > lenA) {\n    return -1\n  }\n\n  return a[0].compare(b[0])\n}\n\n// Adapted from http://www.2ality.com/2012/03/signedzero.html\nexports.isNegativeZero = (x) => {\n  return x === 0 && (1 / x < 0)\n}\n\nexports.nextPowerOf2 = (n) => {\n  let count = 0\n  // First n in the below condition is for\n  // the case where n is 0\n  if (n && !(n & (n - 1))) {\n    return n\n  }\n\n  while (n !== 0) {\n    n >>= 1\n    count += 1\n  }\n\n  return 1 << count\n}\n","'use strict'\n\nconst constants = require('./constants')\nconst MT = constants.MT\nconst SIMPLE = constants.SIMPLE\nconst SYMS = constants.SYMS\n\n/**\n * A CBOR Simple Value that does not map onto a known constant.\n */\nclass Simple {\n  /**\n   * Creates an instance of Simple.\n   *\n   * @param {integer} value - the simple value's integer value\n   */\n  constructor (value) {\n    if (typeof value !== 'number') {\n      throw new Error('Invalid Simple type: ' + (typeof value))\n    }\n    if ((value < 0) || (value > 255) || ((value | 0) !== value)) {\n      throw new Error('value must be a small positive integer: ' + value)\n    }\n    this.value = value\n  }\n\n  /**\n   * Debug string for simple value\n   *\n   * @returns {string} simple(value)\n   */\n  toString () {\n    return 'simple(' + this.value + ')'\n  }\n\n  /**\n   * Debug string for simple value\n   *\n   * @returns {string} simple(value)\n   */\n  inspect () {\n    return 'simple(' + this.value + ')'\n  }\n\n  /**\n   * Push the simple value onto the CBOR stream\n   *\n   * @param {cbor.Encoder} gen The generator to push onto\n   * @returns {number}\n   */\n  encodeCBOR (gen) {\n    return gen._pushInt(this.value, MT.SIMPLE_FLOAT)\n  }\n\n  /**\n   * Is the given object a Simple?\n   *\n   * @param {any} obj - object to test\n   * @returns {bool} - is it Simple?\n   */\n  static isSimple (obj) {\n    return obj instanceof Simple\n  }\n\n  /**\n   * Decode from the CBOR additional information into a JavaScript value.\n   * If the CBOR item has no parent, return a \"safe\" symbol instead of\n   * `null` or `undefined`, so that the value can be passed through a\n   * stream in object mode.\n   *\n   * @param {Number} val - the CBOR additional info to convert\n   * @param {bool} hasParent - Does the CBOR item have a parent?\n   * @returns {(null|undefined|Boolean|Symbol)} - the decoded value\n   */\n  static decode (val, hasParent) {\n    if (hasParent == null) {\n      hasParent = true\n    }\n    switch (val) {\n      case SIMPLE.FALSE:\n        return false\n      case SIMPLE.TRUE:\n        return true\n      case SIMPLE.NULL:\n        if (hasParent) {\n          return null\n        } else {\n          return SYMS.NULL\n        }\n      case SIMPLE.UNDEFINED:\n        if (hasParent) {\n          return undefined\n        } else {\n          return SYMS.UNDEFINED\n        }\n      case -1:\n        if (!hasParent) {\n          throw new Error('Invalid BREAK')\n        }\n        return SYMS.BREAK\n      default:\n        return new Simple(val)\n    }\n  }\n}\n\nmodule.exports = Simple\n","'use strict'\n\n/**\n * A CBOR tagged item, where the tag does not have semantics specified at the\n * moment, or those semantics threw an error during parsing. Typically this will\n * be an extension point you're not yet expecting.\n */\nclass Tagged {\n  /**\n   * Creates an instance of Tagged.\n   *\n   * @param {Number} tag - the number of the tag\n   * @param {any} value - the value inside the tag\n   * @param {Error} err - the error that was thrown parsing the tag, or null\n   */\n  constructor (tag, value, err) {\n    this.tag = tag\n    this.value = value\n    this.err = err\n    if (typeof this.tag !== 'number') {\n      throw new Error('Invalid tag type (' + (typeof this.tag) + ')')\n    }\n    if ((this.tag < 0) || ((this.tag | 0) !== this.tag)) {\n      throw new Error('Tag must be a positive integer: ' + this.tag)\n    }\n  }\n\n  /**\n   * Convert to a String\n   *\n   * @returns {String} string of the form '1(2)'\n   */\n  toString () {\n    return `${this.tag}(${JSON.stringify(this.value)})`\n  }\n\n  /**\n   * Push the simple value onto the CBOR stream\n   *\n   * @param {cbor.Encoder} gen The generator to push onto\n   * @returns {number}\n   */\n  encodeCBOR (gen) {\n    gen._pushTag(this.tag)\n    return gen.pushAny(this.value)\n  }\n\n  /**\n   * If we have a converter for this type, do the conversion.  Some converters\n   * are built-in.  Additional ones can be passed in.  If you want to remove\n   * a built-in converter, pass a converter in whose value is 'null' instead\n   * of a function.\n   *\n   * @param {Object} converters - keys in the object are a tag number, the value\n   *   is a function that takes the decoded CBOR and returns a JavaScript value\n   *   of the appropriate type.  Throw an exception in the function on errors.\n   * @returns {any} - the converted item\n   */\n  convert (converters) {\n    var er, f\n    f = converters != null ? converters[this.tag] : undefined\n    if (typeof f !== 'function') {\n      f = Tagged['_tag' + this.tag]\n      if (typeof f !== 'function') {\n        return this\n      }\n    }\n    try {\n      return f.call(Tagged, this.value)\n    } catch (error) {\n      er = error\n      this.err = er\n      return this\n    }\n  }\n}\n\nmodule.exports = Tagged\n","'use strict';\n\nconst defaultBase = self.location ?\n    self.location.protocol + '//' + self.location.host :\n    '';\nconst URL = self.URL;\n\nclass URLWithLegacySupport {\n    constructor(url = '', base = defaultBase) {\n        this.super = new URL(url, base);\n        this.path = this.pathname + this.search;\n        this.auth =\n            this.username && this.password ?\n                this.username + ':' + this.password :\n                null;\n\n        this.query =\n            this.search && this.search.startsWith('?') ?\n                this.search.slice(1) :\n                null;\n    }\n\n    get hash() {\n        return this.super.hash;\n    }\n    get host() {\n        return this.super.host;\n    }\n    get hostname() {\n        return this.super.hostname;\n    }\n    get href() {\n        return this.super.href;\n    }\n    get origin() {\n        return this.super.origin;\n    }\n    get password() {\n        return this.super.password;\n    }\n    get pathname() {\n        return this.super.pathname;\n    }\n    get port() {\n        return this.super.port;\n    }\n    get protocol() {\n        return this.super.protocol;\n    }\n    get search() {\n        return this.super.search;\n    }\n    get searchParams() {\n        return this.super.searchParams;\n    }\n    get username() {\n        return this.super.username;\n    }\n\n    set hash(hash) {\n        this.super.hash = hash;\n    }\n    set host(host) {\n        this.super.host = host;\n    }\n    set hostname(hostname) {\n        this.super.hostname = hostname;\n    }\n    set href(href) {\n        this.super.href = href;\n    }\n    set origin(origin) {\n        this.super.origin = origin;\n    }\n    set password(password) {\n        this.super.password = password;\n    }\n    set pathname(pathname) {\n        this.super.pathname = pathname;\n    }\n    set port(port) {\n        this.super.port = port;\n    }\n    set protocol(protocol) {\n        this.super.protocol = protocol;\n    }\n    set search(search) {\n        this.super.search = search;\n    }\n    set searchParams(searchParams) {\n        this.super.searchParams = searchParams;\n    }\n    set username(username) {\n        this.super.username = username;\n    }\n\n    createObjectURL(o) {\n        return this.super.createObjectURL(o);\n    }\n    revokeObjectURL(o) {\n        this.super.revokeObjectURL(o);\n    }\n    toJSON() {\n        return this.super.toJSON();\n    }\n    toString() {\n        return this.super.toString();\n    }\n    format() {\n        return this.toString();\n    }\n}\n\nfunction format(obj) {\n    if (typeof obj === 'string') {\n        const url = new URL(obj);\n\n        return url.toString();\n    }\n\n    if (!(obj instanceof URL)) {\n        const userPass =\n            obj.username && obj.password ?\n                `${obj.username}:${obj.password}@` :\n                '';\n        const auth = obj.auth ? obj.auth + '@' : '';\n        const port = obj.port ? ':' + obj.port : '';\n        const protocol = obj.protocol ? obj.protocol + '//' : '';\n        const host = obj.host || '';\n        const hostname = obj.hostname || '';\n        const search = obj.search || (obj.query ? '?' + obj.query : '');\n        const hash = obj.hash || '';\n        const pathname = obj.pathname || '';\n        const path = obj.path || pathname + search;\n\n        return `${protocol}${userPass || auth}${host ||\n            hostname + port}${path}${hash}`;\n    }\n}\n\nmodule.exports = {\n    URLWithLegacySupport,\n    URLSearchParams: self.URLSearchParams,\n    defaultBase,\n    format\n};\n","'use strict';\n\nconst { URLWithLegacySupport, format } = require('./url');\n\nmodule.exports = (url, location = {}, protocolMap = {}, defaultProtocol) => {\n    let protocol = location.protocol ?\n        location.protocol.replace(':', '') :\n        'http';\n\n    // Check protocol map\n    protocol = (protocolMap[protocol] || defaultProtocol || protocol) + ':';\n    let urlParsed;\n\n    try {\n        urlParsed = new URLWithLegacySupport(url);\n    } catch (err) {\n        urlParsed = {};\n    }\n\n    const base = Object.assign({}, location, {\n        protocol: protocol || urlParsed.protocol,\n        host: location.host || urlParsed.host\n    });\n\n    return new URLWithLegacySupport(url, format(base)).toString();\n};\n","'use strict';\n\nconst {\n    URLWithLegacySupport,\n    format,\n    URLSearchParams,\n    defaultBase\n} = require('./src/url');\nconst relative = require('./src/relative');\n\nmodule.exports = {\n    URL: URLWithLegacySupport,\n    URLSearchParams,\n    format,\n    relative,\n    defaultBase\n};\n","'use strict'\n\nconst { Buffer } = require('buffer')\nconst ieee754 = require('ieee754')\nconst Bignumber = require('bignumber.js').BigNumber\n\nconst parser = require('./decoder.asm')\nconst utils = require('./utils')\nconst c = require('./constants')\nconst Simple = require('./simple')\nconst Tagged = require('./tagged')\nconst { URL } = require('iso-url')\n\n/**\n * Transform binary cbor data into JavaScript objects.\n */\nclass Decoder {\n  /**\n   * @param {Object} [opts={}]\n   * @param {number} [opts.size=65536] - Size of the allocated heap.\n   */\n  constructor (opts) {\n    opts = opts || {}\n\n    if (!opts.size || opts.size < 0x10000) {\n      opts.size = 0x10000\n    } else {\n      // Ensure the size is a power of 2\n      opts.size = utils.nextPowerOf2(opts.size)\n    }\n\n    // Heap use to share the input with the parser\n    this._heap = new ArrayBuffer(opts.size)\n    this._heap8 = new Uint8Array(this._heap)\n    this._buffer = Buffer.from(this._heap)\n\n    this._reset()\n\n    // Known tags\n    this._knownTags = Object.assign({\n      0: (val) => new Date(val),\n      1: (val) => new Date(val * 1000),\n      2: (val) => utils.arrayBufferToBignumber(val),\n      3: (val) => c.NEG_ONE.minus(utils.arrayBufferToBignumber(val)),\n      4: (v) => {\n        // const v = new Uint8Array(val)\n        return c.TEN.pow(v[0]).times(v[1])\n      },\n      5: (v) => {\n        // const v = new Uint8Array(val)\n        return c.TWO.pow(v[0]).times(v[1])\n      },\n      32: (val) => new URL(val),\n      35: (val) => new RegExp(val)\n    }, opts.tags)\n\n    // Initialize asm based parser\n    this.parser = parser(global, {\n      // eslint-disable-next-line no-console\n      log: console.log.bind(console),\n      pushInt: this.pushInt.bind(this),\n      pushInt32: this.pushInt32.bind(this),\n      pushInt32Neg: this.pushInt32Neg.bind(this),\n      pushInt64: this.pushInt64.bind(this),\n      pushInt64Neg: this.pushInt64Neg.bind(this),\n      pushFloat: this.pushFloat.bind(this),\n      pushFloatSingle: this.pushFloatSingle.bind(this),\n      pushFloatDouble: this.pushFloatDouble.bind(this),\n      pushTrue: this.pushTrue.bind(this),\n      pushFalse: this.pushFalse.bind(this),\n      pushUndefined: this.pushUndefined.bind(this),\n      pushNull: this.pushNull.bind(this),\n      pushInfinity: this.pushInfinity.bind(this),\n      pushInfinityNeg: this.pushInfinityNeg.bind(this),\n      pushNaN: this.pushNaN.bind(this),\n      pushNaNNeg: this.pushNaNNeg.bind(this),\n      pushArrayStart: this.pushArrayStart.bind(this),\n      pushArrayStartFixed: this.pushArrayStartFixed.bind(this),\n      pushArrayStartFixed32: this.pushArrayStartFixed32.bind(this),\n      pushArrayStartFixed64: this.pushArrayStartFixed64.bind(this),\n      pushObjectStart: this.pushObjectStart.bind(this),\n      pushObjectStartFixed: this.pushObjectStartFixed.bind(this),\n      pushObjectStartFixed32: this.pushObjectStartFixed32.bind(this),\n      pushObjectStartFixed64: this.pushObjectStartFixed64.bind(this),\n      pushByteString: this.pushByteString.bind(this),\n      pushByteStringStart: this.pushByteStringStart.bind(this),\n      pushUtf8String: this.pushUtf8String.bind(this),\n      pushUtf8StringStart: this.pushUtf8StringStart.bind(this),\n      pushSimpleUnassigned: this.pushSimpleUnassigned.bind(this),\n      pushTagUnassigned: this.pushTagUnassigned.bind(this),\n      pushTagStart: this.pushTagStart.bind(this),\n      pushTagStart4: this.pushTagStart4.bind(this),\n      pushTagStart8: this.pushTagStart8.bind(this),\n      pushBreak: this.pushBreak.bind(this)\n    }, this._heap)\n  }\n\n  get _depth () {\n    return this._parents.length\n  }\n\n  get _currentParent () {\n    return this._parents[this._depth - 1]\n  }\n\n  get _ref () {\n    return this._currentParent.ref\n  }\n\n  // Finish the current parent\n  _closeParent () {\n    var p = this._parents.pop()\n\n    if (p.length > 0) {\n      throw new Error(`Missing ${p.length} elements`)\n    }\n\n    switch (p.type) {\n      case c.PARENT.TAG:\n        this._push(\n          this.createTag(p.ref[0], p.ref[1])\n        )\n        break\n      case c.PARENT.BYTE_STRING:\n        this._push(this.createByteString(p.ref, p.length))\n        break\n      case c.PARENT.UTF8_STRING:\n        this._push(this.createUtf8String(p.ref, p.length))\n        break\n      case c.PARENT.MAP:\n        if (p.values % 2 > 0) {\n          throw new Error('Odd number of elements in the map')\n        }\n        this._push(this.createMap(p.ref, p.length))\n        break\n      case c.PARENT.OBJECT:\n        if (p.values % 2 > 0) {\n          throw new Error('Odd number of elements in the map')\n        }\n        this._push(this.createObject(p.ref, p.length))\n        break\n      case c.PARENT.ARRAY:\n        this._push(this.createArray(p.ref, p.length))\n        break\n      default:\n        break\n    }\n\n    if (this._currentParent && this._currentParent.type === c.PARENT.TAG) {\n      this._dec()\n    }\n  }\n\n  // Reduce the expected length of the current parent by one\n  _dec () {\n    const p = this._currentParent\n    // The current parent does not know the epxected child length\n\n    if (p.length < 0) {\n      return\n    }\n\n    p.length--\n\n    // All children were seen, we can close the current parent\n    if (p.length === 0) {\n      this._closeParent()\n    }\n  }\n\n  // Push any value to the current parent\n  _push (val, hasChildren) {\n    const p = this._currentParent\n    p.values++\n\n    switch (p.type) {\n      case c.PARENT.ARRAY:\n      case c.PARENT.BYTE_STRING:\n      case c.PARENT.UTF8_STRING:\n        if (p.length > -1) {\n          this._ref[this._ref.length - p.length] = val\n        } else {\n          this._ref.push(val)\n        }\n        this._dec()\n        break\n      case c.PARENT.OBJECT:\n        if (p.tmpKey != null) {\n          this._ref[p.tmpKey] = val\n          p.tmpKey = null\n          this._dec()\n        } else {\n          p.tmpKey = val\n\n          if (typeof p.tmpKey !== 'string') {\n            // too bad, convert to a Map\n            p.type = c.PARENT.MAP\n            p.ref = utils.buildMap(p.ref)\n          }\n        }\n        break\n      case c.PARENT.MAP:\n        if (p.tmpKey != null) {\n          this._ref.set(p.tmpKey, val)\n          p.tmpKey = null\n          this._dec()\n        } else {\n          p.tmpKey = val\n        }\n        break\n      case c.PARENT.TAG:\n        this._ref.push(val)\n        if (!hasChildren) {\n          this._dec()\n        }\n        break\n      default:\n        throw new Error('Unknown parent type')\n    }\n  }\n\n  // Create a new parent in the parents list\n  _createParent (obj, type, len) {\n    this._parents[this._depth] = {\n      type: type,\n      length: len,\n      ref: obj,\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  // Reset all state back to the beginning, also used for initiatlization\n  _reset () {\n    this._res = []\n    this._parents = [{\n      type: c.PARENT.ARRAY,\n      length: -1,\n      ref: this._res,\n      values: 0,\n      tmpKey: null\n    }]\n  }\n\n  // -- Interface to customize deoding behaviour\n  createTag (tagNumber, value) {\n    const typ = this._knownTags[tagNumber]\n\n    if (!typ) {\n      return new Tagged(tagNumber, value)\n    }\n\n    return typ(value)\n  }\n\n  createMap (obj, len) {\n    return obj\n  }\n\n  createObject (obj, len) {\n    return obj\n  }\n\n  createArray (arr, len) {\n    return arr\n  }\n\n  createByteString (raw, len) {\n    return Buffer.concat(raw)\n  }\n\n  createByteStringFromHeap (start, end) {\n    if (start === end) {\n      return Buffer.alloc(0)\n    }\n\n    return Buffer.from(this._heap.slice(start, end))\n  }\n\n  createInt (val) {\n    return val\n  }\n\n  createInt32 (f, g) {\n    return utils.buildInt32(f, g)\n  }\n\n  createInt64 (f1, f2, g1, g2) {\n    return utils.buildInt64(f1, f2, g1, g2)\n  }\n\n  createFloat (val) {\n    return val\n  }\n\n  createFloatSingle (a, b, c, d) {\n    return ieee754.read([a, b, c, d], 0, false, 23, 4)\n  }\n\n  createFloatDouble (a, b, c, d, e, f, g, h) {\n    return ieee754.read([a, b, c, d, e, f, g, h], 0, false, 52, 8)\n  }\n\n  createInt32Neg (f, g) {\n    return -1 - utils.buildInt32(f, g)\n  }\n\n  createInt64Neg (f1, f2, g1, g2) {\n    const f = utils.buildInt32(f1, f2)\n    const g = utils.buildInt32(g1, g2)\n\n    if (f > c.MAX_SAFE_HIGH) {\n      return c.NEG_ONE.minus(new Bignumber(f).times(c.SHIFT32).plus(g))\n    }\n\n    return -1 - ((f * c.SHIFT32) + g)\n  }\n\n  createTrue () {\n    return true\n  }\n\n  createFalse () {\n    return false\n  }\n\n  createNull () {\n    return null\n  }\n\n  createUndefined () {\n    return undefined\n  }\n\n  createInfinity () {\n    return Infinity\n  }\n\n  createInfinityNeg () {\n    return -Infinity\n  }\n\n  createNaN () {\n    return NaN\n  }\n\n  createNaNNeg () {\n    return -NaN\n  }\n\n  createUtf8String (raw, len) {\n    return raw.join('')\n  }\n\n  createUtf8StringFromHeap (start, end) {\n    if (start === end) {\n      return ''\n    }\n\n    return this._buffer.toString('utf8', start, end)\n  }\n\n  createSimpleUnassigned (val) {\n    return new Simple(val)\n  }\n\n  // -- Interface for decoder.asm.js\n\n  pushInt (val) {\n    this._push(this.createInt(val))\n  }\n\n  pushInt32 (f, g) {\n    this._push(this.createInt32(f, g))\n  }\n\n  pushInt64 (f1, f2, g1, g2) {\n    this._push(this.createInt64(f1, f2, g1, g2))\n  }\n\n  pushFloat (val) {\n    this._push(this.createFloat(val))\n  }\n\n  pushFloatSingle (a, b, c, d) {\n    this._push(this.createFloatSingle(a, b, c, d))\n  }\n\n  pushFloatDouble (a, b, c, d, e, f, g, h) {\n    this._push(this.createFloatDouble(a, b, c, d, e, f, g, h))\n  }\n\n  pushInt32Neg (f, g) {\n    this._push(this.createInt32Neg(f, g))\n  }\n\n  pushInt64Neg (f1, f2, g1, g2) {\n    this._push(this.createInt64Neg(f1, f2, g1, g2))\n  }\n\n  pushTrue () {\n    this._push(this.createTrue())\n  }\n\n  pushFalse () {\n    this._push(this.createFalse())\n  }\n\n  pushNull () {\n    this._push(this.createNull())\n  }\n\n  pushUndefined () {\n    this._push(this.createUndefined())\n  }\n\n  pushInfinity () {\n    this._push(this.createInfinity())\n  }\n\n  pushInfinityNeg () {\n    this._push(this.createInfinityNeg())\n  }\n\n  pushNaN () {\n    this._push(this.createNaN())\n  }\n\n  pushNaNNeg () {\n    this._push(this.createNaNNeg())\n  }\n\n  pushArrayStart () {\n    this._createParent([], c.PARENT.ARRAY, -1)\n  }\n\n  pushArrayStartFixed (len) {\n    this._createArrayStartFixed(len)\n  }\n\n  pushArrayStartFixed32 (len1, len2) {\n    const len = utils.buildInt32(len1, len2)\n    this._createArrayStartFixed(len)\n  }\n\n  pushArrayStartFixed64 (len1, len2, len3, len4) {\n    const len = utils.buildInt64(len1, len2, len3, len4)\n    this._createArrayStartFixed(len)\n  }\n\n  pushObjectStart () {\n    this._createObjectStartFixed(-1)\n  }\n\n  pushObjectStartFixed (len) {\n    this._createObjectStartFixed(len)\n  }\n\n  pushObjectStartFixed32 (len1, len2) {\n    const len = utils.buildInt32(len1, len2)\n    this._createObjectStartFixed(len)\n  }\n\n  pushObjectStartFixed64 (len1, len2, len3, len4) {\n    const len = utils.buildInt64(len1, len2, len3, len4)\n    this._createObjectStartFixed(len)\n  }\n\n  pushByteStringStart () {\n    this._parents[this._depth] = {\n      type: c.PARENT.BYTE_STRING,\n      length: -1,\n      ref: [],\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  pushByteString (start, end) {\n    this._push(this.createByteStringFromHeap(start, end))\n  }\n\n  pushUtf8StringStart () {\n    this._parents[this._depth] = {\n      type: c.PARENT.UTF8_STRING,\n      length: -1,\n      ref: [],\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  pushUtf8String (start, end) {\n    this._push(this.createUtf8StringFromHeap(start, end))\n  }\n\n  pushSimpleUnassigned (val) {\n    this._push(this.createSimpleUnassigned(val))\n  }\n\n  pushTagStart (tag) {\n    this._parents[this._depth] = {\n      type: c.PARENT.TAG,\n      length: 1,\n      ref: [tag]\n    }\n  }\n\n  pushTagStart4 (f, g) {\n    this.pushTagStart(utils.buildInt32(f, g))\n  }\n\n  pushTagStart8 (f1, f2, g1, g2) {\n    this.pushTagStart(utils.buildInt64(f1, f2, g1, g2))\n  }\n\n  pushTagUnassigned (tagNumber) {\n    this._push(this.createTag(tagNumber))\n  }\n\n  pushBreak () {\n    if (this._currentParent.length > -1) {\n      throw new Error('Unexpected break')\n    }\n\n    this._closeParent()\n  }\n\n  _createObjectStartFixed (len) {\n    if (len === 0) {\n      this._push(this.createObject({}))\n      return\n    }\n\n    this._createParent({}, c.PARENT.OBJECT, len)\n  }\n\n  _createArrayStartFixed (len) {\n    if (len === 0) {\n      this._push(this.createArray([]))\n      return\n    }\n\n    this._createParent(new Array(len), c.PARENT.ARRAY, len)\n  }\n\n  _decode (input) {\n    if (input.byteLength === 0) {\n      throw new Error('Input too short')\n    }\n\n    this._reset()\n    this._heap8.set(input)\n    const code = this.parser.parse(input.byteLength)\n\n    if (this._depth > 1) {\n      while (this._currentParent.length === 0) {\n        this._closeParent()\n      }\n      if (this._depth > 1) {\n        throw new Error('Undeterminated nesting')\n      }\n    }\n\n    if (code > 0) {\n      throw new Error('Failed to parse')\n    }\n\n    if (this._res.length === 0) {\n      throw new Error('No valid result')\n    }\n  }\n\n  // -- Public Interface\n\n  decodeFirst (input) {\n    this._decode(input)\n\n    return this._res[0]\n  }\n\n  decodeAll (input) {\n    this._decode(input)\n\n    return this._res\n  }\n\n  /**\n   * Decode the first cbor object.\n   *\n   * @param {Buffer|string} input\n   * @param {string} [enc='hex'] - Encoding used if a string is passed.\n   * @returns {*}\n   */\n  static decode (input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex')\n    }\n\n    const dec = new Decoder({ size: input.length })\n    return dec.decodeFirst(input)\n  }\n\n  /**\n   * Decode all cbor objects.\n   *\n   * @param {Buffer|string} input\n   * @param {string} [enc='hex'] - Encoding used if a string is passed.\n   * @returns {Array<*>}\n   */\n  static decodeAll (input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex')\n    }\n\n    const dec = new Decoder({ size: input.length })\n    return dec.decodeAll(input)\n  }\n}\n\nDecoder.decodeFirst = Decoder.decode\n\nmodule.exports = Decoder\n","'use strict'\n\nconst { Buffer } = require('buffer')\nconst Decoder = require('./decoder')\nconst utils = require('./utils')\n\n/**\n * Output the diagnostic format from a stream of CBOR bytes.\n *\n */\nclass Diagnose extends Decoder {\n  createTag (tagNumber, value) {\n    return `${tagNumber}(${value})`\n  }\n\n  createInt (val) {\n    return super.createInt(val).toString()\n  }\n\n  createInt32 (f, g) {\n    return super.createInt32(f, g).toString()\n  }\n\n  createInt64 (f1, f2, g1, g2) {\n    return super.createInt64(f1, f2, g1, g2).toString()\n  }\n\n  createInt32Neg (f, g) {\n    return super.createInt32Neg(f, g).toString()\n  }\n\n  createInt64Neg (f1, f2, g1, g2) {\n    return super.createInt64Neg(f1, f2, g1, g2).toString()\n  }\n\n  createTrue () {\n    return 'true'\n  }\n\n  createFalse () {\n    return 'false'\n  }\n\n  createFloat (val) {\n    const fl = super.createFloat(val)\n    if (utils.isNegativeZero(val)) {\n      return '-0_1'\n    }\n\n    return `${fl}_1`\n  }\n\n  createFloatSingle (a, b, c, d) {\n    const fl = super.createFloatSingle(a, b, c, d)\n    return `${fl}_2`\n  }\n\n  createFloatDouble (a, b, c, d, e, f, g, h) {\n    const fl = super.createFloatDouble(a, b, c, d, e, f, g, h)\n    return `${fl}_3`\n  }\n\n  createByteString (raw, len) {\n    const val = raw.join(', ')\n\n    if (len === -1) {\n      return `(_ ${val})`\n    }\n    return `h'${val}`\n  }\n\n  createByteStringFromHeap (start, end) {\n    const val = (Buffer.from(\n      super.createByteStringFromHeap(start, end)\n    )).toString('hex')\n\n    return `h'${val}'`\n  }\n\n  createInfinity () {\n    return 'Infinity_1'\n  }\n\n  createInfinityNeg () {\n    return '-Infinity_1'\n  }\n\n  createNaN () {\n    return 'NaN_1'\n  }\n\n  createNaNNeg () {\n    return '-NaN_1'\n  }\n\n  createNull () {\n    return 'null'\n  }\n\n  createUndefined () {\n    return 'undefined'\n  }\n\n  createSimpleUnassigned (val) {\n    return `simple(${val})`\n  }\n\n  createArray (arr, len) {\n    const val = super.createArray(arr, len)\n\n    if (len === -1) {\n      // indefinite\n      return `[_ ${val.join(', ')}]`\n    }\n\n    return `[${val.join(', ')}]`\n  }\n\n  createMap (map, len) {\n    const val = super.createMap(map)\n    const list = Array.from(val.keys())\n      .reduce(collectObject(val), '')\n\n    if (len === -1) {\n      return `{_ ${list}}`\n    }\n\n    return `{${list}}`\n  }\n\n  createObject (obj, len) {\n    const val = super.createObject(obj)\n    const map = Object.keys(val)\n      .reduce(collectObject(val), '')\n\n    if (len === -1) {\n      return `{_ ${map}}`\n    }\n\n    return `{${map}}`\n  }\n\n  createUtf8String (raw, len) {\n    const val = raw.join(', ')\n\n    if (len === -1) {\n      return `(_ ${val})`\n    }\n\n    return `\"${val}\"`\n  }\n\n  createUtf8StringFromHeap (start, end) {\n    const val = (Buffer.from(\n      super.createUtf8StringFromHeap(start, end)\n    )).toString('utf8')\n\n    return `\"${val}\"`\n  }\n\n  static diagnose (input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex')\n    }\n\n    const dec = new Diagnose()\n    return dec.decodeFirst(input)\n  }\n}\n\nmodule.exports = Diagnose\n\nfunction collectObject (val) {\n  return (acc, key) => {\n    if (acc) {\n      return `${acc}, ${key}: ${val[key]}`\n    }\n    return `${key}: ${val[key]}`\n  }\n}\n","'use strict'\n\nconst { Buffer } = require('buffer')\nconst { URL } = require('iso-url')\nconst Bignumber = require('bignumber.js').BigNumber\n\nconst utils = require('./utils')\nconst constants = require('./constants')\nconst MT = constants.MT\nconst NUMBYTES = constants.NUMBYTES\nconst SHIFT32 = constants.SHIFT32\nconst SYMS = constants.SYMS\nconst TAG = constants.TAG\nconst HALF = (constants.MT.SIMPLE_FLOAT << 5) | constants.NUMBYTES.TWO\nconst FLOAT = (constants.MT.SIMPLE_FLOAT << 5) | constants.NUMBYTES.FOUR\nconst DOUBLE = (constants.MT.SIMPLE_FLOAT << 5) | constants.NUMBYTES.EIGHT\nconst TRUE = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.TRUE\nconst FALSE = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.FALSE\nconst UNDEFINED = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.UNDEFINED\nconst NULL = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.NULL\n\nconst MAXINT_BN = new Bignumber('0x20000000000000')\nconst BUF_NAN = Buffer.from('f97e00', 'hex')\nconst BUF_INF_NEG = Buffer.from('f9fc00', 'hex')\nconst BUF_INF_POS = Buffer.from('f97c00', 'hex')\n\nfunction toType (obj) {\n  // [object Type]\n  // --------8---1\n  return ({}).toString.call(obj).slice(8, -1)\n}\n\n/**\n * Transform JavaScript values into CBOR bytes\n *\n */\nclass Encoder {\n  /**\n   * @param {Object} [options={}]\n   * @param {function(Buffer)} options.stream\n   */\n  constructor (options) {\n    options = options || {}\n\n    this.streaming = typeof options.stream === 'function'\n    this.onData = options.stream\n\n    this.semanticTypes = [\n      [URL, this._pushUrl],\n      [Bignumber, this._pushBigNumber]\n    ]\n\n    const addTypes = options.genTypes || []\n    const len = addTypes.length\n    for (let i = 0; i < len; i++) {\n      this.addSemanticType(\n        addTypes[i][0],\n        addTypes[i][1]\n      )\n    }\n\n    this._reset()\n  }\n\n  addSemanticType (type, fun) {\n    const len = this.semanticTypes.length\n    for (let i = 0; i < len; i++) {\n      const typ = this.semanticTypes[i][0]\n      if (typ === type) {\n        const old = this.semanticTypes[i][1]\n        this.semanticTypes[i][1] = fun\n        return old\n      }\n    }\n    this.semanticTypes.push([type, fun])\n    return null\n  }\n\n  push (val) {\n    if (!val) {\n      return true\n    }\n\n    this.result[this.offset] = val\n    this.resultMethod[this.offset] = 0\n    this.resultLength[this.offset] = val.length\n    this.offset++\n\n    if (this.streaming) {\n      this.onData(this.finalize())\n    }\n\n    return true\n  }\n\n  pushWrite (val, method, len) {\n    this.result[this.offset] = val\n    this.resultMethod[this.offset] = method\n    this.resultLength[this.offset] = len\n    this.offset++\n\n    if (this.streaming) {\n      this.onData(this.finalize())\n    }\n\n    return true\n  }\n\n  _pushUInt8 (val) {\n    return this.pushWrite(val, 1, 1)\n  }\n\n  _pushUInt16BE (val) {\n    return this.pushWrite(val, 2, 2)\n  }\n\n  _pushUInt32BE (val) {\n    return this.pushWrite(val, 3, 4)\n  }\n\n  _pushDoubleBE (val) {\n    return this.pushWrite(val, 4, 8)\n  }\n\n  _pushNaN () {\n    return this.push(BUF_NAN)\n  }\n\n  _pushInfinity (obj) {\n    const half = (obj < 0) ? BUF_INF_NEG : BUF_INF_POS\n    return this.push(half)\n  }\n\n  _pushFloat (obj) {\n    const b2 = Buffer.allocUnsafe(2)\n\n    if (utils.writeHalf(b2, obj)) {\n      if (utils.parseHalf(b2) === obj) {\n        return this._pushUInt8(HALF) && this.push(b2)\n      }\n    }\n\n    const b4 = Buffer.allocUnsafe(4)\n    b4.writeFloatBE(obj, 0)\n    if (b4.readFloatBE(0) === obj) {\n      return this._pushUInt8(FLOAT) && this.push(b4)\n    }\n\n    return this._pushUInt8(DOUBLE) && this._pushDoubleBE(obj)\n  }\n\n  _pushInt (obj, mt, orig) {\n    const m = mt << 5\n    if (obj < 24) {\n      return this._pushUInt8(m | obj)\n    }\n\n    if (obj <= 0xff) {\n      return this._pushUInt8(m | NUMBYTES.ONE) && this._pushUInt8(obj)\n    }\n\n    if (obj <= 0xffff) {\n      return this._pushUInt8(m | NUMBYTES.TWO) && this._pushUInt16BE(obj)\n    }\n\n    if (obj <= 0xffffffff) {\n      return this._pushUInt8(m | NUMBYTES.FOUR) && this._pushUInt32BE(obj)\n    }\n\n    if (obj <= Number.MAX_SAFE_INTEGER) {\n      return this._pushUInt8(m | NUMBYTES.EIGHT) &&\n        this._pushUInt32BE(Math.floor(obj / SHIFT32)) &&\n        this._pushUInt32BE(obj % SHIFT32)\n    }\n\n    if (mt === MT.NEG_INT) {\n      return this._pushFloat(orig)\n    }\n\n    return this._pushFloat(obj)\n  }\n\n  _pushIntNum (obj) {\n    if (obj < 0) {\n      return this._pushInt(-obj - 1, MT.NEG_INT, obj)\n    } else {\n      return this._pushInt(obj, MT.POS_INT)\n    }\n  }\n\n  _pushNumber (obj) {\n    switch (false) {\n      case (obj === obj): // eslint-disable-line\n        return this._pushNaN(obj)\n      case isFinite(obj):\n        return this._pushInfinity(obj)\n      case ((obj % 1) !== 0):\n        return this._pushIntNum(obj)\n      default:\n        return this._pushFloat(obj)\n    }\n  }\n\n  _pushString (obj) {\n    const len = Buffer.byteLength(obj, 'utf8')\n    return this._pushInt(len, MT.UTF8_STRING) && this.pushWrite(obj, 5, len)\n  }\n\n  _pushBoolean (obj) {\n    return this._pushUInt8(obj ? TRUE : FALSE)\n  }\n\n  _pushUndefined (obj) {\n    return this._pushUInt8(UNDEFINED)\n  }\n\n  _pushArray (gen, obj) {\n    const len = obj.length\n    if (!gen._pushInt(len, MT.ARRAY)) {\n      return false\n    }\n    for (let j = 0; j < len; j++) {\n      if (!gen.pushAny(obj[j])) {\n        return false\n      }\n    }\n    return true\n  }\n\n  _pushTag (tag) {\n    return this._pushInt(tag, MT.TAG)\n  }\n\n  _pushDate (gen, obj) {\n    // Round date, to get seconds since 1970-01-01 00:00:00 as defined in\n    // Sec. 2.4.1 and get a possibly more compact encoding. Note that it is\n    // still allowed to encode fractions of seconds which can be achieved by\n    // changing overwriting the encode function for Date objects.\n    return gen._pushTag(TAG.DATE_EPOCH) && gen.pushAny(Math.round(obj / 1000))\n  }\n\n  _pushBuffer (gen, obj) {\n    return gen._pushInt(obj.length, MT.BYTE_STRING) && gen.push(obj)\n  }\n\n  _pushNoFilter (gen, obj) {\n    return gen._pushBuffer(gen, obj.slice())\n  }\n\n  _pushRegexp (gen, obj) {\n    return gen._pushTag(TAG.REGEXP) && gen.pushAny(obj.source)\n  }\n\n  _pushSet (gen, obj) {\n    if (!gen._pushInt(obj.size, MT.ARRAY)) {\n      return false\n    }\n    for (const x of obj) {\n      if (!gen.pushAny(x)) {\n        return false\n      }\n    }\n    return true\n  }\n\n  _pushUrl (gen, obj) {\n    return gen._pushTag(TAG.URI) && gen.pushAny(obj.format())\n  }\n\n  _pushBigint (obj) {\n    let tag = TAG.POS_BIGINT\n    if (obj.isNegative()) {\n      obj = obj.negated().minus(1)\n      tag = TAG.NEG_BIGINT\n    }\n    let str = obj.toString(16)\n    if (str.length % 2) {\n      str = '0' + str\n    }\n    const buf = Buffer.from(str, 'hex')\n    return this._pushTag(tag) && this._pushBuffer(this, buf)\n  }\n\n  _pushBigNumber (gen, obj) {\n    if (obj.isNaN()) {\n      return gen._pushNaN()\n    }\n    if (!obj.isFinite()) {\n      return gen._pushInfinity(obj.isNegative() ? -Infinity : Infinity)\n    }\n    if (obj.isInteger()) {\n      return gen._pushBigint(obj)\n    }\n    if (!(gen._pushTag(TAG.DECIMAL_FRAC) &&\n      gen._pushInt(2, MT.ARRAY))) {\n      return false\n    }\n\n    const dec = obj.decimalPlaces()\n    const slide = obj.multipliedBy(new Bignumber(10).pow(dec))\n    if (!gen._pushIntNum(-dec)) {\n      return false\n    }\n    if (slide.abs().isLessThan(MAXINT_BN)) {\n      return gen._pushIntNum(slide.toNumber())\n    } else {\n      return gen._pushBigint(slide)\n    }\n  }\n\n  _pushMap (gen, obj) {\n    if (!gen._pushInt(obj.size, MT.MAP)) {\n      return false\n    }\n\n    return this._pushRawMap(\n      obj.size,\n      Array.from(obj)\n    )\n  }\n\n  _pushObject (obj) {\n    if (!obj) {\n      return this._pushUInt8(NULL)\n    }\n\n    var len = this.semanticTypes.length\n    for (var i = 0; i < len; i++) {\n      if (obj instanceof this.semanticTypes[i][0]) {\n        return this.semanticTypes[i][1].call(obj, this, obj)\n      }\n    }\n\n    var f = obj.encodeCBOR\n    if (typeof f === 'function') {\n      return f.call(obj, this)\n    }\n\n    var keys = Object.keys(obj)\n    var keyLength = keys.length\n    if (!this._pushInt(keyLength, MT.MAP)) {\n      return false\n    }\n\n    return this._pushRawMap(\n      keyLength,\n      keys.map((k) => [k, obj[k]])\n    )\n  }\n\n  _pushRawMap (len, map) {\n    // Sort keys for canoncialization\n    // 1. encode key\n    // 2. shorter key comes before longer key\n    // 3. same length keys are sorted with lower\n    //    byte value before higher\n\n    map = map.map(function (a) {\n      a[0] = Encoder.encode(a[0])\n      return a\n    }).sort(utils.keySorter)\n\n    for (var j = 0; j < len; j++) {\n      if (!this.push(map[j][0])) {\n        return false\n      }\n\n      if (!this.pushAny(map[j][1])) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  /**\n   * Alias for `.pushAny`\n   *\n   * @param {*} obj\n   * @returns {boolean} true on success\n   */\n  write (obj) {\n    return this.pushAny(obj)\n  }\n\n  /**\n   * Push any supported type onto the encoded stream\n   *\n   * @param {any} obj\n   * @returns {boolean} true on success\n   */\n  pushAny (obj) {\n    var typ = toType(obj)\n\n    switch (typ) {\n      case 'Number':\n        return this._pushNumber(obj)\n      case 'String':\n        return this._pushString(obj)\n      case 'Boolean':\n        return this._pushBoolean(obj)\n      case 'Object':\n        return this._pushObject(obj)\n      case 'Array':\n        return this._pushArray(this, obj)\n      case 'Uint8Array':\n        return this._pushBuffer(this, Buffer.isBuffer(obj) ? obj : Buffer.from(obj))\n      case 'Null':\n        return this._pushUInt8(NULL)\n      case 'Undefined':\n        return this._pushUndefined(obj)\n      case 'Map':\n        return this._pushMap(this, obj)\n      case 'Set':\n        return this._pushSet(this, obj)\n      case 'URL':\n        return this._pushUrl(this, obj)\n      case 'BigNumber':\n        return this._pushBigNumber(this, obj)\n      case 'Date':\n        return this._pushDate(this, obj)\n      case 'RegExp':\n        return this._pushRegexp(this, obj)\n      case 'Symbol':\n        switch (obj) {\n          case SYMS.NULL:\n            return this._pushObject(null)\n          case SYMS.UNDEFINED:\n            return this._pushUndefined(undefined)\n          // TODO: Add pluggable support for other symbols\n          default:\n            throw new Error('Unknown symbol: ' + obj.toString())\n        }\n      default:\n        throw new Error('Unknown type: ' + typeof obj + ', ' + (obj ? obj.toString() : ''))\n    }\n  }\n\n  finalize () {\n    if (this.offset === 0) {\n      return null\n    }\n\n    var result = this.result\n    var resultLength = this.resultLength\n    var resultMethod = this.resultMethod\n    var offset = this.offset\n\n    // Determine the size of the buffer\n    var size = 0\n    var i = 0\n\n    for (; i < offset; i++) {\n      size += resultLength[i]\n    }\n\n    var res = Buffer.allocUnsafe(size)\n    var index = 0\n    var length = 0\n\n    // Write the content into the result buffer\n    for (i = 0; i < offset; i++) {\n      length = resultLength[i]\n\n      switch (resultMethod[i]) {\n        case 0:\n          result[i].copy(res, index)\n          break\n        case 1:\n          res.writeUInt8(result[i], index, true)\n          break\n        case 2:\n          res.writeUInt16BE(result[i], index, true)\n          break\n        case 3:\n          res.writeUInt32BE(result[i], index, true)\n          break\n        case 4:\n          res.writeDoubleBE(result[i], index, true)\n          break\n        case 5:\n          res.write(result[i], index, length, 'utf8')\n          break\n        default:\n          throw new Error('unkown method')\n      }\n\n      index += length\n    }\n\n    var tmp = res\n\n    this._reset()\n\n    return tmp\n  }\n\n  _reset () {\n    this.result = []\n    this.resultMethod = []\n    this.resultLength = []\n    this.offset = 0\n  }\n\n  /**\n   * Encode the given value\n   * @param {*} o\n   * @returns {Buffer}\n   */\n  static encode (o) {\n    const enc = new Encoder()\n    const ret = enc.pushAny(o)\n    if (!ret) {\n      throw new Error('Failed to encode input')\n    }\n\n    return enc.finalize()\n  }\n}\n\nmodule.exports = Encoder\n","'use strict'\n\n// exports.Commented = require('./commented')\nexports.Diagnose = require('./diagnose')\nexports.Decoder = require('./decoder')\nexports.Encoder = require('./encoder')\nexports.Simple = require('./simple')\nexports.Tagged = require('./tagged')\n\n// exports.comment = exports.Commented.comment\nexports.decodeAll = exports.Decoder.decodeAll\nexports.decodeFirst = exports.Decoder.decodeFirst\nexports.diagnose = exports.Diagnose.diagnose\nexports.encode = exports.Encoder.encode\nexports.decode = exports.Decoder.decode\n\nexports.leveldb = {\n  decode: exports.Decoder.decodeAll,\n  encode: exports.Encoder.encode,\n  buffer: true,\n  name: 'cbor'\n}\n","/**\n * Concatenate multiple array buffers.\n * @param buffers The buffers to concatenate.\n */\nexport function concat(...buffers) {\n    const result = new Uint8Array(buffers.reduce((acc, curr) => acc + curr.byteLength, 0));\n    let index = 0;\n    for (const b of buffers) {\n        result.set(new Uint8Array(b), index);\n        index += b.byteLength;\n    }\n    return result.buffer;\n}\n/**\n * Transforms a buffer to an hexadecimal string. This will use the buffer as an Uint8Array.\n * @param buffer The buffer to return the hexadecimal string of.\n */\nexport function toHex(buffer) {\n    return [...new Uint8Array(buffer)].map(x => x.toString(16).padStart(2, '0')).join('');\n}\nconst hexRe = new RegExp(/^[0-9a-fA-F]+$/);\n/**\n * Transforms a hexadecimal string into an array buffer.\n * @param hex The hexadecimal string to use.\n */\nexport function fromHex(hex) {\n    if (!hexRe.test(hex)) {\n        throw new Error('Invalid hexadecimal string.');\n    }\n    const buffer = [...hex]\n        .reduce((acc, curr, i) => {\n        acc[(i / 2) | 0] = (acc[(i / 2) | 0] || '') + curr;\n        return acc;\n    }, [])\n        .map(x => Number.parseInt(x, 16));\n    return new Uint8Array(buffer).buffer;\n}\n/**\n *\n * @param b1 array buffer 1\n * @param b2 array buffer 2\n * @returns number - negative if b1 < b2, positive if b1 > b2, 0 if b1 === b2\n */\nexport function compare(b1, b2) {\n    if (b1.byteLength !== b2.byteLength) {\n        return b1.byteLength - b2.byteLength;\n    }\n    const u1 = new Uint8Array(b1);\n    const u2 = new Uint8Array(b2);\n    for (let i = 0; i < u1.length; i++) {\n        if (u1[i] !== u2[i]) {\n            return u1[i] - u2[i];\n        }\n    }\n    return 0;\n}\n/**\n * Checks two array buffers for equality.\n * @param b1 array buffer 1\n * @param b2 array buffer 2\n * @returns boolean\n */\nexport function bufEquals(b1, b2) {\n    return compare(b1, b2) === 0;\n}\n/**\n * Returns a true ArrayBuffer from a Uint8Array, as Uint8Array.buffer is unsafe.\n * @param {Uint8Array} arr Uint8Array to convert\n * @returns ArrayBuffer\n */\nexport function uint8ToBuf(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength).buffer;\n}\n/**\n * Returns a true ArrayBuffer from an ArrayBufferLike object.\n * @param bufLike a buffer-like object\n * @returns ArrayBuffer\n */\nexport function bufFromBufLike(bufLike) {\n    if (bufLike instanceof Uint8Array) {\n        return uint8ToBuf(bufLike);\n    }\n    if (bufLike instanceof ArrayBuffer) {\n        return bufLike;\n    }\n    if (Array.isArray(bufLike)) {\n        return uint8ToBuf(new Uint8Array(bufLike));\n    }\n    if ('buffer' in bufLike) {\n        return bufFromBufLike(bufLike.buffer);\n    }\n    return uint8ToBuf(new Uint8Array(bufLike));\n}\n//# sourceMappingURL=buffer.js.map","import { lebEncode } from '@dfinity/candid';\nimport borc from 'borc';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { compare, concat, uint8ToBuf } from './utils/buffer';\n/**\n * sha256 hash the provided Buffer\n * @param data - input to hash function\n */\nexport function hash(data) {\n    return uint8ToBuf(sha256.create().update(new Uint8Array(data)).digest());\n}\n/**\n *\n * @param value unknown value\n * @returns ArrayBuffer\n */\nexport function hashValue(value) {\n    if (value instanceof borc.Tagged) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return hashValue(value.value);\n    }\n    else if (typeof value === 'string') {\n        return hashString(value);\n    }\n    else if (typeof value === 'number') {\n        return hash(lebEncode(value));\n    }\n    else if (value instanceof ArrayBuffer || ArrayBuffer.isView(value)) {\n        return hash(value);\n    }\n    else if (Array.isArray(value)) {\n        const vals = value.map(hashValue);\n        return hash(concat(...vals));\n    }\n    else if (value && typeof value === 'object' && value._isPrincipal) {\n        return hash(value.toUint8Array());\n    }\n    else if (typeof value === 'object' &&\n        value !== null &&\n        typeof value.toHash === 'function') {\n        return hashValue(value.toHash());\n        // TODO This should be move to a specific async method as the webauthn flow required\n        // the flow to be synchronous to ensure Safari touch id works.\n        // } else if (value instanceof Promise) {\n        //   return value.then(x => hashValue(x));\n    }\n    else if (typeof value === 'object') {\n        return hashOfMap(value);\n    }\n    else if (typeof value === 'bigint') {\n        // Do this check much later than the other bigint check because this one is much less\n        // type-safe.\n        // So we want to try all the high-assurance type guards before this 'probable' one.\n        return hash(lebEncode(value));\n    }\n    throw Object.assign(new Error(`Attempt to hash a value of unsupported type: ${value}`), {\n        // include so logs/callers can understand the confusing value.\n        // (when stringified in error message, prototype info is lost)\n        value,\n    });\n}\nconst hashString = (value) => {\n    const encoded = new TextEncoder().encode(value);\n    return hash(encoded);\n};\n/**\n * Get the RequestId of the provided ic-ref request.\n * RequestId is the result of the representation-independent-hash function.\n * https://sdk.dfinity.org/docs/interface-spec/index.html#hash-of-map\n * @param request - ic-ref request to hash into RequestId\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function requestIdOf(request) {\n    return hashOfMap(request);\n}\n/**\n * Hash a map into an ArrayBuffer using the representation-independent-hash function.\n * https://sdk.dfinity.org/docs/interface-spec/index.html#hash-of-map\n * @param map - Any non-nested object\n * @returns ArrayBuffer\n */\nexport function hashOfMap(map) {\n    const hashed = Object.entries(map)\n        .filter(([, value]) => value !== undefined)\n        .map(([key, value]) => {\n        const hashedKey = hashString(key);\n        const hashedValue = hashValue(value);\n        return [hashedKey, hashedValue];\n    });\n    const traversed = hashed;\n    const sorted = traversed.sort(([k1], [k2]) => {\n        return compare(k1, k2);\n    });\n    const concatenated = concat(...sorted.map(x => concat(...x)));\n    const result = hash(concatenated);\n    return result;\n}\n//# sourceMappingURL=request_id.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Principal } from '@dfinity/principal';\nimport { requestIdOf } from './request_id';\nimport { concat, toHex } from './utils/buffer';\nconst domainSeparator = new TextEncoder().encode('\\x0Aic-request');\n/**\n * An Identity that can sign blobs.\n */\nexport class SignIdentity {\n    /**\n     * Get the principal represented by this identity. Normally should be a\n     * `Principal.selfAuthenticating()`.\n     */\n    getPrincipal() {\n        if (!this._principal) {\n            this._principal = Principal.selfAuthenticating(new Uint8Array(this.getPublicKey().toDer()));\n        }\n        return this._principal;\n    }\n    /**\n     * Transform a request into a signed version of the request. This is done last\n     * after the transforms on the body of a request. The returned object can be\n     * anything, but must be serializable to CBOR.\n     * @param request - internet computer request to transform\n     */\n    async transformRequest(request) {\n        const { body } = request, fields = __rest(request, [\"body\"]);\n        const requestId = await requestIdOf(body);\n        return Object.assign(Object.assign({}, fields), { body: {\n                content: body,\n                sender_pubkey: this.getPublicKey().toDer(),\n                sender_sig: await this.sign(concat(domainSeparator, requestId)),\n            } });\n    }\n}\nexport class AnonymousIdentity {\n    getPrincipal() {\n        return Principal.anonymous();\n    }\n    async transformRequest(request) {\n        return Object.assign(Object.assign({}, request), { body: { content: request.body } });\n    }\n}\n/**\n * Create an IdentityDescriptor from a @dfinity/identity Identity\n * @param identity - identity describe in returned descriptor\n */\nexport function createIdentityDescriptor(identity) {\n    const identityIndicator = 'getPublicKey' in identity\n        ? { type: 'PublicKeyIdentity', publicKey: toHex(identity.getPublicKey().toDer()) }\n        : { type: 'AnonymousIdentity' };\n    return identityIndicator;\n}\n//# sourceMappingURL=auth.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MAX_U64_NUMBER = 0x20000000000000;\nfunction _concat(a, ...args) {\n    const newBuffer = new Uint8Array(a.byteLength + args.reduce((acc, b) => acc + b.byteLength, 0));\n    newBuffer.set(new Uint8Array(a), 0);\n    let i = a.byteLength;\n    for (const b of args) {\n        newBuffer.set(new Uint8Array(b), i);\n        i += b.byteLength;\n    }\n    return newBuffer.buffer;\n}\nfunction _serializeValue(major, minor, value) {\n    // Remove everything that's not an hexadecimal character. These are not\n    // considered errors since the value was already validated and they might\n    // be number decimals or sign.\n    value = value.replace(/[^0-9a-fA-F]/g, \"\");\n    // Create the buffer from the value with left padding with 0.\n    const length = 2 ** (minor - 24 /* Int8 */);\n    value = value.slice(-length * 2).padStart(length * 2, \"0\");\n    const bytes = [(major << 5) + minor].concat(value.match(/../g).map((byte) => parseInt(byte, 16)));\n    return new Uint8Array(bytes).buffer;\n}\nfunction _serializeNumber(major, value) {\n    if (value < 24) {\n        return new Uint8Array([(major << 5) + value]).buffer;\n    }\n    else {\n        const minor = value <= 0xff\n            ? 24 /* Int8 */\n            : value <= 0xffff\n                ? 25 /* Int16 */\n                : value <= 0xffffffff\n                    ? 26 /* Int32 */\n                    : 27 /* Int64 */;\n        return _serializeValue(major, minor, value.toString(16));\n    }\n}\nfunction _serializeString(str) {\n    const utf8 = [];\n    for (let i = 0; i < str.length; i++) {\n        let charcode = str.charCodeAt(i);\n        if (charcode < 0x80) {\n            utf8.push(charcode);\n        }\n        else if (charcode < 0x800) {\n            utf8.push(0xc0 | (charcode >> 6), 0x80 | (charcode & 0x3f));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n            utf8.push(0xe0 | (charcode >> 12), 0x80 | ((charcode >> 6) & 0x3f), 0x80 | (charcode & 0x3f));\n        }\n        else {\n            // Surrogate pair\n            i++;\n            charcode = ((charcode & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff);\n            utf8.push(0xf0 | (charcode >> 18), 0x80 | ((charcode >> 12) & 0x3f), 0x80 | ((charcode >> 6) & 0x3f), 0x80 | (charcode & 0x3f));\n        }\n    }\n    return _concat(new Uint8Array(_serializeNumber(3 /* TextString */, str.length)), new Uint8Array(utf8));\n}\n/**\n * Tag a value.\n */\nfunction tagged(tag, value) {\n    if (tag == 0xd9d9f7) {\n        return _concat(new Uint8Array([0xd9, 0xd9, 0xf7]), value);\n    }\n    if (tag < 24) {\n        return _concat(new Uint8Array([(6 /* Tag */ << 5) + tag]), value);\n    }\n    else {\n        const minor = tag <= 0xff\n            ? 24 /* Int8 */\n            : tag <= 0xffff\n                ? 25 /* Int16 */\n                : tag <= 0xffffffff\n                    ? 26 /* Int32 */\n                    : 27 /* Int64 */;\n        const length = 2 ** (minor - 24 /* Int8 */);\n        const value = tag\n            .toString(16)\n            .slice(-length * 2)\n            .padStart(length * 2, \"0\");\n        const bytes = [(6 /* Tag */ << 5) + minor].concat(value.match(/../g).map((byte) => parseInt(byte, 16)));\n        return new Uint8Array(bytes).buffer;\n    }\n}\nexports.tagged = tagged;\n/**\n * Set the raw bytes contained by this value. This should only be used with another\n * CborValue, or if you are implementing extensions to CBOR.\n * @param bytes A buffer containing the value.\n */\nfunction raw(bytes) {\n    return new Uint8Array(bytes).buffer;\n}\nexports.raw = raw;\n/**\n * Encode a number that is between [0, 23].\n * @param n\n */\nfunction uSmall(n) {\n    if (isNaN(n)) {\n        throw new RangeError(\"Invalid number.\");\n    }\n    n = Math.min(Math.max(0, n), 23); // Clamp it.\n    const bytes = [(0 /* UnsignedInteger */ << 5) + n];\n    return new Uint8Array(bytes).buffer;\n}\nexports.uSmall = uSmall;\nfunction u8(u8, radix) {\n    // Force u8 into a number, and validate it.\n    u8 = parseInt(\"\" + u8, radix);\n    if (isNaN(u8)) {\n        throw new RangeError(\"Invalid number.\");\n    }\n    u8 = Math.min(Math.max(0, u8), 0xff); // Clamp it.\n    u8 = u8.toString(16);\n    return _serializeValue(0 /* UnsignedInteger */, 24 /* Int8 */, u8);\n}\nexports.u8 = u8;\nfunction u16(u16, radix) {\n    // Force u16 into a number, and validate it.\n    u16 = parseInt(\"\" + u16, radix);\n    if (isNaN(u16)) {\n        throw new RangeError(\"Invalid number.\");\n    }\n    u16 = Math.min(Math.max(0, u16), 0xffff); // Clamp it.\n    u16 = u16.toString(16);\n    return _serializeValue(0 /* UnsignedInteger */, 25 /* Int16 */, u16);\n}\nexports.u16 = u16;\nfunction u32(u32, radix) {\n    // Force u32 into a number, and validate it.\n    u32 = parseInt(\"\" + u32, radix);\n    if (isNaN(u32)) {\n        throw new RangeError(\"Invalid number.\");\n    }\n    u32 = Math.min(Math.max(0, u32), 0xffffffff); // Clamp it.\n    u32 = u32.toString(16);\n    return _serializeValue(0 /* UnsignedInteger */, 26 /* Int32 */, u32);\n}\nexports.u32 = u32;\nfunction u64(u64, radix) {\n    // Special consideration for numbers that might be larger than expected.\n    if (typeof u64 == \"string\" && radix == 16) {\n        // This is the only case where we guarantee we'll encode the number directly.\n        // Validate it's all hexadecimal first.\n        if (u64.match(/[^0-9a-fA-F]/)) {\n            throw new RangeError(\"Invalid number.\");\n        }\n        return _serializeValue(0 /* UnsignedInteger */, 27 /* Int64 */, u64);\n    }\n    // Force u64 into a number, and validate it.\n    u64 = parseInt(\"\" + u64, radix);\n    if (isNaN(u64)) {\n        throw new RangeError(\"Invalid number.\");\n    }\n    u64 = Math.min(Math.max(0, u64), MAX_U64_NUMBER); // Clamp it to actual limit.\n    u64 = u64.toString(16);\n    return _serializeValue(0 /* UnsignedInteger */, 27 /* Int64 */, u64);\n}\nexports.u64 = u64;\n/**\n * Encode a negative number that is between [-24, -1].\n */\nfunction iSmall(n) {\n    if (isNaN(n)) {\n        throw new RangeError(\"Invalid number.\");\n    }\n    if (n === 0) {\n        return uSmall(0);\n    }\n    // Negative n, clamped to [1, 24], minus 1 (there's no negative 0).\n    n = Math.min(Math.max(0, -n), 24) - 1;\n    const bytes = [(1 /* SignedInteger */ << 5) + n];\n    return new Uint8Array(bytes).buffer;\n}\nexports.iSmall = iSmall;\nfunction i8(i8, radix) {\n    // Force i8 into a number, and validate it.\n    i8 = parseInt(\"\" + i8, radix);\n    if (isNaN(i8)) {\n        throw new RangeError(\"Invalid number.\");\n    }\n    // Negative n, clamped, minus 1 (there's no negative 0).\n    i8 = Math.min(Math.max(0, -i8 - 1), 0xff);\n    i8 = i8.toString(16);\n    return _serializeValue(1 /* SignedInteger */, 24 /* Int8 */, i8);\n}\nexports.i8 = i8;\nfunction i16(i16, radix) {\n    // Force i16 into a number, and validate it.\n    i16 = parseInt(\"\" + i16, radix);\n    if (isNaN(i16)) {\n        throw new RangeError(\"Invalid number.\");\n    }\n    // Negative n, clamped, minus 1 (there's no negative 0).\n    i16 = Math.min(Math.max(0, -i16 - 1), 0xffff);\n    i16 = i16.toString(16);\n    return _serializeValue(1 /* SignedInteger */, 25 /* Int16 */, i16);\n}\nexports.i16 = i16;\nfunction i32(i32, radix) {\n    // Force i32 into a number, and validate it.\n    i32 = parseInt(\"\" + i32, radix);\n    if (isNaN(i32)) {\n        throw new RangeError(\"Invalid number.\");\n    }\n    // Negative n, clamped, minus 1 (there's no negative 0).\n    i32 = Math.min(Math.max(0, -i32 - 1), 0xffffffff);\n    i32 = i32.toString(16);\n    return _serializeValue(1 /* SignedInteger */, 26 /* Int32 */, i32);\n}\nexports.i32 = i32;\nfunction i64(i64, radix) {\n    // Special consideration for numbers that might be larger than expected.\n    if (typeof i64 == \"string\" && radix == 16) {\n        if (i64.startsWith(\"-\")) {\n            i64 = i64.slice(1);\n        }\n        else {\n            // Clamp it.\n            i64 = \"0\";\n        }\n        // This is the only case where we guarantee we'll encode the number directly.\n        // Validate it's all hexadecimal first.\n        if (i64.match(/[^0-9a-fA-F]/) || i64.length > 16) {\n            throw new RangeError(\"Invalid number.\");\n        }\n        // We need to do -1 to the number.\n        let done = false;\n        let newI64 = i64.split(\"\").reduceRight((acc, x) => {\n            if (done) {\n                return x + acc;\n            }\n            let n = parseInt(x, 16) - 1;\n            if (n >= 0) {\n                done = true;\n                return n.toString(16) + acc;\n            }\n            else {\n                return \"f\" + acc;\n            }\n        }, \"\");\n        if (!done) {\n            // This number was 0.\n            return u64(0);\n        }\n        return _serializeValue(1 /* SignedInteger */, 27 /* Int64 */, newI64);\n    }\n    // Force i64 into a number, and validate it.\n    i64 = parseInt(\"\" + i64, radix);\n    if (isNaN(i64)) {\n        throw new RangeError(\"Invalid number.\");\n    }\n    i64 = Math.min(Math.max(0, -i64 - 1), 0x20000000000000); // Clamp it to actual.\n    i64 = i64.toString(16);\n    return _serializeValue(1 /* SignedInteger */, 27 /* Int64 */, i64);\n}\nexports.i64 = i64;\n/**\n * Encode a number using the smallest amount of bytes, by calling the methods\n * above. e.g. If the number fits in a u8, it will use that.\n */\nfunction number(n) {\n    if (n >= 0) {\n        if (n < 24) {\n            return uSmall(n);\n        }\n        else if (n <= 0xff) {\n            return u8(n);\n        }\n        else if (n <= 0xffff) {\n            return u16(n);\n        }\n        else if (n <= 0xffffffff) {\n            return u32(n);\n        }\n        else {\n            return u64(n);\n        }\n    }\n    else {\n        if (n >= -24) {\n            return iSmall(n);\n        }\n        else if (n >= -0xff) {\n            return i8(n);\n        }\n        else if (n >= -0xffff) {\n            return i16(n);\n        }\n        else if (n >= -0xffffffff) {\n            return i32(n);\n        }\n        else {\n            return i64(n);\n        }\n    }\n}\nexports.number = number;\n/**\n * Encode a byte array. This is different than the `raw()` method.\n */\nfunction bytes(bytes) {\n    return _concat(_serializeNumber(2 /* ByteString */, bytes.byteLength), bytes);\n}\nexports.bytes = bytes;\n/**\n * Encode a JavaScript string.\n */\nfunction string(str) {\n    return _serializeString(str);\n}\nexports.string = string;\n/**\n * Encode an array of cbor values.\n */\nfunction array(items) {\n    return _concat(_serializeNumber(4 /* Array */, items.length), ...items);\n}\nexports.array = array;\n/**\n * Encode a map of key-value pairs. The keys are string, and the values are CBOR\n * encoded.\n */\nfunction map(items, stable = false) {\n    if (!(items instanceof Map)) {\n        items = new Map(Object.entries(items));\n    }\n    let entries = Array.from(items.entries());\n    if (stable) {\n        entries = entries.sort(([keyA], [keyB]) => keyA.localeCompare(keyB));\n    }\n    return _concat(_serializeNumber(5 /* Map */, items.size), ...entries.map(([k, v]) => _concat(_serializeString(k), v)));\n}\nexports.map = map;\n/**\n * Encode a single (32 bits) precision floating point number.\n */\nfunction singleFloat(f) {\n    const single = new Float32Array([f]);\n    return _concat(new Uint8Array([(7 /* SimpleValue */ << 5) + 26]), new Uint8Array(single.buffer));\n}\nexports.singleFloat = singleFloat;\n/**\n * Encode a double (64 bits) precision floating point number.\n */\nfunction doubleFloat(f) {\n    const single = new Float64Array([f]);\n    return _concat(new Uint8Array([(7 /* SimpleValue */ << 5) + 27]), new Uint8Array(single.buffer));\n}\nexports.doubleFloat = doubleFloat;\nfunction bool(v) {\n    return v ? true_() : false_();\n}\nexports.bool = bool;\n/**\n * Encode the boolean true.\n */\nfunction true_() {\n    return raw(new Uint8Array([(7 /* SimpleValue */ << 5) + 21]));\n}\nexports.true_ = true_;\n/**\n * Encode the boolean false.\n */\nfunction false_() {\n    return raw(new Uint8Array([(7 /* SimpleValue */ << 5) + 20]));\n}\nexports.false_ = false_;\n/**\n * Encode the constant null.\n */\nfunction null_() {\n    return raw(new Uint8Array([(7 /* SimpleValue */ << 5) + 22]));\n}\nexports.null_ = null_;\n/**\n * Encode the constant undefined.\n */\nfunction undefined_() {\n    return raw(new Uint8Array([(7 /* SimpleValue */ << 5) + 23]));\n}\nexports.undefined_ = undefined_;\n//# sourceMappingURL=value.js.map","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cbor = __importStar(require(\"./value\"));\nconst BufferClasses = [\n    ArrayBuffer,\n    Uint8Array,\n    Uint16Array,\n    Uint32Array,\n    Int8Array,\n    Int16Array,\n    Int32Array,\n    Float32Array,\n    Float64Array,\n];\nclass JsonDefaultCborEncoder {\n    // @param _serializer The CBOR Serializer to use.\n    // @param _stable Whether or not keys from objects should be sorted (stable). This is\n    //     particularly useful when testing encodings between JSON objects.\n    constructor(_serializer, _stable = false) {\n        this._serializer = _serializer;\n        this._stable = _stable;\n        this.name = \"jsonDefault\";\n        this.priority = -100;\n    }\n    match(value) {\n        return [\"undefined\", \"boolean\", \"number\", \"string\", \"object\"].indexOf(typeof value) != -1;\n    }\n    encode(value) {\n        switch (typeof value) {\n            case \"undefined\":\n                return cbor.undefined_();\n            case \"boolean\":\n                return cbor.bool(value);\n            case \"number\":\n                if (Math.floor(value) === value) {\n                    return cbor.number(value);\n                }\n                else {\n                    return cbor.doubleFloat(value);\n                }\n            case \"string\":\n                return cbor.string(value);\n            case \"object\":\n                if (value === null) {\n                    return cbor.null_();\n                }\n                else if (Array.isArray(value)) {\n                    return cbor.array(value.map((x) => this._serializer.serializeValue(x)));\n                }\n                else if (BufferClasses.find((x) => value instanceof x)) {\n                    return cbor.bytes(value.buffer);\n                }\n                else if (Object.getOwnPropertyNames(value).indexOf(\"toJSON\") !== -1) {\n                    return this.encode(value.toJSON());\n                }\n                else if (value instanceof Map) {\n                    const m = new Map();\n                    for (const [key, item] of value.entries()) {\n                        m.set(key, this._serializer.serializeValue(item));\n                    }\n                    return cbor.map(m, this._stable);\n                }\n                else {\n                    const m = new Map();\n                    for (const [key, item] of Object.entries(value)) {\n                        m.set(key, this._serializer.serializeValue(item));\n                    }\n                    return cbor.map(m, this._stable);\n                }\n            default:\n                throw new Error(\"Invalid value.\");\n        }\n    }\n}\nexports.JsonDefaultCborEncoder = JsonDefaultCborEncoder;\nclass ToCborEncoder {\n    constructor() {\n        this.name = \"cborEncoder\";\n        this.priority = -90;\n    }\n    match(value) {\n        return typeof value == \"object\" && typeof value[\"toCBOR\"] == \"function\";\n    }\n    encode(value) {\n        return value.toCBOR();\n    }\n}\nexports.ToCborEncoder = ToCborEncoder;\nclass CborSerializer {\n    constructor() {\n        this._encoders = new Set();\n    }\n    static withDefaultEncoders(stable = false) {\n        const s = new this();\n        s.addEncoder(new JsonDefaultCborEncoder(s, stable));\n        s.addEncoder(new ToCborEncoder());\n        return s;\n    }\n    removeEncoder(name) {\n        // Has to make an extra call to values() to ensure it doesn't break on iteration.\n        for (const encoder of this._encoders.values()) {\n            if (encoder.name == name) {\n                this._encoders.delete(encoder);\n            }\n        }\n    }\n    addEncoder(encoder) {\n        this._encoders.add(encoder);\n    }\n    getEncoderFor(value) {\n        let chosenEncoder = null;\n        for (const encoder of this._encoders) {\n            if (!chosenEncoder || encoder.priority > chosenEncoder.priority) {\n                if (encoder.match(value)) {\n                    chosenEncoder = encoder;\n                }\n            }\n        }\n        if (chosenEncoder === null) {\n            throw new Error(\"Could not find an encoder for value.\");\n        }\n        return chosenEncoder;\n    }\n    serializeValue(value) {\n        return this.getEncoderFor(value).encode(value);\n    }\n    serialize(value) {\n        return this.serializeValue(value);\n    }\n}\nexports.CborSerializer = CborSerializer;\nclass SelfDescribeCborSerializer extends CborSerializer {\n    serialize(value) {\n        return cbor.raw(new Uint8Array([\n            // Self describe CBOR.\n            ...new Uint8Array([0xd9, 0xd9, 0xf7]),\n            ...new Uint8Array(super.serializeValue(value)),\n        ]));\n    }\n}\nexports.SelfDescribeCborSerializer = SelfDescribeCborSerializer;\n//# sourceMappingURL=serializer.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./serializer\"));\nconst value = __importStar(require(\"./value\"));\nexports.value = value;\n//# sourceMappingURL=index.js.map","// This file is based on:\n// https://github.com/dfinity-lab/dfinity/blob/9bca65f8edd65701ea6bdb00e0752f9186bbc893/docs/spec/public/index.adoc#cbor-encoding-of-requests-and-responses\nimport borc from 'borc';\nimport * as cbor from 'simple-cbor';\nimport { SelfDescribeCborSerializer } from 'simple-cbor';\nimport { concat, fromHex, toHex } from './utils/buffer';\n// We are using hansl/simple-cbor for CBOR serialization, to avoid issues with\n// encoding the uint64 values that the HTTP handler of the client expects for\n// canister IDs. However, simple-cbor does not yet provide deserialization so\n// we are using `Uint8Array` so that we can use the dignifiedquire/borc CBOR\n// decoder.\nclass PrincipalEncoder {\n    get name() {\n        return 'Principal';\n    }\n    get priority() {\n        return 0;\n    }\n    match(value) {\n        return value && value._isPrincipal === true;\n    }\n    encode(v) {\n        return cbor.value.bytes(v.toUint8Array());\n    }\n}\nclass BufferEncoder {\n    get name() {\n        return 'Buffer';\n    }\n    get priority() {\n        return 1;\n    }\n    match(value) {\n        return value instanceof ArrayBuffer || ArrayBuffer.isView(value);\n    }\n    encode(v) {\n        return cbor.value.bytes(new Uint8Array(v));\n    }\n}\nclass BigIntEncoder {\n    get name() {\n        return 'BigInt';\n    }\n    get priority() {\n        return 1;\n    }\n    match(value) {\n        return typeof value === `bigint`;\n    }\n    encode(v) {\n        // Always use a bigint encoding.\n        if (v > BigInt(0)) {\n            return cbor.value.tagged(2, cbor.value.bytes(fromHex(v.toString(16))));\n        }\n        else {\n            return cbor.value.tagged(3, cbor.value.bytes(fromHex((BigInt('-1') * v).toString(16))));\n        }\n    }\n}\nconst serializer = SelfDescribeCborSerializer.withDefaultEncoders(true);\nserializer.addEncoder(new PrincipalEncoder());\nserializer.addEncoder(new BufferEncoder());\nserializer.addEncoder(new BigIntEncoder());\nexport var CborTag;\n(function (CborTag) {\n    CborTag[CborTag[\"Uint64LittleEndian\"] = 71] = \"Uint64LittleEndian\";\n    CborTag[CborTag[\"Semantic\"] = 55799] = \"Semantic\";\n})(CborTag || (CborTag = {}));\n/**\n * Encode a JavaScript value into CBOR.\n */\nexport function encode(value) {\n    return serializer.serialize(value);\n}\nfunction decodePositiveBigInt(buf) {\n    const len = buf.byteLength;\n    let res = BigInt(0);\n    for (let i = 0; i < len; i++) {\n        res = res * BigInt(0x100) + BigInt(buf[i]);\n    }\n    return res;\n}\n// A BORC subclass that decodes byte strings to ArrayBuffer instead of the Buffer class.\nclass Uint8ArrayDecoder extends borc.Decoder {\n    createByteString(raw) {\n        return concat(...raw);\n    }\n    createByteStringFromHeap(start, end) {\n        if (start === end) {\n            return new ArrayBuffer(0);\n        }\n        return new Uint8Array(this._heap.slice(start, end));\n    }\n}\nexport function decode(input) {\n    const buffer = new Uint8Array(input);\n    const decoder = new Uint8ArrayDecoder({\n        size: buffer.byteLength,\n        tags: {\n            // Override tags 2 and 3 for BigInt support (borc supports only BigNumber).\n            2: val => decodePositiveBigInt(val),\n            3: val => -decodePositiveBigInt(val),\n            [CborTag.Semantic]: (value) => value,\n        },\n    });\n    try {\n        return decoder.decodeFirst(buffer);\n    }\n    catch (e) {\n        throw new Error(`Failed to decode CBOR: ${e}, input: ${toHex(buffer)}`);\n    }\n}\n//# sourceMappingURL=cbor.js.map","/**\n * Generates a random unsigned 32-bit integer between 0 and 0xffffffff\n * @returns {number} a random number\n */\nexport const randomNumber = () => {\n    // determine whether browser crypto is available\n    if (typeof window !== 'undefined' && !!window.crypto && !!window.crypto.getRandomValues) {\n        const array = new Uint32Array(1);\n        window.crypto.getRandomValues(array);\n        return array[0];\n    }\n    // A second check for webcrypto, in case it is loaded under global instead of window\n    if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\n        const array = new Uint32Array(1);\n        crypto.getRandomValues(array);\n        return array[0];\n    }\n    // determine whether node crypto is available\n    if (typeof crypto !== 'undefined' && crypto.randomInt) {\n        return crypto.randomInt(0, 0xffffffff);\n    }\n    // fall back to Math.random\n    return Math.floor(Math.random() * 0xffffffff);\n};\n//# sourceMappingURL=random.js.map","import { randomNumber } from '../../utils/random';\n// The types of values allowed in the `request_type` field for submit requests.\nexport var SubmitRequestType;\n(function (SubmitRequestType) {\n    SubmitRequestType[\"Call\"] = \"call\";\n})(SubmitRequestType || (SubmitRequestType = {}));\n/**\n * Create a random Nonce, based on random values\n */\nexport function makeNonce() {\n    // Encode 128 bits.\n    const buffer = new ArrayBuffer(16);\n    const view = new DataView(buffer);\n    const rand1 = randomNumber();\n    const rand2 = randomNumber();\n    const rand3 = randomNumber();\n    const rand4 = randomNumber();\n    view.setUint32(0, rand1);\n    view.setUint32(4, rand2);\n    view.setUint32(8, rand3);\n    view.setUint32(12, rand4);\n    return buffer;\n}\n//# sourceMappingURL=types.js.map","import { lebEncode } from '@dfinity/candid';\nimport * as cbor from 'simple-cbor';\nimport { makeNonce, } from './types';\nconst NANOSECONDS_PER_MILLISECONDS = BigInt(1000000);\nconst REPLICA_PERMITTED_DRIFT_MILLISECONDS = 60 * 1000;\nexport class Expiry {\n    constructor(deltaInMSec) {\n        // Use bigint because it can overflow the maximum number allowed in a double float.\n        const raw_value = BigInt(Math.floor(Date.now() + deltaInMSec - REPLICA_PERMITTED_DRIFT_MILLISECONDS)) *\n            NANOSECONDS_PER_MILLISECONDS;\n        // round down to the nearest second\n        const ingress_as_seconds = raw_value / BigInt(1000000000);\n        // round down to nearest minute\n        const ingress_as_minutes = ingress_as_seconds / BigInt(60);\n        const rounded_down_nanos = ingress_as_minutes * BigInt(60) * BigInt(1000000000);\n        this._value = rounded_down_nanos;\n    }\n    toCBOR() {\n        // TODO: change this to take the minimum amount of space (it always takes 8 bytes now).\n        return cbor.value.u64(this._value.toString(16), 16);\n    }\n    toHash() {\n        return lebEncode(this._value);\n    }\n}\n/**\n * Create a Nonce transform, which takes a function that returns a Buffer, and adds it\n * as the nonce to every call requests.\n * @param nonceFn A function that returns a buffer. By default uses a semi-random method.\n */\nexport function makeNonceTransform(nonceFn = makeNonce) {\n    return async (request) => {\n        // Nonce needs to be inserted into the header for all requests, to enable logs to be correlated with requests.\n        const headers = request.request.headers;\n        // TODO: uncomment this when the http proxy supports it.\n        // headers.set('X-IC-Request-ID', toHex(new Uint8Array(nonce)));\n        request.request.headers = headers;\n        // Nonce only needs to be inserted into the body for async calls, to prevent replay attacks.\n        if (request.endpoint === \"call\" /* Endpoint.Call */) {\n            request.body.nonce = nonceFn();\n        }\n    };\n}\n/**\n * Create a transform that adds a delay (by default 5 minutes) to the expiry.\n *\n * @param delayInMilliseconds The delay to add to the call time, in milliseconds.\n */\nexport function makeExpiryTransform(delayInMilliseconds) {\n    return async (request) => {\n        request.body.ingress_expiry = new Expiry(delayInMilliseconds);\n    };\n}\n/**\n * Maps the default fetch headers field to the serializable HttpHeaderField.\n *\n * @param headers Fetch definition of the headers type\n * @returns array of header fields\n */\nexport function httpHeadersTransform(headers) {\n    const headerFields = [];\n    headers.forEach((value, key) => {\n        headerFields.push([key, value]);\n    });\n    return headerFields;\n}\n//# sourceMappingURL=transforms.js.map","import { AgentError } from '../../errors';\nexport class AgentHTTPResponseError extends AgentError {\n    constructor(message, response) {\n        super(message);\n        this.response = response;\n        this.name = this.constructor.name;\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\n//# sourceMappingURL=errors.js.map","/**\n * Hex, bytes and number utilities.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\nexport function abytes(item) {\n    if (!isBytes(item))\n        throw new Error('Uint8Array expected');\n}\nexport function abool(title, value) {\n    if (typeof value !== 'boolean')\n        throw new Error(title + ' boolean expected, got ' + value);\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? '0' + hex : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    return hex === '' ? _0n : BigInt('0x' + hex); // Big Endian\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    abytes(bytes);\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(title + ' must be hex string or Uint8Array, cause: ' + e);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(title + ' must be hex string or Uint8Array');\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(title + ' of length ' + expectedLength + ' expected, got ' + len);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Is positive bigint\nconst isPosBig = (n) => typeof n === 'bigint' && _0n <= n;\nexport function inRange(n, min, max) {\n    return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nexport function aInRange(title, n, min, max) {\n    // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n    // consider P=256n, min=0n, max=P\n    // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n    // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n    // - our way is the cleanest:               `inRange('x', x, 0n, P)\n    if (!inRange(n, min, max))\n        throw new Error('expected valid ' + title + ': ' + min + ' <= n < ' + max + ', got ' + n);\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error('invalid validator function');\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error('param ' + String(fieldName) + ' is invalid. Expected ' + type + ', got ' + val);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n/**\n * throws not implemented error\n */\nexport const notImplemented = () => {\n    throw new Error('not implemented');\n};\n/**\n * Memoizes (caches) computation result.\n * Uses WeakMap: the value is going auto-cleaned by GC after last reference is removed.\n */\nexport function memoized(fn) {\n    const map = new WeakMap();\n    return (arg, ...args) => {\n        const val = map.get(arg);\n        if (val !== undefined)\n            return val;\n        const computed = fn(arg, ...args);\n        map.set(arg, computed);\n        return computed;\n    };\n}\n//# sourceMappingURL=utils.js.map","/**\n * Utils for modular division and finite fields.\n * A finite field over 11 is integer number operations `mod 11`.\n * There is no division: it is replaced by modular multiplicative inverse.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { bitMask, bytesToNumberBE, bytesToNumberLE, ensureBytes, numberToBytesBE, numberToBytesLE, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = /* @__PURE__ */ BigInt(2), _3n = /* @__PURE__ */ BigInt(3);\n// prettier-ignore\nconst _4n = /* @__PURE__ */ BigInt(4), _5n = /* @__PURE__ */ BigInt(5), _8n = /* @__PURE__ */ BigInt(8);\n// prettier-ignore\nconst _9n = /* @__PURE__ */ BigInt(9), _16n = /* @__PURE__ */ BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @todo use field version && remove\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\nexport function pow(num, power, modulo) {\n    if (power < _0n)\n        throw new Error('invalid exponent, negatives unsupported');\n    if (modulo <= _0n)\n        throw new Error('invalid modulus');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n/** Does `x^(2^power)` mod p. `pow2(30, 4)` == `30^(2^4)` */\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n/**\n * Inverses number over modulo.\n * Implemented using [Euclidean GCD](https://brilliant.org/wiki/extended-euclidean-algorithm/).\n */\nexport function invert(number, modulo) {\n    if (number === _0n)\n        throw new Error('invert: expected non-zero number');\n    if (modulo <= _0n)\n        throw new Error('invert: expected positive modulus, got ' + modulo);\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++) {\n        // Crash instead of infinity loop, we cannot reasonable count until P.\n        if (Z > 1000)\n            throw new Error('Cannot find square root: likely non-prime P');\n    }\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\n/**\n * Square root for a finite field. It will try to check if optimizations are applicable and fall back to 4:\n *\n * 1. P ≡ 3 (mod 4)\n * 2. P ≡ 5 (mod 8)\n * 3. P ≡ 9 (mod 16)\n * 4. Tonelli-Shanks algorithm\n *\n * Different algorithms can give different roots, it is up to user to decide which one they want.\n * For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n */\nexport function FpSqrt(P) {\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('invalid exponent, negatives unsupported');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n/**\n * Legendre symbol.\n * * (a | p) ≡ 1    if a is a square (mod p), quadratic residue\n * * (a | p) ≡ -1   if a is not a square (mod p), quadratic non residue\n * * (a | p) ≡ 0    if a ≡ 0 (mod p)\n */\nexport function FpLegendre(order) {\n    const legendreConst = (order - _1n) / _2n; // Integer arithmetic\n    return (f, x) => f.pow(x, legendreConst);\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendre = FpLegendre(f.ORDER);\n    return (x) => {\n        const p = legendre(f, x);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * Fragile: always run a benchmark on a change.\n * Security note: operations don't check 'isValid' for all elements for performance reasons,\n * it is caller responsibility to check this.\n * This is low-level code, please make sure you know what you're doing.\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error('invalid field: expected ORDER > 0, got ' + ORDER);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('invalid field: expected ORDER of <= 2048 bytes');\n    let sqrtP; // cached sqrtP\n    const f = Object.freeze({\n        ORDER,\n        isLE,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error('invalid field element: expected bigint, got ' + typeof num);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt ||\n            ((n) => {\n                if (!sqrtP)\n                    sqrtP = FpSqrt(ORDER);\n                return sqrtP(f, n);\n            }),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error('Field.fromBytes: expected ' + BYTES + ' bytes, got ' + bytes.length);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use `mapKeyToField` instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error('hashToPrivateScalar: expected ' + minLen + '-1024 bytes of input, got ' + hashLen);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error('expected ' + minLen + '-1024 bytes of input, got ' + len);\n    const num = isLE ? bytesToNumberLE(key) : bytesToNumberBE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","import { mod } from './modular.js';\nimport { abytes, bytesToNumberBE, concatBytes, utf8ToBytes, validateObject } from './utils.js';\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value, length) {\n    anum(value);\n    anum(length);\n    if (value < 0 || value >= 1 << (8 * length))\n        throw new Error('invalid I2OSP input: ' + value);\n    const res = Array.from({ length }).fill(0);\n    for (let i = length - 1; i >= 0; i--) {\n        res[i] = value & 0xff;\n        value >>>= 8;\n    }\n    return new Uint8Array(res);\n}\nfunction strxor(a, b) {\n    const arr = new Uint8Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        arr[i] = a[i] ^ b[i];\n    }\n    return arr;\n}\nfunction anum(item) {\n    if (!Number.isSafeInteger(item))\n        throw new Error('number expected');\n}\n/**\n * Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits.\n * [RFC 9380 5.3.1](https://www.rfc-editor.org/rfc/rfc9380#section-5.3.1).\n */\nexport function expand_message_xmd(msg, DST, lenInBytes, H) {\n    abytes(msg);\n    abytes(DST);\n    anum(lenInBytes);\n    // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n    if (DST.length > 255)\n        DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n    const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n    const ell = Math.ceil(lenInBytes / b_in_bytes);\n    if (lenInBytes > 65535 || ell > 255)\n        throw new Error('expand_message_xmd: invalid lenInBytes');\n    const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n    const Z_pad = i2osp(0, r_in_bytes);\n    const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n    const b = new Array(ell);\n    const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n    b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n    for (let i = 1; i <= ell; i++) {\n        const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n        b[i] = H(concatBytes(...args));\n    }\n    const pseudo_random_bytes = concatBytes(...b);\n    return pseudo_random_bytes.slice(0, lenInBytes);\n}\n/**\n * Produces a uniformly random byte string using an extendable-output function (XOF) H.\n * 1. The collision resistance of H MUST be at least k bits.\n * 2. H MUST be an XOF that has been proved indifferentiable from\n *    a random oracle under a reasonable cryptographic assumption.\n * [RFC 9380 5.3.2](https://www.rfc-editor.org/rfc/rfc9380#section-5.3.2).\n */\nexport function expand_message_xof(msg, DST, lenInBytes, k, H) {\n    abytes(msg);\n    abytes(DST);\n    anum(lenInBytes);\n    // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n    // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n    if (DST.length > 255) {\n        const dkLen = Math.ceil((2 * k) / 8);\n        DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n    }\n    if (lenInBytes > 65535 || DST.length > 255)\n        throw new Error('expand_message_xof: invalid lenInBytes');\n    return (H.create({ dkLen: lenInBytes })\n        .update(msg)\n        .update(i2osp(lenInBytes, 2))\n        // 2. DST_prime = DST || I2OSP(len(DST), 1)\n        .update(DST)\n        .update(i2osp(DST.length, 1))\n        .digest());\n}\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F.\n * [RFC 9380 5.2](https://www.rfc-editor.org/rfc/rfc9380#section-5.2).\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg, count, options) {\n    validateObject(options, {\n        DST: 'stringOrUint8Array',\n        p: 'bigint',\n        m: 'isSafeInteger',\n        k: 'isSafeInteger',\n        hash: 'hash',\n    });\n    const { p, k, m, hash, expand, DST: _DST } = options;\n    abytes(msg);\n    anum(count);\n    const DST = typeof _DST === 'string' ? utf8ToBytes(_DST) : _DST;\n    const log2p = p.toString(2).length;\n    const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n    const len_in_bytes = count * m * L;\n    let prb; // pseudo_random_bytes\n    if (expand === 'xmd') {\n        prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n    }\n    else if (expand === 'xof') {\n        prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n    }\n    else if (expand === '_internal_pass') {\n        // for internal tests only\n        prb = msg;\n    }\n    else {\n        throw new Error('expand must be \"xmd\" or \"xof\"');\n    }\n    const u = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const e = new Array(m);\n        for (let j = 0; j < m; j++) {\n            const elm_offset = L * (j + i * m);\n            const tv = prb.subarray(elm_offset, elm_offset + L);\n            e[j] = mod(os2ip(tv), p);\n        }\n        u[i] = e;\n    }\n    return u;\n}\nexport function isogenyMap(field, map) {\n    // Make same order as in spec\n    const COEFF = map.map((i) => Array.from(i).reverse());\n    return (x, y) => {\n        const [xNum, xDen, yNum, yDen] = COEFF.map((val) => val.reduce((acc, i) => field.add(field.mul(acc, x), i)));\n        x = field.div(xNum, xDen); // xNum / xDen\n        y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n        return { x: x, y: y };\n    };\n}\n/** Creates hash-to-curve methods from EC Point and mapToCurve function. */\nexport function createHasher(Point, mapToCurve, def) {\n    if (typeof mapToCurve !== 'function')\n        throw new Error('mapToCurve() must be defined');\n    return {\n        // Encodes byte string to elliptic curve.\n        // hash_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n        hashToCurve(msg, options) {\n            const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options });\n            const u0 = Point.fromAffine(mapToCurve(u[0]));\n            const u1 = Point.fromAffine(mapToCurve(u[1]));\n            const P = u0.add(u1).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n        // Encodes byte string to elliptic curve.\n        // encode_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n        encodeToCurve(msg, options) {\n            const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options });\n            const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n        // Same as encodeToCurve, but without hash\n        mapToCurve(scalars) {\n            if (!Array.isArray(scalars))\n                throw new Error('mapToCurve: expected array of bigints');\n            for (const i of scalars)\n                if (typeof i !== 'bigint')\n                    throw new Error('mapToCurve: expected array of bigints');\n            const P = Point.fromAffine(mapToCurve(scalars)).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n    };\n}\n//# sourceMappingURL=hash-to-curve.js.map","/**\n * Methods for elliptic curve multiplication by scalars.\n * Contains wNAF, pippenger\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { validateField, nLength } from './modular.js';\nimport { validateObject, bitLen } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nfunction validateW(W, bits) {\n    if (!Number.isSafeInteger(W) || W <= 0 || W > bits)\n        throw new Error('invalid window size, expected [1..' + bits + '], got W=' + W);\n}\nfunction calcWOpts(W, bits) {\n    validateW(W, bits);\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n}\nfunction validateMSMPoints(points, c) {\n    if (!Array.isArray(points))\n        throw new Error('array expected');\n    points.forEach((p, i) => {\n        if (!(p instanceof c))\n            throw new Error('invalid point at index ' + i);\n    });\n}\nfunction validateMSMScalars(scalars, field) {\n    if (!Array.isArray(scalars))\n        throw new Error('array of scalars expected');\n    scalars.forEach((s, i) => {\n        if (!field.isValid(s))\n            throw new Error('invalid scalar at index ' + i);\n    });\n}\n// Since points in different groups cannot be equal (different object constructor),\n// we can have single place to store precomputes\nconst pointPrecomputes = new WeakMap();\nconst pointWindowSizes = new WeakMap(); // This allows use make points immutable (nothing changes inside)\nfunction getW(P) {\n    return pointWindowSizes.get(P) || 1;\n}\n/**\n * Elliptic curve multiplication of Point by scalar. Fragile.\n * Scalars should always be less than curve order: this should be checked inside of a curve itself.\n * Creates precomputation tables for fast multiplication:\n * - private scalar is split by fixed size windows of W bits\n * - every window point is collected from window's table & added to accumulator\n * - since windows are different, same point inside tables won't be accessed more than once per calc\n * - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n * - +1 window is neccessary for wNAF\n * - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n *\n * @todo Research returning 2d JS array of windows, instead of a single window.\n * This would allow windows to be in different memory locations\n */\nexport function wNAF(c, bits) {\n    return {\n        constTimeNegate,\n        hasPrecomputes(elm) {\n            return getW(elm) !== 1;\n        },\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n, p = c.ZERO) {\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @param elm Point instance\n         * @param W window size\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = calcWOpts(W, bits);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = calcWOpts(W, bits);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        /**\n         * Implements ec unsafe (non const-time) multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @param acc accumulator point to add result of multiplication\n         * @returns point\n         */\n        wNAFUnsafe(W, precomputes, n, acc = c.ZERO) {\n            const { windows, windowSize } = calcWOpts(W, bits);\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                if (n === _0n)\n                    break; // No need to go over empty scalar\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                if (wbits === 0)\n                    continue;\n                let curr = precomputes[offset + Math.abs(wbits) - 1]; // -1 because we skip zero\n                if (wbits < 0)\n                    curr = curr.negate();\n                // NOTE: by re-using acc, we can save a lot of additions in case of MSM\n                acc = acc.add(curr);\n            }\n            return acc;\n        },\n        getPrecomputes(W, P, transform) {\n            // Calculate precomputes on a first run, reuse them after\n            let comp = pointPrecomputes.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1)\n                    pointPrecomputes.set(P, transform(comp));\n            }\n            return comp;\n        },\n        wNAFCached(P, n, transform) {\n            const W = getW(P);\n            return this.wNAF(W, this.getPrecomputes(W, P, transform), n);\n        },\n        wNAFCachedUnsafe(P, n, transform, prev) {\n            const W = getW(P);\n            if (W === 1)\n                return this.unsafeLadder(P, n, prev); // For W=1 ladder is ~x2 faster\n            return this.wNAFUnsafe(W, this.getPrecomputes(W, P, transform), n, prev);\n        },\n        // We calculate precomputes for elliptic curve point multiplication\n        // using windowed method. This specifies window size and\n        // stores precomputed values. Usually only base point would be precomputed.\n        setWindowSize(P, W) {\n            validateW(W, bits);\n            pointWindowSizes.set(P, W);\n            pointPrecomputes.delete(P);\n        },\n    };\n}\n/**\n * Pippenger algorithm for multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * 30x faster vs naive addition on L=4096, 10x faster with precomputes.\n * For N=254bit, L=1, it does: 1024 ADD + 254 DBL. For L=5: 1536 ADD + 254 DBL.\n * Algorithmically constant-time (for same L), even when 1 point + scalar, or when scalar = 0.\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @param scalars array of L scalars (aka private keys / bigints)\n */\nexport function pippenger(c, fieldN, points, scalars) {\n    // If we split scalars by some window (let's say 8 bits), every chunk will only\n    // take 256 buckets even if there are 4096 scalars, also re-uses double.\n    // TODO:\n    // - https://eprint.iacr.org/2024/750.pdf\n    // - https://tches.iacr.org/index.php/TCHES/article/view/10287\n    // 0 is accepted in scalars\n    validateMSMPoints(points, c);\n    validateMSMScalars(scalars, fieldN);\n    if (points.length !== scalars.length)\n        throw new Error('arrays of points and scalars must have equal length');\n    const zero = c.ZERO;\n    const wbits = bitLen(BigInt(points.length));\n    const windowSize = wbits > 12 ? wbits - 3 : wbits > 4 ? wbits - 2 : wbits ? 2 : 1; // in bits\n    const MASK = (1 << windowSize) - 1;\n    const buckets = new Array(MASK + 1).fill(zero); // +1 for zero array\n    const lastBits = Math.floor((fieldN.BITS - 1) / windowSize) * windowSize;\n    let sum = zero;\n    for (let i = lastBits; i >= 0; i -= windowSize) {\n        buckets.fill(zero);\n        for (let j = 0; j < scalars.length; j++) {\n            const scalar = scalars[j];\n            const wbits = Number((scalar >> BigInt(i)) & BigInt(MASK));\n            buckets[wbits] = buckets[wbits].add(points[j]);\n        }\n        let resI = zero; // not using this will do small speed-up, but will lose ct\n        // Skip first bucket, because it is zero\n        for (let j = buckets.length - 1, sumI = zero; j > 0; j--) {\n            sumI = sumI.add(buckets[j]);\n            resI = resI.add(sumI);\n        }\n        sum = sum.add(resI);\n        if (i !== 0)\n            for (let j = 0; j < windowSize; j++)\n                sum = sum.double();\n    }\n    return sum;\n}\n/**\n * Precomputed multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @returns function which multiplies points with scaars\n */\nexport function precomputeMSMUnsafe(c, fieldN, points, windowSize) {\n    /**\n     * Performance Analysis of Window-based Precomputation\n     *\n     * Base Case (256-bit scalar, 8-bit window):\n     * - Standard precomputation requires:\n     *   - 31 additions per scalar × 256 scalars = 7,936 ops\n     *   - Plus 255 summary additions = 8,191 total ops\n     *   Note: Summary additions can be optimized via accumulator\n     *\n     * Chunked Precomputation Analysis:\n     * - Using 32 chunks requires:\n     *   - 255 additions per chunk\n     *   - 256 doublings\n     *   - Total: (255 × 32) + 256 = 8,416 ops\n     *\n     * Memory Usage Comparison:\n     * Window Size | Standard Points | Chunked Points\n     * ------------|-----------------|---------------\n     *     4-bit   |     520         |      15\n     *     8-bit   |    4,224        |     255\n     *    10-bit   |   13,824        |   1,023\n     *    16-bit   |  557,056        |  65,535\n     *\n     * Key Advantages:\n     * 1. Enables larger window sizes due to reduced memory overhead\n     * 2. More efficient for smaller scalar counts:\n     *    - 16 chunks: (16 × 255) + 256 = 4,336 ops\n     *    - ~2x faster than standard 8,191 ops\n     *\n     * Limitations:\n     * - Not suitable for plain precomputes (requires 256 constant doublings)\n     * - Performance degrades with larger scalar counts:\n     *   - Optimal for ~256 scalars\n     *   - Less efficient for 4096+ scalars (Pippenger preferred)\n     */\n    validateW(windowSize, fieldN.BITS);\n    validateMSMPoints(points, c);\n    const zero = c.ZERO;\n    const tableSize = 2 ** windowSize - 1; // table size (without zero)\n    const chunks = Math.ceil(fieldN.BITS / windowSize); // chunks of item\n    const MASK = BigInt((1 << windowSize) - 1);\n    const tables = points.map((p) => {\n        const res = [];\n        for (let i = 0, acc = p; i < tableSize; i++) {\n            res.push(acc);\n            acc = acc.add(p);\n        }\n        return res;\n    });\n    return (scalars) => {\n        validateMSMScalars(scalars, fieldN);\n        if (scalars.length > points.length)\n            throw new Error('array of scalars must be smaller than array of points');\n        let res = zero;\n        for (let i = 0; i < chunks; i++) {\n            // No need to double if accumulator is still zero.\n            if (res !== zero)\n                for (let j = 0; j < windowSize; j++)\n                    res = res.double();\n            const shiftBy = BigInt(chunks * windowSize - (i + 1) * windowSize);\n            for (let j = 0; j < scalars.length; j++) {\n                const n = scalars[j];\n                const curr = Number((n >> shiftBy) & MASK);\n                if (!curr)\n                    continue; // skip zero scalars chunks\n                res = res.add(tables[j][curr - 1]);\n            }\n        }\n        return res;\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/**\n * Short Weierstrass curve methods. The formula is: y² = x³ + ax + b.\n *\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance\n * of nominative types in TypeScript and interfaces only check for shape, so it's hard to create\n * unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * @todo https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { validateBasic, wNAF, pippenger, } from './curve.js';\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes, memoized, abool } from './utils.js';\nfunction validateSigVerOpts(opts) {\n    if (opts.lowS !== undefined)\n        abool('lowS', opts.lowS);\n    if (opts.prehash !== undefined)\n        abool('prehash', opts.prehash);\n}\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('invalid endomorphism, can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('invalid endomorphism, expected beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport class DERErr extends Error {\n    constructor(m = '') {\n        super(m);\n    }\n}\n/**\n * ASN.1 DER encoding utilities. ASN is very complex & fragile. Format:\n *\n *     [0x30 (SEQUENCE), bytelength, 0x02 (INTEGER), intLength, R, 0x02 (INTEGER), intLength, S]\n *\n * Docs: https://letsencrypt.org/docs/a-warm-welcome-to-asn1-and-der/, https://luca.ntop.org/Teaching/Appunti/asn1.html\n */\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: DERErr,\n    // Basic building block is TLV (Tag-Length-Value)\n    _tlv: {\n        encode: (tag, data) => {\n            const { Err: E } = DER;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length & 1)\n                throw new E('tlv.encode: unpadded data');\n            const dataLen = data.length / 2;\n            const len = ut.numberToHexUnpadded(dataLen);\n            if ((len.length / 2) & 128)\n                throw new E('tlv.encode: long form length too big');\n            // length of length with long form flag\n            const lenLen = dataLen > 127 ? ut.numberToHexUnpadded((len.length / 2) | 128) : '';\n            const t = ut.numberToHexUnpadded(tag);\n            return t + lenLen + len + data;\n        },\n        // v - value, l - left bytes (unparsed)\n        decode(tag, data) {\n            const { Err: E } = DER;\n            let pos = 0;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length < 2 || data[pos++] !== tag)\n                throw new E('tlv.decode: wrong tlv');\n            const first = data[pos++];\n            const isLong = !!(first & 128); // First bit of first length byte is flag for short/long form\n            let length = 0;\n            if (!isLong)\n                length = first;\n            else {\n                // Long form: [longFlag(1bit), lengthLength(7bit), length (BE)]\n                const lenLen = first & 127;\n                if (!lenLen)\n                    throw new E('tlv.decode(long): indefinite length not supported');\n                if (lenLen > 4)\n                    throw new E('tlv.decode(long): byte length is too big'); // this will overflow u32 in js\n                const lengthBytes = data.subarray(pos, pos + lenLen);\n                if (lengthBytes.length !== lenLen)\n                    throw new E('tlv.decode: length bytes not complete');\n                if (lengthBytes[0] === 0)\n                    throw new E('tlv.decode(long): zero leftmost byte');\n                for (const b of lengthBytes)\n                    length = (length << 8) | b;\n                pos += lenLen;\n                if (length < 128)\n                    throw new E('tlv.decode(long): not minimal encoding');\n            }\n            const v = data.subarray(pos, pos + length);\n            if (v.length !== length)\n                throw new E('tlv.decode: wrong value length');\n            return { v, l: data.subarray(pos + length) };\n        },\n    },\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    _int: {\n        encode(num) {\n            const { Err: E } = DER;\n            if (num < _0n)\n                throw new E('integer: negative integers are not allowed');\n            let hex = ut.numberToHexUnpadded(num);\n            // Pad with zero byte if negative flag is present\n            if (Number.parseInt(hex[0], 16) & 0b1000)\n                hex = '00' + hex;\n            if (hex.length & 1)\n                throw new E('unexpected DER parsing assertion: unpadded hex');\n            return hex;\n        },\n        decode(data) {\n            const { Err: E } = DER;\n            if (data[0] & 128)\n                throw new E('invalid signature integer: negative');\n            if (data[0] === 0x00 && !(data[1] & 128))\n                throw new E('invalid signature integer: unnecessary leading zero');\n            return b2n(data);\n        },\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E, _int: int, _tlv: tlv } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        ut.abytes(data);\n        const { v: seqBytes, l: seqLeftBytes } = tlv.decode(0x30, data);\n        if (seqLeftBytes.length)\n            throw new E('invalid signature: left bytes after parsing');\n        const { v: rBytes, l: rLeftBytes } = tlv.decode(0x02, seqBytes);\n        const { v: sBytes, l: sLeftBytes } = tlv.decode(0x02, rLeftBytes);\n        if (sLeftBytes.length)\n            throw new E('invalid signature: left bytes after parsing');\n        return { r: int.decode(rBytes), s: int.decode(sBytes) };\n    },\n    hexFromSig(sig) {\n        const { _tlv: tlv, _int: int } = DER;\n        const rs = tlv.encode(0x02, int.encode(sig.r));\n        const ss = tlv.encode(0x02, int.encode(sig.s));\n        const seq = rs + ss;\n        return tlv.encode(0x30, seq);\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const Fn = mod.Field(CURVE.n, CURVE.nBitLength);\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return ut.inRange(num, _1n, CURVE.n);\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n: N } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (ut.isBytes(key))\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('invalid private key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error('invalid private key, expected hex or ' + nByteLength + ' bytes, got ' + typeof key);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, N); // disabled by default, enabled for BLS\n        ut.aInRange('private key', num, _1n, N); // num in range [1..N-1]\n        return num;\n    }\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    // Memoized toAffine / validity check. They are heavy. Points are immutable.\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    const toAffineMemo = memoized((p, iz) => {\n        const { px: x, py: y, pz: z } = p;\n        // Fast-path for normalized points\n        if (Fp.eql(z, Fp.ONE))\n            return { x, y };\n        const is0 = p.is0();\n        // If invZ was 0, we return zero point. However we still want to execute\n        // all operations, so we replace invZ with a random number, 1.\n        if (iz == null)\n            iz = is0 ? Fp.ONE : Fp.inv(z);\n        const ax = Fp.mul(x, iz);\n        const ay = Fp.mul(y, iz);\n        const zz = Fp.mul(z, iz);\n        if (is0)\n            return { x: Fp.ZERO, y: Fp.ZERO };\n        if (!Fp.eql(zz, Fp.ONE))\n            throw new Error('invZ was invalid');\n        return { x: ax, y: ay };\n    });\n    // NOTE: on exception this will crash 'cached' and no value will be set.\n    // Otherwise true will be return\n    const assertValidMemo = memoized((p) => {\n        if (p.is0()) {\n            // (0, 1, 0) aka ZERO is invalid in most contexts.\n            // In BLS, ZERO can be serialized, so we allow it.\n            // (0, 0, 0) is invalid representation of ZERO.\n            if (CURVE.allowInfinityPoint && !Fp.is0(p.py))\n                return;\n            throw new Error('bad point: ZERO');\n        }\n        // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n        const { x, y } = p.toAffine();\n        // Check if x, y are valid field elements\n        if (!Fp.isValid(x) || !Fp.isValid(y))\n            throw new Error('bad point: x or y not FE');\n        const left = Fp.sqr(y); // y²\n        const right = weierstrassEquation(x); // x³ + ax + b\n        if (!Fp.eql(left, right))\n            throw new Error('bad point: equation left != right');\n        if (!p.isTorsionFree())\n            throw new Error('bad point: not in prime-order subgroup');\n        return true;\n    });\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n            Object.freeze(this);\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // Multiscalar Multiplication\n        static msm(points, scalars) {\n            return pippenger(Point, Fn, points, scalars);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            wnaf.setWindowSize(this, windowSize);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, n, Point.normalizeZ);\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(sc) {\n            const { endo, n: N } = CURVE;\n            ut.aInRange('scalar', sc, _0n, N);\n            const I = Point.ZERO;\n            if (sc === _0n)\n                return I;\n            if (this.is0() || sc === _1n)\n                return this;\n            // Case a: no endomorphism. Case b: has precomputes.\n            if (!endo || wnaf.hasPrecomputes(this))\n                return wnaf.wNAFCachedUnsafe(this, sc, Point.normalizeZ);\n            // Case c: endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(sc);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            const { endo, n: N } = CURVE;\n            ut.aInRange('scalar', scalar, _1n, N);\n            let point, fake; // Fake point is used to const-time mult\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(scalar);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(scalar);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            return toAffineMemo(this, iz);\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            abool('isCompressed', isCompressed);\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            abool('isCompressed', isCompressed);\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\n/**\n * Creates short weierstrass curve and ECDSA signature methods for it.\n * @example\n * import { Field } from '@noble/curves/abstract/modular';\n * // Before that, define BigInt-s: a, b, p, n, Gx, Gy\n * const curve = weierstrass({ a, b, Fp: Field(p), n, Gx, Gy, h: 1n })\n */\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            abool('isCompressed', isCompressed);\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!ut.inRange(x, _1n, Fp.ORDER))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y;\n                try {\n                    y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                }\n                catch (sqrtError) {\n                    const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                    throw new Error('Point is not on curve' + suffix);\n                }\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                const cl = compressedLen;\n                const ul = uncompressedLen;\n                throw new Error('invalid Point, expected length of ' + cl + ', or uncompressed ' + ul + ', got ' + len);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            ut.aInRange('r', this.r, _1n, CURVE_ORDER); // r in [1..N]\n            ut.aInRange('s', this.s, _1n, CURVE_ORDER); // s in [1..N]\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = ut.isBytes(item);\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // Our custom check \"just in case\"\n            if (bytes.length > 8192)\n                throw new Error('input is too large');\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        ut.aInRange('num < 2^' + CURVE.nBitLength, num, _0n, ORDER_MASK);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order,\n    // this will be invalid at least for P521. Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        validateSigVerOpts(opts);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null && ent !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        const { lowS, prehash, format } = opts;\n        // Verify opts, deduce signature format\n        validateSigVerOpts(opts);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        if (format !== undefined && format !== 'compact' && format !== 'der')\n            throw new Error('format must be compact or der');\n        const isHex = typeof sg === 'string' || ut.isBytes(sg);\n        const isObj = !isHex &&\n            !format &&\n            typeof sg === 'object' &&\n            sg !== null &&\n            typeof sg.r === 'bigint' &&\n            typeof sg.s === 'bigint';\n        if (!isHex && !isObj)\n            throw new Error('invalid signature, expected Uint8Array, hex string or Signature instance');\n        let _sig = undefined;\n        let P;\n        try {\n            if (isObj)\n                _sig = new Signature(sg.r, sg.s);\n            if (isHex) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    if (format !== 'compact')\n                        _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                }\n                if (!_sig && format !== 'der')\n                    _sig = Signature.fromCompact(sg);\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            return false;\n        }\n        if (!_sig)\n            return false;\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","/**\n * BLS (Barreto-Lynn-Scott) family of pairing-friendly curves.\n * BLS != BLS.\n * The file implements BLS (Boneh-Lynn-Shacham) signatures.\n * Used in both BLS (Barreto-Lynn-Scott) and BN (Barreto-Naehrig)\n * families of pairing-friendly curves.\n * Consists of two curves: G1 and G2:\n * - G1 is a subgroup of (x, y) E(Fq) over y² = x³ + 4.\n * - G2 is a subgroup of ((x₁, x₂+i), (y₁, y₂+i)) E(Fq²) over y² = x³ + 4(1 + i) where i is √-1\n * - Gt, created by bilinear (ate) pairing e(G1, G2), consists of p-th roots of unity in\n *   Fq^k where k is embedding degree. Only degree 12 is currently supported, 24 is not.\n * Pairing is used to aggregate and verify signatures.\n * There are two main ways to use it:\n * 1. Fp for short private keys, Fp₂ for signatures\n * 2. Fp for short signatures, Fp₂ for private keys\n * @module\n **/\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// TODO: import { AffinePoint } from './curve.js';\nimport { getMinHashLength, mapHashToField } from './modular.js';\nimport { ensureBytes, memoized } from './utils.js';\n// prettier-ignore\nimport { createHasher } from './hash-to-curve.js';\nimport { weierstrassPoints, } from './weierstrass.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// Not used with BLS12-381 (no sequential `11` in X). Useful for other curves.\nfunction NAfDecomposition(a) {\n    const res = [];\n    // a>1 because of marker bit\n    for (; a > _1n; a >>= _1n) {\n        if ((a & _1n) === _0n)\n            res.unshift(0);\n        else if ((a & _3n) === _3n) {\n            res.unshift(-1);\n            a += _1n;\n        }\n        else\n            res.unshift(1);\n    }\n    return res;\n}\nexport function bls(CURVE) {\n    // Fields are specific for curve, so for now we'll need to pass them with opts\n    const { Fp, Fr, Fp2, Fp6, Fp12 } = CURVE.fields;\n    const BLS_X_IS_NEGATIVE = CURVE.params.xNegative;\n    const TWIST = CURVE.params.twistType;\n    // Point on G1 curve: (x, y)\n    const G1_ = weierstrassPoints({ n: Fr.ORDER, ...CURVE.G1 });\n    const G1 = Object.assign(G1_, createHasher(G1_.ProjectivePoint, CURVE.G1.mapToCurve, {\n        ...CURVE.htfDefaults,\n        ...CURVE.G1.htfDefaults,\n    }));\n    // Point on G2 curve (complex numbers): (x₁, x₂+i), (y₁, y₂+i)\n    const G2_ = weierstrassPoints({ n: Fr.ORDER, ...CURVE.G2 });\n    const G2 = Object.assign(G2_, createHasher(G2_.ProjectivePoint, CURVE.G2.mapToCurve, {\n        ...CURVE.htfDefaults,\n        ...CURVE.G2.htfDefaults,\n    }));\n    // Applies sparse multiplication as line function\n    let lineFunction;\n    if (TWIST === 'multiplicative') {\n        lineFunction = (c0, c1, c2, f, Px, Py) => Fp12.mul014(f, c0, Fp2.mul(c1, Px), Fp2.mul(c2, Py));\n    }\n    else if (TWIST === 'divisive') {\n        // NOTE: it should be [c0, c1, c2], but we use different order here to reduce complexity of\n        // precompute calculations.\n        lineFunction = (c0, c1, c2, f, Px, Py) => Fp12.mul034(f, Fp2.mul(c2, Py), Fp2.mul(c1, Px), c0);\n    }\n    else\n        throw new Error('bls: unknown twist type');\n    const Fp2div2 = Fp2.div(Fp2.ONE, Fp2.mul(Fp2.ONE, _2n));\n    function pointDouble(ell, Rx, Ry, Rz) {\n        const t0 = Fp2.sqr(Ry); // Ry²\n        const t1 = Fp2.sqr(Rz); // Rz²\n        const t2 = Fp2.mulByB(Fp2.mul(t1, _3n)); // 3 * T1 * B\n        const t3 = Fp2.mul(t2, _3n); // 3 * T2\n        const t4 = Fp2.sub(Fp2.sub(Fp2.sqr(Fp2.add(Ry, Rz)), t1), t0); // (Ry + Rz)² - T1 - T0\n        const c0 = Fp2.sub(t2, t0); // T2 - T0 (i)\n        const c1 = Fp2.mul(Fp2.sqr(Rx), _3n); // 3 * Rx²\n        const c2 = Fp2.neg(t4); // -T4 (-h)\n        ell.push([c0, c1, c2]);\n        Rx = Fp2.mul(Fp2.mul(Fp2.mul(Fp2.sub(t0, t3), Rx), Ry), Fp2div2); // ((T0 - T3) * Rx * Ry) / 2\n        Ry = Fp2.sub(Fp2.sqr(Fp2.mul(Fp2.add(t0, t3), Fp2div2)), Fp2.mul(Fp2.sqr(t2), _3n)); // ((T0 + T3) / 2)² - 3 * T2²\n        Rz = Fp2.mul(t0, t4); // T0 * T4\n        return { Rx, Ry, Rz };\n    }\n    function pointAdd(ell, Rx, Ry, Rz, Qx, Qy) {\n        // Addition\n        const t0 = Fp2.sub(Ry, Fp2.mul(Qy, Rz)); // Ry - Qy * Rz\n        const t1 = Fp2.sub(Rx, Fp2.mul(Qx, Rz)); // Rx - Qx * Rz\n        const c0 = Fp2.sub(Fp2.mul(t0, Qx), Fp2.mul(t1, Qy)); // T0 * Qx - T1 * Qy == Ry * Qx  - Rx * Qy\n        const c1 = Fp2.neg(t0); // -T0 == Qy * Rz - Ry\n        const c2 = t1; // == Rx - Qx * Rz\n        ell.push([c0, c1, c2]);\n        const t2 = Fp2.sqr(t1); // T1²\n        const t3 = Fp2.mul(t2, t1); // T2 * T1\n        const t4 = Fp2.mul(t2, Rx); // T2 * Rx\n        const t5 = Fp2.add(Fp2.sub(t3, Fp2.mul(t4, _2n)), Fp2.mul(Fp2.sqr(t0), Rz)); // T3 - 2 * T4 + T0² * Rz\n        Rx = Fp2.mul(t1, t5); // T1 * T5\n        Ry = Fp2.sub(Fp2.mul(Fp2.sub(t4, t5), t0), Fp2.mul(t3, Ry)); // (T4 - T5) * T0 - T3 * Ry\n        Rz = Fp2.mul(Rz, t3); // Rz * T3\n        return { Rx, Ry, Rz };\n    }\n    // Pre-compute coefficients for sparse multiplication\n    // Point addition and point double calculations is reused for coefficients\n    // pointAdd happens only if bit set, so wNAF is reasonable. Unfortunately we cannot combine\n    // add + double in windowed precomputes here, otherwise it would be single op (since X is static)\n    const ATE_NAF = NAfDecomposition(CURVE.params.ateLoopSize);\n    const calcPairingPrecomputes = memoized((point) => {\n        const p = point;\n        const { x, y } = p.toAffine();\n        // prettier-ignore\n        const Qx = x, Qy = y, negQy = Fp2.neg(y);\n        // prettier-ignore\n        let Rx = Qx, Ry = Qy, Rz = Fp2.ONE;\n        const ell = [];\n        for (const bit of ATE_NAF) {\n            const cur = [];\n            ({ Rx, Ry, Rz } = pointDouble(cur, Rx, Ry, Rz));\n            if (bit)\n                ({ Rx, Ry, Rz } = pointAdd(cur, Rx, Ry, Rz, Qx, bit === -1 ? negQy : Qy));\n            ell.push(cur);\n        }\n        if (CURVE.postPrecompute) {\n            const last = ell[ell.length - 1];\n            CURVE.postPrecompute(Rx, Ry, Rz, Qx, Qy, pointAdd.bind(null, last));\n        }\n        return ell;\n    });\n    function millerLoopBatch(pairs, withFinalExponent = false) {\n        let f12 = Fp12.ONE;\n        if (pairs.length) {\n            const ellLen = pairs[0][0].length;\n            for (let i = 0; i < ellLen; i++) {\n                f12 = Fp12.sqr(f12); // This allows us to do sqr only one time for all pairings\n                // NOTE: we apply multiple pairings in parallel here\n                for (const [ell, Px, Py] of pairs) {\n                    for (const [c0, c1, c2] of ell[i])\n                        f12 = lineFunction(c0, c1, c2, f12, Px, Py);\n                }\n            }\n        }\n        if (BLS_X_IS_NEGATIVE)\n            f12 = Fp12.conjugate(f12);\n        return withFinalExponent ? Fp12.finalExponentiate(f12) : f12;\n    }\n    // Calculates product of multiple pairings\n    // This up to x2 faster than just `map(({g1, g2})=>pairing({g1,g2}))`\n    function pairingBatch(pairs, withFinalExponent = true) {\n        const res = [];\n        // This cache precomputed toAffine for all points\n        G1.ProjectivePoint.normalizeZ(pairs.map(({ g1 }) => g1));\n        G2.ProjectivePoint.normalizeZ(pairs.map(({ g2 }) => g2));\n        for (const { g1, g2 } of pairs) {\n            if (g1.equals(G1.ProjectivePoint.ZERO) || g2.equals(G2.ProjectivePoint.ZERO))\n                throw new Error('pairing is not available for ZERO point');\n            // This uses toAffine inside\n            g1.assertValidity();\n            g2.assertValidity();\n            const Qa = g1.toAffine();\n            res.push([calcPairingPrecomputes(g2), Qa.x, Qa.y]);\n        }\n        return millerLoopBatch(res, withFinalExponent);\n    }\n    // Calculates bilinear pairing\n    function pairing(Q, P, withFinalExponent = true) {\n        return pairingBatch([{ g1: Q, g2: P }], withFinalExponent);\n    }\n    const utils = {\n        randomPrivateKey: () => {\n            const length = getMinHashLength(Fr.ORDER);\n            return mapHashToField(CURVE.randomBytes(length), Fr.ORDER);\n        },\n        calcPairingPrecomputes,\n    };\n    const { ShortSignature } = CURVE.G1;\n    const { Signature } = CURVE.G2;\n    function normP1(point) {\n        return point instanceof G1.ProjectivePoint ? point : G1.ProjectivePoint.fromHex(point);\n    }\n    function normP1Hash(point, htfOpts) {\n        return point instanceof G1.ProjectivePoint\n            ? point\n            : G1.hashToCurve(ensureBytes('point', point), htfOpts);\n    }\n    function normP2(point) {\n        return point instanceof G2.ProjectivePoint ? point : Signature.fromHex(point);\n    }\n    function normP2Hash(point, htfOpts) {\n        return point instanceof G2.ProjectivePoint\n            ? point\n            : G2.hashToCurve(ensureBytes('point', point), htfOpts);\n    }\n    // Multiplies generator (G1) by private key.\n    // P = pk x G\n    function getPublicKey(privateKey) {\n        return G1.ProjectivePoint.fromPrivateKey(privateKey).toRawBytes(true);\n    }\n    // Multiplies generator (G2) by private key.\n    // P = pk x G\n    function getPublicKeyForShortSignatures(privateKey) {\n        return G2.ProjectivePoint.fromPrivateKey(privateKey).toRawBytes(true);\n    }\n    function sign(message, privateKey, htfOpts) {\n        const msgPoint = normP2Hash(message, htfOpts);\n        msgPoint.assertValidity();\n        const sigPoint = msgPoint.multiply(G1.normPrivateKeyToScalar(privateKey));\n        if (message instanceof G2.ProjectivePoint)\n            return sigPoint;\n        return Signature.toRawBytes(sigPoint);\n    }\n    function signShortSignature(message, privateKey, htfOpts) {\n        const msgPoint = normP1Hash(message, htfOpts);\n        msgPoint.assertValidity();\n        const sigPoint = msgPoint.multiply(G1.normPrivateKeyToScalar(privateKey));\n        if (message instanceof G1.ProjectivePoint)\n            return sigPoint;\n        return ShortSignature.toRawBytes(sigPoint);\n    }\n    // Checks if pairing of public key & hash is equal to pairing of generator & signature.\n    // e(P, H(m)) == e(G, S)\n    function verify(signature, message, publicKey, htfOpts) {\n        const P = normP1(publicKey);\n        const Hm = normP2Hash(message, htfOpts);\n        const G = G1.ProjectivePoint.BASE;\n        const S = normP2(signature);\n        const exp = pairingBatch([\n            { g1: P.negate(), g2: Hm }, // ePHM = pairing(P.negate(), Hm, false);\n            { g1: G, g2: S }, // eGS = pairing(G, S, false);\n        ]);\n        return Fp12.eql(exp, Fp12.ONE);\n    }\n    // Checks if pairing of public key & hash is equal to pairing of generator & signature.\n    // e(S, G) == e(H(m), P)\n    function verifyShortSignature(signature, message, publicKey, htfOpts) {\n        const P = normP2(publicKey);\n        const Hm = normP1Hash(message, htfOpts);\n        const G = G2.ProjectivePoint.BASE;\n        const S = normP1(signature);\n        const exp = pairingBatch([\n            { g1: Hm, g2: P }, // eHmP = pairing(Hm, P, false);\n            { g1: S, g2: G.negate() }, // eSG = pairing(S, G.negate(), false);\n        ]);\n        return Fp12.eql(exp, Fp12.ONE);\n    }\n    function aNonEmpty(arr) {\n        if (!Array.isArray(arr) || arr.length === 0)\n            throw new Error('expected non-empty array');\n    }\n    function aggregatePublicKeys(publicKeys) {\n        aNonEmpty(publicKeys);\n        const agg = publicKeys.map(normP1).reduce((sum, p) => sum.add(p), G1.ProjectivePoint.ZERO);\n        const aggAffine = agg; //.toAffine();\n        if (publicKeys[0] instanceof G1.ProjectivePoint) {\n            aggAffine.assertValidity();\n            return aggAffine;\n        }\n        // toRawBytes ensures point validity\n        return aggAffine.toRawBytes(true);\n    }\n    function aggregateSignatures(signatures) {\n        aNonEmpty(signatures);\n        const agg = signatures.map(normP2).reduce((sum, s) => sum.add(s), G2.ProjectivePoint.ZERO);\n        const aggAffine = agg; //.toAffine();\n        if (signatures[0] instanceof G2.ProjectivePoint) {\n            aggAffine.assertValidity();\n            return aggAffine;\n        }\n        return Signature.toRawBytes(aggAffine);\n    }\n    function aggregateShortSignatures(signatures) {\n        aNonEmpty(signatures);\n        const agg = signatures.map(normP1).reduce((sum, s) => sum.add(s), G1.ProjectivePoint.ZERO);\n        const aggAffine = agg; //.toAffine();\n        if (signatures[0] instanceof G1.ProjectivePoint) {\n            aggAffine.assertValidity();\n            return aggAffine;\n        }\n        return ShortSignature.toRawBytes(aggAffine);\n    }\n    // https://ethresear.ch/t/fast-verification-of-multiple-bls-signatures/5407\n    // e(G, S) = e(G, SUM(n)(Si)) = MUL(n)(e(G, Si))\n    function verifyBatch(signature, \n    // TODO: maybe `{message: G2Hex, publicKey: G1Hex}[]` instead?\n    messages, publicKeys, htfOpts) {\n        aNonEmpty(messages);\n        if (publicKeys.length !== messages.length)\n            throw new Error('amount of public keys and messages should be equal');\n        const sig = normP2(signature);\n        const nMessages = messages.map((i) => normP2Hash(i, htfOpts));\n        const nPublicKeys = publicKeys.map(normP1);\n        // NOTE: this works only for exact same object\n        const messagePubKeyMap = new Map();\n        for (let i = 0; i < nPublicKeys.length; i++) {\n            const pub = nPublicKeys[i];\n            const msg = nMessages[i];\n            let keys = messagePubKeyMap.get(msg);\n            if (keys === undefined) {\n                keys = [];\n                messagePubKeyMap.set(msg, keys);\n            }\n            keys.push(pub);\n        }\n        const paired = [];\n        try {\n            for (const [msg, keys] of messagePubKeyMap) {\n                const groupPublicKey = keys.reduce((acc, msg) => acc.add(msg));\n                paired.push({ g1: groupPublicKey, g2: msg });\n            }\n            paired.push({ g1: G1.ProjectivePoint.BASE.negate(), g2: sig });\n            return Fp12.eql(pairingBatch(paired), Fp12.ONE);\n        }\n        catch {\n            return false;\n        }\n    }\n    G1.ProjectivePoint.BASE._setWindowSize(4);\n    return {\n        getPublicKey,\n        getPublicKeyForShortSignatures,\n        sign,\n        signShortSignature,\n        verify,\n        verifyBatch,\n        verifyShortSignature,\n        aggregatePublicKeys,\n        aggregateSignatures,\n        aggregateShortSignatures,\n        millerLoopBatch,\n        pairing,\n        pairingBatch,\n        G1,\n        G2,\n        Signature,\n        ShortSignature,\n        fields: {\n            Fr,\n            Fp,\n            Fp2,\n            Fp6,\n            Fp12,\n        },\n        params: {\n            ateLoopSize: CURVE.params.ateLoopSize,\n            r: CURVE.params.r,\n            G1b: CURVE.G1.b,\n            G2b: CURVE.G2.b,\n        },\n        utils,\n    };\n}\n//# sourceMappingURL=bls.js.map","/**\n * Towered extension fields.\n * Rather than implementing a massive 12th-degree extension directly, it is more efficient\n * to build it up from smaller extensions: a tower of extensions.\n *\n * For BLS12-381, the Fp12 field is implemented as a quadratic (degree two) extension,\n * on top of a cubic (degree three) extension, on top of a quadratic extension of Fp.\n *\n * For more info: \"Pairings for beginners\" by Costello, section 7.3.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport * as mod from './modular.js';\nimport { bitLen, bitMask, concatBytes, notImplemented } from './utils.js';\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\nfunction calcFrobeniusCoefficients(Fp, nonResidue, modulus, degree, num = 1, divisor) {\n    const _divisor = BigInt(divisor === undefined ? degree : divisor);\n    const towerModulus = modulus ** BigInt(degree);\n    const res = [];\n    for (let i = 0; i < num; i++) {\n        const a = BigInt(i + 1);\n        const powers = [];\n        for (let j = 0, qPower = _1n; j < degree; j++) {\n            const power = ((a * qPower - a) / _divisor) % towerModulus;\n            powers.push(Fp.pow(nonResidue, power));\n            qPower *= modulus;\n        }\n        res.push(powers);\n    }\n    return res;\n}\n// This works same at least for bls12-381, bn254 and bls12-377\nexport function psiFrobenius(Fp, Fp2, base) {\n    // Ψ endomorphism\n    const PSI_X = Fp2.pow(base, (Fp.ORDER - _1n) / _3n); // u^((p-1)/3)\n    const PSI_Y = Fp2.pow(base, (Fp.ORDER - _1n) / _2n); // u^((p-1)/2)\n    function psi(x, y) {\n        // This x10 faster than previous version in bls12-381\n        const x2 = Fp2.mul(Fp2.frobeniusMap(x, 1), PSI_X);\n        const y2 = Fp2.mul(Fp2.frobeniusMap(y, 1), PSI_Y);\n        return [x2, y2];\n    }\n    // Ψ²(P) endomorphism (psi2(x) = psi(psi(x)))\n    const PSI2_X = Fp2.pow(base, (Fp.ORDER ** _2n - _1n) / _3n); // u^((p^2 - 1)/3)\n    // This equals -1, which causes y to be Fp2.neg(y).\n    // But not sure if there are case when this is not true?\n    const PSI2_Y = Fp2.pow(base, (Fp.ORDER ** _2n - _1n) / _2n); // u^((p^2 - 1)/3)\n    if (!Fp2.eql(PSI2_Y, Fp2.neg(Fp2.ONE)))\n        throw new Error('psiFrobenius: PSI2_Y!==-1');\n    function psi2(x, y) {\n        return [Fp2.mul(x, PSI2_X), Fp2.neg(y)];\n    }\n    // Map points\n    const mapAffine = (fn) => (c, P) => {\n        const affine = P.toAffine();\n        const p = fn(affine.x, affine.y);\n        return c.fromAffine({ x: p[0], y: p[1] });\n    };\n    const G2psi = mapAffine(psi);\n    const G2psi2 = mapAffine(psi2);\n    return { psi, psi2, G2psi, G2psi2, PSI_X, PSI_Y, PSI2_X, PSI2_Y };\n}\nexport function tower12(opts) {\n    const { ORDER } = opts;\n    // Fp\n    const Fp = mod.Field(ORDER);\n    const FpNONRESIDUE = Fp.create(opts.NONRESIDUE || BigInt(-1));\n    const FpLegendre = mod.FpLegendre(ORDER);\n    const Fpdiv2 = Fp.div(Fp.ONE, _2n); // 1/2\n    // Fp2\n    const FP2_FROBENIUS_COEFFICIENTS = calcFrobeniusCoefficients(Fp, FpNONRESIDUE, Fp.ORDER, 2)[0];\n    const Fp2Add = ({ c0, c1 }, { c0: r0, c1: r1 }) => ({\n        c0: Fp.add(c0, r0),\n        c1: Fp.add(c1, r1),\n    });\n    const Fp2Subtract = ({ c0, c1 }, { c0: r0, c1: r1 }) => ({\n        c0: Fp.sub(c0, r0),\n        c1: Fp.sub(c1, r1),\n    });\n    const Fp2Multiply = ({ c0, c1 }, rhs) => {\n        if (typeof rhs === 'bigint')\n            return { c0: Fp.mul(c0, rhs), c1: Fp.mul(c1, rhs) };\n        // (a+bi)(c+di) = (ac−bd) + (ad+bc)i\n        const { c0: r0, c1: r1 } = rhs;\n        let t1 = Fp.mul(c0, r0); // c0 * o0\n        let t2 = Fp.mul(c1, r1); // c1 * o1\n        // (T1 - T2) + ((c0 + c1) * (r0 + r1) - (T1 + T2))*i\n        const o0 = Fp.sub(t1, t2);\n        const o1 = Fp.sub(Fp.mul(Fp.add(c0, c1), Fp.add(r0, r1)), Fp.add(t1, t2));\n        return { c0: o0, c1: o1 };\n    };\n    const Fp2Square = ({ c0, c1 }) => {\n        const a = Fp.add(c0, c1);\n        const b = Fp.sub(c0, c1);\n        const c = Fp.add(c0, c0);\n        return { c0: Fp.mul(a, b), c1: Fp.mul(c, c1) };\n    };\n    const Fp2fromBigTuple = (tuple) => {\n        if (tuple.length !== 2)\n            throw new Error('invalid tuple');\n        const fps = tuple.map((n) => Fp.create(n));\n        return { c0: fps[0], c1: fps[1] };\n    };\n    const FP2_ORDER = ORDER * ORDER;\n    const Fp2Nonresidue = Fp2fromBigTuple(opts.FP2_NONRESIDUE);\n    const Fp2 = {\n        ORDER: FP2_ORDER,\n        isLE: Fp.isLE,\n        NONRESIDUE: Fp2Nonresidue,\n        BITS: bitLen(FP2_ORDER),\n        BYTES: Math.ceil(bitLen(FP2_ORDER) / 8),\n        MASK: bitMask(bitLen(FP2_ORDER)),\n        ZERO: { c0: Fp.ZERO, c1: Fp.ZERO },\n        ONE: { c0: Fp.ONE, c1: Fp.ZERO },\n        create: (num) => num,\n        isValid: ({ c0, c1 }) => typeof c0 === 'bigint' && typeof c1 === 'bigint',\n        is0: ({ c0, c1 }) => Fp.is0(c0) && Fp.is0(c1),\n        eql: ({ c0, c1 }, { c0: r0, c1: r1 }) => Fp.eql(c0, r0) && Fp.eql(c1, r1),\n        neg: ({ c0, c1 }) => ({ c0: Fp.neg(c0), c1: Fp.neg(c1) }),\n        pow: (num, power) => mod.FpPow(Fp2, num, power),\n        invertBatch: (nums) => mod.FpInvertBatch(Fp2, nums),\n        // Normalized\n        add: Fp2Add,\n        sub: Fp2Subtract,\n        mul: Fp2Multiply,\n        sqr: Fp2Square,\n        // NonNormalized stuff\n        addN: Fp2Add,\n        subN: Fp2Subtract,\n        mulN: Fp2Multiply,\n        sqrN: Fp2Square,\n        // Why inversion for bigint inside Fp instead of Fp2? it is even used in that context?\n        div: (lhs, rhs) => Fp2.mul(lhs, typeof rhs === 'bigint' ? Fp.inv(Fp.create(rhs)) : Fp2.inv(rhs)),\n        inv: ({ c0: a, c1: b }) => {\n            // We wish to find the multiplicative inverse of a nonzero\n            // element a + bu in Fp2. We leverage an identity\n            //\n            // (a + bu)(a - bu) = a² + b²\n            //\n            // which holds because u² = -1. This can be rewritten as\n            //\n            // (a + bu)(a - bu)/(a² + b²) = 1\n            //\n            // because a² + b² = 0 has no nonzero solutions for (a, b).\n            // This gives that (a - bu)/(a² + b²) is the inverse\n            // of (a + bu). Importantly, this can be computing using\n            // only a single inversion in Fp.\n            const factor = Fp.inv(Fp.create(a * a + b * b));\n            return { c0: Fp.mul(factor, Fp.create(a)), c1: Fp.mul(factor, Fp.create(-b)) };\n        },\n        sqrt: (num) => {\n            if (opts.Fp2sqrt)\n                return opts.Fp2sqrt(num);\n            // This is generic for all quadratic extensions (Fp2)\n            const { c0, c1 } = num;\n            if (Fp.is0(c1)) {\n                // if c0 is quadratic residue\n                if (Fp.eql(FpLegendre(Fp, c0), Fp.ONE))\n                    return Fp2.create({ c0: Fp.sqrt(c0), c1: Fp.ZERO });\n                else\n                    return Fp2.create({ c0: Fp.ZERO, c1: Fp.sqrt(Fp.div(c0, FpNONRESIDUE)) });\n            }\n            const a = Fp.sqrt(Fp.sub(Fp.sqr(c0), Fp.mul(Fp.sqr(c1), FpNONRESIDUE)));\n            let d = Fp.mul(Fp.add(a, c0), Fpdiv2);\n            const legendre = FpLegendre(Fp, d);\n            // -1, Quadratic non residue\n            if (!Fp.is0(legendre) && !Fp.eql(legendre, Fp.ONE))\n                d = Fp.sub(d, a);\n            const a0 = Fp.sqrt(d);\n            const candidateSqrt = Fp2.create({ c0: a0, c1: Fp.div(Fp.mul(c1, Fpdiv2), a0) });\n            if (!Fp2.eql(Fp2.sqr(candidateSqrt), num))\n                throw new Error('Cannot find square root');\n            // Normalize root: at this point candidateSqrt ** 2 = num, but also -candidateSqrt ** 2 = num\n            const x1 = candidateSqrt;\n            const x2 = Fp2.neg(x1);\n            const { re: re1, im: im1 } = Fp2.reim(x1);\n            const { re: re2, im: im2 } = Fp2.reim(x2);\n            if (im1 > im2 || (im1 === im2 && re1 > re2))\n                return x1;\n            return x2;\n        },\n        // Same as sgn0_m_eq_2 in RFC 9380\n        isOdd: (x) => {\n            const { re: x0, im: x1 } = Fp2.reim(x);\n            const sign_0 = x0 % _2n;\n            const zero_0 = x0 === _0n;\n            const sign_1 = x1 % _2n;\n            return BigInt(sign_0 || (zero_0 && sign_1)) == _1n;\n        },\n        // Bytes util\n        fromBytes(b) {\n            if (b.length !== Fp2.BYTES)\n                throw new Error('fromBytes invalid length=' + b.length);\n            return { c0: Fp.fromBytes(b.subarray(0, Fp.BYTES)), c1: Fp.fromBytes(b.subarray(Fp.BYTES)) };\n        },\n        toBytes: ({ c0, c1 }) => concatBytes(Fp.toBytes(c0), Fp.toBytes(c1)),\n        cmov: ({ c0, c1 }, { c0: r0, c1: r1 }, c) => ({\n            c0: Fp.cmov(c0, r0, c),\n            c1: Fp.cmov(c1, r1, c),\n        }),\n        reim: ({ c0, c1 }) => ({ re: c0, im: c1 }),\n        // multiply by u + 1\n        mulByNonresidue: ({ c0, c1 }) => Fp2.mul({ c0, c1 }, Fp2Nonresidue),\n        mulByB: opts.Fp2mulByB,\n        fromBigTuple: Fp2fromBigTuple,\n        frobeniusMap: ({ c0, c1 }, power) => ({\n            c0,\n            c1: Fp.mul(c1, FP2_FROBENIUS_COEFFICIENTS[power % 2]),\n        }),\n    };\n    // Fp6\n    const Fp6Add = ({ c0, c1, c2 }, { c0: r0, c1: r1, c2: r2 }) => ({\n        c0: Fp2.add(c0, r0),\n        c1: Fp2.add(c1, r1),\n        c2: Fp2.add(c2, r2),\n    });\n    const Fp6Subtract = ({ c0, c1, c2 }, { c0: r0, c1: r1, c2: r2 }) => ({\n        c0: Fp2.sub(c0, r0),\n        c1: Fp2.sub(c1, r1),\n        c2: Fp2.sub(c2, r2),\n    });\n    const Fp6Multiply = ({ c0, c1, c2 }, rhs) => {\n        if (typeof rhs === 'bigint') {\n            return {\n                c0: Fp2.mul(c0, rhs),\n                c1: Fp2.mul(c1, rhs),\n                c2: Fp2.mul(c2, rhs),\n            };\n        }\n        const { c0: r0, c1: r1, c2: r2 } = rhs;\n        const t0 = Fp2.mul(c0, r0); // c0 * o0\n        const t1 = Fp2.mul(c1, r1); // c1 * o1\n        const t2 = Fp2.mul(c2, r2); // c2 * o2\n        return {\n            // t0 + (c1 + c2) * (r1 * r2) - (T1 + T2) * (u + 1)\n            c0: Fp2.add(t0, Fp2.mulByNonresidue(Fp2.sub(Fp2.mul(Fp2.add(c1, c2), Fp2.add(r1, r2)), Fp2.add(t1, t2)))),\n            // (c0 + c1) * (r0 + r1) - (T0 + T1) + T2 * (u + 1)\n            c1: Fp2.add(Fp2.sub(Fp2.mul(Fp2.add(c0, c1), Fp2.add(r0, r1)), Fp2.add(t0, t1)), Fp2.mulByNonresidue(t2)),\n            // T1 + (c0 + c2) * (r0 + r2) - T0 + T2\n            c2: Fp2.sub(Fp2.add(t1, Fp2.mul(Fp2.add(c0, c2), Fp2.add(r0, r2))), Fp2.add(t0, t2)),\n        };\n    };\n    const Fp6Square = ({ c0, c1, c2 }) => {\n        let t0 = Fp2.sqr(c0); // c0²\n        let t1 = Fp2.mul(Fp2.mul(c0, c1), _2n); // 2 * c0 * c1\n        let t3 = Fp2.mul(Fp2.mul(c1, c2), _2n); // 2 * c1 * c2\n        let t4 = Fp2.sqr(c2); // c2²\n        return {\n            c0: Fp2.add(Fp2.mulByNonresidue(t3), t0), // T3 * (u + 1) + T0\n            c1: Fp2.add(Fp2.mulByNonresidue(t4), t1), // T4 * (u + 1) + T1\n            // T1 + (c0 - c1 + c2)² + T3 - T0 - T4\n            c2: Fp2.sub(Fp2.sub(Fp2.add(Fp2.add(t1, Fp2.sqr(Fp2.add(Fp2.sub(c0, c1), c2))), t3), t0), t4),\n        };\n    };\n    const [FP6_FROBENIUS_COEFFICIENTS_1, FP6_FROBENIUS_COEFFICIENTS_2] = calcFrobeniusCoefficients(Fp2, Fp2Nonresidue, Fp.ORDER, 6, 2, 3);\n    const Fp6 = {\n        ORDER: Fp2.ORDER, // TODO: unused, but need to verify\n        isLE: Fp2.isLE,\n        BITS: 3 * Fp2.BITS,\n        BYTES: 3 * Fp2.BYTES,\n        MASK: bitMask(3 * Fp2.BITS),\n        ZERO: { c0: Fp2.ZERO, c1: Fp2.ZERO, c2: Fp2.ZERO },\n        ONE: { c0: Fp2.ONE, c1: Fp2.ZERO, c2: Fp2.ZERO },\n        create: (num) => num,\n        isValid: ({ c0, c1, c2 }) => Fp2.isValid(c0) && Fp2.isValid(c1) && Fp2.isValid(c2),\n        is0: ({ c0, c1, c2 }) => Fp2.is0(c0) && Fp2.is0(c1) && Fp2.is0(c2),\n        neg: ({ c0, c1, c2 }) => ({ c0: Fp2.neg(c0), c1: Fp2.neg(c1), c2: Fp2.neg(c2) }),\n        eql: ({ c0, c1, c2 }, { c0: r0, c1: r1, c2: r2 }) => Fp2.eql(c0, r0) && Fp2.eql(c1, r1) && Fp2.eql(c2, r2),\n        sqrt: notImplemented,\n        // Do we need division by bigint at all? Should be done via order:\n        div: (lhs, rhs) => Fp6.mul(lhs, typeof rhs === 'bigint' ? Fp.inv(Fp.create(rhs)) : Fp6.inv(rhs)),\n        pow: (num, power) => mod.FpPow(Fp6, num, power),\n        invertBatch: (nums) => mod.FpInvertBatch(Fp6, nums),\n        // Normalized\n        add: Fp6Add,\n        sub: Fp6Subtract,\n        mul: Fp6Multiply,\n        sqr: Fp6Square,\n        // NonNormalized stuff\n        addN: Fp6Add,\n        subN: Fp6Subtract,\n        mulN: Fp6Multiply,\n        sqrN: Fp6Square,\n        inv: ({ c0, c1, c2 }) => {\n            let t0 = Fp2.sub(Fp2.sqr(c0), Fp2.mulByNonresidue(Fp2.mul(c2, c1))); // c0² - c2 * c1 * (u + 1)\n            let t1 = Fp2.sub(Fp2.mulByNonresidue(Fp2.sqr(c2)), Fp2.mul(c0, c1)); // c2² * (u + 1) - c0 * c1\n            let t2 = Fp2.sub(Fp2.sqr(c1), Fp2.mul(c0, c2)); // c1² - c0 * c2\n            // 1/(((c2 * T1 + c1 * T2) * v) + c0 * T0)\n            let t4 = Fp2.inv(Fp2.add(Fp2.mulByNonresidue(Fp2.add(Fp2.mul(c2, t1), Fp2.mul(c1, t2))), Fp2.mul(c0, t0)));\n            return { c0: Fp2.mul(t4, t0), c1: Fp2.mul(t4, t1), c2: Fp2.mul(t4, t2) };\n        },\n        // Bytes utils\n        fromBytes: (b) => {\n            if (b.length !== Fp6.BYTES)\n                throw new Error('fromBytes invalid length=' + b.length);\n            return {\n                c0: Fp2.fromBytes(b.subarray(0, Fp2.BYTES)),\n                c1: Fp2.fromBytes(b.subarray(Fp2.BYTES, 2 * Fp2.BYTES)),\n                c2: Fp2.fromBytes(b.subarray(2 * Fp2.BYTES)),\n            };\n        },\n        toBytes: ({ c0, c1, c2 }) => concatBytes(Fp2.toBytes(c0), Fp2.toBytes(c1), Fp2.toBytes(c2)),\n        cmov: ({ c0, c1, c2 }, { c0: r0, c1: r1, c2: r2 }, c) => ({\n            c0: Fp2.cmov(c0, r0, c),\n            c1: Fp2.cmov(c1, r1, c),\n            c2: Fp2.cmov(c2, r2, c),\n        }),\n        fromBigSix: (t) => {\n            if (!Array.isArray(t) || t.length !== 6)\n                throw new Error('invalid Fp6 usage');\n            return {\n                c0: Fp2.fromBigTuple(t.slice(0, 2)),\n                c1: Fp2.fromBigTuple(t.slice(2, 4)),\n                c2: Fp2.fromBigTuple(t.slice(4, 6)),\n            };\n        },\n        frobeniusMap: ({ c0, c1, c2 }, power) => ({\n            c0: Fp2.frobeniusMap(c0, power),\n            c1: Fp2.mul(Fp2.frobeniusMap(c1, power), FP6_FROBENIUS_COEFFICIENTS_1[power % 6]),\n            c2: Fp2.mul(Fp2.frobeniusMap(c2, power), FP6_FROBENIUS_COEFFICIENTS_2[power % 6]),\n        }),\n        mulByFp2: ({ c0, c1, c2 }, rhs) => ({\n            c0: Fp2.mul(c0, rhs),\n            c1: Fp2.mul(c1, rhs),\n            c2: Fp2.mul(c2, rhs),\n        }),\n        mulByNonresidue: ({ c0, c1, c2 }) => ({ c0: Fp2.mulByNonresidue(c2), c1: c0, c2: c1 }),\n        // Sparse multiplication\n        mul1: ({ c0, c1, c2 }, b1) => ({\n            c0: Fp2.mulByNonresidue(Fp2.mul(c2, b1)),\n            c1: Fp2.mul(c0, b1),\n            c2: Fp2.mul(c1, b1),\n        }),\n        // Sparse multiplication\n        mul01({ c0, c1, c2 }, b0, b1) {\n            let t0 = Fp2.mul(c0, b0); // c0 * b0\n            let t1 = Fp2.mul(c1, b1); // c1 * b1\n            return {\n                // ((c1 + c2) * b1 - T1) * (u + 1) + T0\n                c0: Fp2.add(Fp2.mulByNonresidue(Fp2.sub(Fp2.mul(Fp2.add(c1, c2), b1), t1)), t0),\n                // (b0 + b1) * (c0 + c1) - T0 - T1\n                c1: Fp2.sub(Fp2.sub(Fp2.mul(Fp2.add(b0, b1), Fp2.add(c0, c1)), t0), t1),\n                // (c0 + c2) * b0 - T0 + T1\n                c2: Fp2.add(Fp2.sub(Fp2.mul(Fp2.add(c0, c2), b0), t0), t1),\n            };\n        },\n    };\n    // Fp12\n    const FP12_FROBENIUS_COEFFICIENTS = calcFrobeniusCoefficients(Fp2, Fp2Nonresidue, Fp.ORDER, 12, 1, 6)[0];\n    const Fp12Add = ({ c0, c1 }, { c0: r0, c1: r1 }) => ({\n        c0: Fp6.add(c0, r0),\n        c1: Fp6.add(c1, r1),\n    });\n    const Fp12Subtract = ({ c0, c1 }, { c0: r0, c1: r1 }) => ({\n        c0: Fp6.sub(c0, r0),\n        c1: Fp6.sub(c1, r1),\n    });\n    const Fp12Multiply = ({ c0, c1 }, rhs) => {\n        if (typeof rhs === 'bigint')\n            return { c0: Fp6.mul(c0, rhs), c1: Fp6.mul(c1, rhs) };\n        let { c0: r0, c1: r1 } = rhs;\n        let t1 = Fp6.mul(c0, r0); // c0 * r0\n        let t2 = Fp6.mul(c1, r1); // c1 * r1\n        return {\n            c0: Fp6.add(t1, Fp6.mulByNonresidue(t2)), // T1 + T2 * v\n            // (c0 + c1) * (r0 + r1) - (T1 + T2)\n            c1: Fp6.sub(Fp6.mul(Fp6.add(c0, c1), Fp6.add(r0, r1)), Fp6.add(t1, t2)),\n        };\n    };\n    const Fp12Square = ({ c0, c1 }) => {\n        let ab = Fp6.mul(c0, c1); // c0 * c1\n        return {\n            // (c1 * v + c0) * (c0 + c1) - AB - AB * v\n            c0: Fp6.sub(Fp6.sub(Fp6.mul(Fp6.add(Fp6.mulByNonresidue(c1), c0), Fp6.add(c0, c1)), ab), Fp6.mulByNonresidue(ab)),\n            c1: Fp6.add(ab, ab),\n        }; // AB + AB\n    };\n    function Fp4Square(a, b) {\n        const a2 = Fp2.sqr(a);\n        const b2 = Fp2.sqr(b);\n        return {\n            first: Fp2.add(Fp2.mulByNonresidue(b2), a2), // b² * Nonresidue + a²\n            second: Fp2.sub(Fp2.sub(Fp2.sqr(Fp2.add(a, b)), a2), b2), // (a + b)² - a² - b²\n        };\n    }\n    const Fp12 = {\n        ORDER: Fp2.ORDER, // TODO: unused, but need to verify\n        isLE: Fp6.isLE,\n        BITS: 2 * Fp2.BITS,\n        BYTES: 2 * Fp2.BYTES,\n        MASK: bitMask(2 * Fp2.BITS),\n        ZERO: { c0: Fp6.ZERO, c1: Fp6.ZERO },\n        ONE: { c0: Fp6.ONE, c1: Fp6.ZERO },\n        create: (num) => num,\n        isValid: ({ c0, c1 }) => Fp6.isValid(c0) && Fp6.isValid(c1),\n        is0: ({ c0, c1 }) => Fp6.is0(c0) && Fp6.is0(c1),\n        neg: ({ c0, c1 }) => ({ c0: Fp6.neg(c0), c1: Fp6.neg(c1) }),\n        eql: ({ c0, c1 }, { c0: r0, c1: r1 }) => Fp6.eql(c0, r0) && Fp6.eql(c1, r1),\n        sqrt: notImplemented,\n        inv: ({ c0, c1 }) => {\n            let t = Fp6.inv(Fp6.sub(Fp6.sqr(c0), Fp6.mulByNonresidue(Fp6.sqr(c1)))); // 1 / (c0² - c1² * v)\n            return { c0: Fp6.mul(c0, t), c1: Fp6.neg(Fp6.mul(c1, t)) }; // ((C0 * T) * T) + (-C1 * T) * w\n        },\n        div: (lhs, rhs) => Fp12.mul(lhs, typeof rhs === 'bigint' ? Fp.inv(Fp.create(rhs)) : Fp12.inv(rhs)),\n        pow: (num, power) => mod.FpPow(Fp12, num, power),\n        invertBatch: (nums) => mod.FpInvertBatch(Fp12, nums),\n        // Normalized\n        add: Fp12Add,\n        sub: Fp12Subtract,\n        mul: Fp12Multiply,\n        sqr: Fp12Square,\n        // NonNormalized stuff\n        addN: Fp12Add,\n        subN: Fp12Subtract,\n        mulN: Fp12Multiply,\n        sqrN: Fp12Square,\n        // Bytes utils\n        fromBytes: (b) => {\n            if (b.length !== Fp12.BYTES)\n                throw new Error('fromBytes invalid length=' + b.length);\n            return {\n                c0: Fp6.fromBytes(b.subarray(0, Fp6.BYTES)),\n                c1: Fp6.fromBytes(b.subarray(Fp6.BYTES)),\n            };\n        },\n        toBytes: ({ c0, c1 }) => concatBytes(Fp6.toBytes(c0), Fp6.toBytes(c1)),\n        cmov: ({ c0, c1 }, { c0: r0, c1: r1 }, c) => ({\n            c0: Fp6.cmov(c0, r0, c),\n            c1: Fp6.cmov(c1, r1, c),\n        }),\n        // Utils\n        // toString() {\n        //   return '' + 'Fp12(' + this.c0 + this.c1 + '* w');\n        // },\n        // fromTuple(c: [Fp6, Fp6]) {\n        //   return new Fp12(...c);\n        // }\n        fromBigTwelve: (t) => ({\n            c0: Fp6.fromBigSix(t.slice(0, 6)),\n            c1: Fp6.fromBigSix(t.slice(6, 12)),\n        }),\n        // Raises to q**i -th power\n        frobeniusMap(lhs, power) {\n            const { c0, c1, c2 } = Fp6.frobeniusMap(lhs.c1, power);\n            const coeff = FP12_FROBENIUS_COEFFICIENTS[power % 12];\n            return {\n                c0: Fp6.frobeniusMap(lhs.c0, power),\n                c1: Fp6.create({\n                    c0: Fp2.mul(c0, coeff),\n                    c1: Fp2.mul(c1, coeff),\n                    c2: Fp2.mul(c2, coeff),\n                }),\n            };\n        },\n        mulByFp2: ({ c0, c1 }, rhs) => ({\n            c0: Fp6.mulByFp2(c0, rhs),\n            c1: Fp6.mulByFp2(c1, rhs),\n        }),\n        conjugate: ({ c0, c1 }) => ({ c0, c1: Fp6.neg(c1) }),\n        // Sparse multiplication\n        mul014: ({ c0, c1 }, o0, o1, o4) => {\n            let t0 = Fp6.mul01(c0, o0, o1);\n            let t1 = Fp6.mul1(c1, o4);\n            return {\n                c0: Fp6.add(Fp6.mulByNonresidue(t1), t0), // T1 * v + T0\n                // (c1 + c0) * [o0, o1+o4] - T0 - T1\n                c1: Fp6.sub(Fp6.sub(Fp6.mul01(Fp6.add(c1, c0), o0, Fp2.add(o1, o4)), t0), t1),\n            };\n        },\n        mul034: ({ c0, c1 }, o0, o3, o4) => {\n            const a = Fp6.create({\n                c0: Fp2.mul(c0.c0, o0),\n                c1: Fp2.mul(c0.c1, o0),\n                c2: Fp2.mul(c0.c2, o0),\n            });\n            const b = Fp6.mul01(c1, o3, o4);\n            const e = Fp6.mul01(Fp6.add(c0, c1), Fp2.add(o0, o3), o4);\n            return {\n                c0: Fp6.add(Fp6.mulByNonresidue(b), a),\n                c1: Fp6.sub(e, Fp6.add(a, b)),\n            };\n        },\n        // A cyclotomic group is a subgroup of Fp^n defined by\n        //   GΦₙ(p) = {α ∈ Fpⁿ : α^Φₙ(p) = 1}\n        // The result of any pairing is in a cyclotomic subgroup\n        // https://eprint.iacr.org/2009/565.pdf\n        _cyclotomicSquare: opts.Fp12cyclotomicSquare,\n        _cyclotomicExp: opts.Fp12cyclotomicExp,\n        // https://eprint.iacr.org/2010/354.pdf\n        // https://eprint.iacr.org/2009/565.pdf\n        finalExponentiate: opts.Fp12finalExponentiate,\n    };\n    return { Fp, Fp2, Fp6, Fp4Square, Fp12 };\n}\n//# sourceMappingURL=tower.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { bls } from './abstract/bls.js';\nimport * as mod from './abstract/modular.js';\nimport { bitGet, bitLen, bytesToHex, bytesToNumberBE, concatBytes as concatB, ensureBytes, numberToBytesBE, } from './abstract/utils.js';\n// Types\nimport { isogenyMap } from './abstract/hash-to-curve.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport { tower12, psiFrobenius } from './abstract/tower.js';\n/**\n * bls12-381 is pairing-friendly Barreto-Lynn-Scott elliptic curve construction allowing to:\n * * Construct zk-SNARKs at the ~120-bit security\n * * Efficiently verify N aggregate signatures with 1 pairing and N ec additions:\n *   the Boneh-Lynn-Shacham signature scheme is orders of magnitude more efficient than Schnorr\n *\n * ### Summary\n * 1. BLS Relies on Bilinear Pairing (expensive)\n * 2. Private Keys: 32 bytes\n * 3. Public Keys: 48 bytes: 381 bit affine x coordinate, encoded into 48 big-endian bytes.\n * 4. Signatures: 96 bytes: two 381 bit integers (affine x coordinate), encoded into two 48 big-endian byte arrays.\n *     - The signature is a point on the G2 subgroup, which is defined over a finite field\n *       with elements twice as big as the G1 curve (G2 is over Fp2 rather than Fp. Fp2 is analogous to the\n *       complex numbers).\n *     - We also support reversed 96-byte pubkeys & 48-byte short signatures.\n * 5. The 12 stands for the Embedding degree.\n *\n * ### Formulas\n * - `P = pk x G` - public keys\n * - `S = pk x H(m)` - signing\n * - `e(P, H(m)) == e(G, S)` - verification using pairings\n * - `e(G, S) = e(G, SUM(n)(Si)) = MUL(n)(e(G, Si))` - signature aggregation\n *\n * ### Compatibility and notes\n * 1. It is compatible with Algorand, Chia, Dfinity, Ethereum, Filecoin, ZEC.\n * Filecoin uses little endian byte arrays for private keys - make sure to reverse byte order.\n * 2. Some projects use G2 for public keys and G1 for signatures. It's called \"short signature\".\n * 3. Curve security level is about 120 bits as per [Barbulescu-Duquesne 2017](https://hal.science/hal-01534101/file/main.pdf)\n * 4. Compatible with specs:\n *    [cfrg-pairing-friendly-curves-11](https://tools.ietf.org/html/draft-irtf-cfrg-pairing-friendly-curves-11),\n *    [cfrg-bls-signature-05](https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-bls-signature-05),\n *    [RFC 9380](https://www.rfc-editor.org/rfc/rfc9380).\n *\n * ### Params\n * To verify curve parameters, see\n * [pairing-friendly-curves spec](https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-pairing-friendly-curves-11).\n * Basic math is done over finite fields over p.\n * More complicated math is done over polynominal extension fields.\n * To simplify calculations in Fp12, we construct extension tower:\n * - Fp₁₂ = Fp₆² => Fp₂³\n * - Fp(u) / (u² - β) where β = -1\n * - Fp₂(v) / (v³ - ξ) where ξ = u + 1\n * - Fp₆(w) / (w² - γ) where γ = v\n * Here goes constants && point encoding format\n *\n * Embedding degree (k): 12\n * Seed (X): -15132376222941642752\n * Fr:  (x⁴-x²+1)\n * Fp: ((x-1)² ⋅ r(x)/3+x)\n * (E/Fp): Y²=X³+4\n * (Eₜ/Fp²): Y² = X³+4(u+1) (M-type twist)\n * Ate loop size: X\n *\n * ### Towers\n * - Fp²[u] = Fp/u²+1\n * - Fp⁶[v] = Fp²/v³-1-u\n * - Fp¹²[w] = Fp⁶/w²-v\n *\n * @todo construct bls & bn fp/fr from seed.\n * @module\n */\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n// The BLS parameter x (seed) for BLS12-381. NOTE: it is negative!\nconst BLS_X = BigInt('0xd201000000010000');\nconst BLS_X_LEN = bitLen(BLS_X);\n// CURVE FIELDS\nconst { Fp, Fp2, Fp6, Fp4Square, Fp12 } = tower12({\n    // Order of Fp\n    ORDER: BigInt('0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab'),\n    // Finite extension field over irreducible polynominal.\n    // Fp(u) / (u² - β) where β = -1\n    FP2_NONRESIDUE: [_1n, _1n],\n    Fp2mulByB: ({ c0, c1 }) => {\n        const t0 = Fp.mul(c0, _4n); // 4 * c0\n        const t1 = Fp.mul(c1, _4n); // 4 * c1\n        // (T0-T1) + (T0+T1)*i\n        return { c0: Fp.sub(t0, t1), c1: Fp.add(t0, t1) };\n    },\n    // Fp12\n    // A cyclotomic group is a subgroup of Fp^n defined by\n    //   GΦₙ(p) = {α ∈ Fpⁿ : α^Φₙ(p) = 1}\n    // The result of any pairing is in a cyclotomic subgroup\n    // https://eprint.iacr.org/2009/565.pdf\n    Fp12cyclotomicSquare: ({ c0, c1 }) => {\n        const { c0: c0c0, c1: c0c1, c2: c0c2 } = c0;\n        const { c0: c1c0, c1: c1c1, c2: c1c2 } = c1;\n        const { first: t3, second: t4 } = Fp4Square(c0c0, c1c1);\n        const { first: t5, second: t6 } = Fp4Square(c1c0, c0c2);\n        const { first: t7, second: t8 } = Fp4Square(c0c1, c1c2);\n        const t9 = Fp2.mulByNonresidue(t8); // T8 * (u + 1)\n        return {\n            c0: Fp6.create({\n                c0: Fp2.add(Fp2.mul(Fp2.sub(t3, c0c0), _2n), t3), // 2 * (T3 - c0c0)  + T3\n                c1: Fp2.add(Fp2.mul(Fp2.sub(t5, c0c1), _2n), t5), // 2 * (T5 - c0c1)  + T5\n                c2: Fp2.add(Fp2.mul(Fp2.sub(t7, c0c2), _2n), t7),\n            }), // 2 * (T7 - c0c2)  + T7\n            c1: Fp6.create({\n                c0: Fp2.add(Fp2.mul(Fp2.add(t9, c1c0), _2n), t9), // 2 * (T9 + c1c0) + T9\n                c1: Fp2.add(Fp2.mul(Fp2.add(t4, c1c1), _2n), t4), // 2 * (T4 + c1c1) + T4\n                c2: Fp2.add(Fp2.mul(Fp2.add(t6, c1c2), _2n), t6),\n            }),\n        }; // 2 * (T6 + c1c2) + T6\n    },\n    Fp12cyclotomicExp(num, n) {\n        let z = Fp12.ONE;\n        for (let i = BLS_X_LEN - 1; i >= 0; i--) {\n            z = Fp12._cyclotomicSquare(z);\n            if (bitGet(n, i))\n                z = Fp12.mul(z, num);\n        }\n        return z;\n    },\n    // https://eprint.iacr.org/2010/354.pdf\n    // https://eprint.iacr.org/2009/565.pdf\n    Fp12finalExponentiate: (num) => {\n        const x = BLS_X;\n        // this^(q⁶) / this\n        const t0 = Fp12.div(Fp12.frobeniusMap(num, 6), num);\n        // t0^(q²) * t0\n        const t1 = Fp12.mul(Fp12.frobeniusMap(t0, 2), t0);\n        const t2 = Fp12.conjugate(Fp12._cyclotomicExp(t1, x));\n        const t3 = Fp12.mul(Fp12.conjugate(Fp12._cyclotomicSquare(t1)), t2);\n        const t4 = Fp12.conjugate(Fp12._cyclotomicExp(t3, x));\n        const t5 = Fp12.conjugate(Fp12._cyclotomicExp(t4, x));\n        const t6 = Fp12.mul(Fp12.conjugate(Fp12._cyclotomicExp(t5, x)), Fp12._cyclotomicSquare(t2));\n        const t7 = Fp12.conjugate(Fp12._cyclotomicExp(t6, x));\n        const t2_t5_pow_q2 = Fp12.frobeniusMap(Fp12.mul(t2, t5), 2);\n        const t4_t1_pow_q3 = Fp12.frobeniusMap(Fp12.mul(t4, t1), 3);\n        const t6_t1c_pow_q1 = Fp12.frobeniusMap(Fp12.mul(t6, Fp12.conjugate(t1)), 1);\n        const t7_t3c_t1 = Fp12.mul(Fp12.mul(t7, Fp12.conjugate(t3)), t1);\n        // (t2 * t5)^(q²) * (t4 * t1)^(q³) * (t6 * t1.conj)^(q^1) * t7 * t3.conj * t1\n        return Fp12.mul(Fp12.mul(Fp12.mul(t2_t5_pow_q2, t4_t1_pow_q3), t6_t1c_pow_q1), t7_t3c_t1);\n    },\n});\n// Finite field over r.\n// This particular field is not used anywhere in bls12-381, but it is still useful.\nconst Fr = mod.Field(BigInt('0x73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001'));\n// END OF CURVE FIELDS\n// HashToCurve\n// 3-isogeny map from E' to E https://www.rfc-editor.org/rfc/rfc9380#appendix-E.3\nconst isogenyMapG2 = isogenyMap(Fp2, [\n    // xNum\n    [\n        [\n            '0x5c759507e8e333ebb5b7a9a47d7ed8532c52d39fd3a042a88b58423c50ae15d5c2638e343d9c71c6238aaaaaaaa97d6',\n            '0x5c759507e8e333ebb5b7a9a47d7ed8532c52d39fd3a042a88b58423c50ae15d5c2638e343d9c71c6238aaaaaaaa97d6',\n        ],\n        [\n            '0x0',\n            '0x11560bf17baa99bc32126fced787c88f984f87adf7ae0c7f9a208c6b4f20a4181472aaa9cb8d555526a9ffffffffc71a',\n        ],\n        [\n            '0x11560bf17baa99bc32126fced787c88f984f87adf7ae0c7f9a208c6b4f20a4181472aaa9cb8d555526a9ffffffffc71e',\n            '0x8ab05f8bdd54cde190937e76bc3e447cc27c3d6fbd7063fcd104635a790520c0a395554e5c6aaaa9354ffffffffe38d',\n        ],\n        [\n            '0x171d6541fa38ccfaed6dea691f5fb614cb14b4e7f4e810aa22d6108f142b85757098e38d0f671c7188e2aaaaaaaa5ed1',\n            '0x0',\n        ],\n    ],\n    // xDen\n    [\n        [\n            '0x0',\n            '0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaa63',\n        ],\n        [\n            '0xc',\n            '0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaa9f',\n        ],\n        ['0x1', '0x0'], // LAST 1\n    ],\n    // yNum\n    [\n        [\n            '0x1530477c7ab4113b59a4c18b076d11930f7da5d4a07f649bf54439d87d27e500fc8c25ebf8c92f6812cfc71c71c6d706',\n            '0x1530477c7ab4113b59a4c18b076d11930f7da5d4a07f649bf54439d87d27e500fc8c25ebf8c92f6812cfc71c71c6d706',\n        ],\n        [\n            '0x0',\n            '0x5c759507e8e333ebb5b7a9a47d7ed8532c52d39fd3a042a88b58423c50ae15d5c2638e343d9c71c6238aaaaaaaa97be',\n        ],\n        [\n            '0x11560bf17baa99bc32126fced787c88f984f87adf7ae0c7f9a208c6b4f20a4181472aaa9cb8d555526a9ffffffffc71c',\n            '0x8ab05f8bdd54cde190937e76bc3e447cc27c3d6fbd7063fcd104635a790520c0a395554e5c6aaaa9354ffffffffe38f',\n        ],\n        [\n            '0x124c9ad43b6cf79bfbf7043de3811ad0761b0f37a1e26286b0e977c69aa274524e79097a56dc4bd9e1b371c71c718b10',\n            '0x0',\n        ],\n    ],\n    // yDen\n    [\n        [\n            '0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffa8fb',\n            '0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffa8fb',\n        ],\n        [\n            '0x0',\n            '0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffa9d3',\n        ],\n        [\n            '0x12',\n            '0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaa99',\n        ],\n        ['0x1', '0x0'], // LAST 1\n    ],\n].map((i) => i.map((pair) => Fp2.fromBigTuple(pair.map(BigInt)))));\n// 11-isogeny map from E' to E\nconst isogenyMapG1 = isogenyMap(Fp, [\n    // xNum\n    [\n        '0x11a05f2b1e833340b809101dd99815856b303e88a2d7005ff2627b56cdb4e2c85610c2d5f2e62d6eaeac1662734649b7',\n        '0x17294ed3e943ab2f0588bab22147a81c7c17e75b2f6a8417f565e33c70d1e86b4838f2a6f318c356e834eef1b3cb83bb',\n        '0xd54005db97678ec1d1048c5d10a9a1bce032473295983e56878e501ec68e25c958c3e3d2a09729fe0179f9dac9edcb0',\n        '0x1778e7166fcc6db74e0609d307e55412d7f5e4656a8dbf25f1b33289f1b330835336e25ce3107193c5b388641d9b6861',\n        '0xe99726a3199f4436642b4b3e4118e5499db995a1257fb3f086eeb65982fac18985a286f301e77c451154ce9ac8895d9',\n        '0x1630c3250d7313ff01d1201bf7a74ab5db3cb17dd952799b9ed3ab9097e68f90a0870d2dcae73d19cd13c1c66f652983',\n        '0xd6ed6553fe44d296a3726c38ae652bfb11586264f0f8ce19008e218f9c86b2a8da25128c1052ecaddd7f225a139ed84',\n        '0x17b81e7701abdbe2e8743884d1117e53356de5ab275b4db1a682c62ef0f2753339b7c8f8c8f475af9ccb5618e3f0c88e',\n        '0x80d3cf1f9a78fc47b90b33563be990dc43b756ce79f5574a2c596c928c5d1de4fa295f296b74e956d71986a8497e317',\n        '0x169b1f8e1bcfa7c42e0c37515d138f22dd2ecb803a0c5c99676314baf4bb1b7fa3190b2edc0327797f241067be390c9e',\n        '0x10321da079ce07e272d8ec09d2565b0dfa7dccdde6787f96d50af36003b14866f69b771f8c285decca67df3f1605fb7b',\n        '0x6e08c248e260e70bd1e962381edee3d31d79d7e22c837bc23c0bf1bc24c6b68c24b1b80b64d391fa9c8ba2e8ba2d229',\n    ],\n    // xDen\n    [\n        '0x8ca8d548cff19ae18b2e62f4bd3fa6f01d5ef4ba35b48ba9c9588617fc8ac62b558d681be343df8993cf9fa40d21b1c',\n        '0x12561a5deb559c4348b4711298e536367041e8ca0cf0800c0126c2588c48bf5713daa8846cb026e9e5c8276ec82b3bff',\n        '0xb2962fe57a3225e8137e629bff2991f6f89416f5a718cd1fca64e00b11aceacd6a3d0967c94fedcfcc239ba5cb83e19',\n        '0x3425581a58ae2fec83aafef7c40eb545b08243f16b1655154cca8abc28d6fd04976d5243eecf5c4130de8938dc62cd8',\n        '0x13a8e162022914a80a6f1d5f43e7a07dffdfc759a12062bb8d6b44e833b306da9bd29ba81f35781d539d395b3532a21e',\n        '0xe7355f8e4e667b955390f7f0506c6e9395735e9ce9cad4d0a43bcef24b8982f7400d24bc4228f11c02df9a29f6304a5',\n        '0x772caacf16936190f3e0c63e0596721570f5799af53a1894e2e073062aede9cea73b3538f0de06cec2574496ee84a3a',\n        '0x14a7ac2a9d64a8b230b3f5b074cf01996e7f63c21bca68a81996e1cdf9822c580fa5b9489d11e2d311f7d99bbdcc5a5e',\n        '0xa10ecf6ada54f825e920b3dafc7a3cce07f8d1d7161366b74100da67f39883503826692abba43704776ec3a79a1d641',\n        '0x95fc13ab9e92ad4476d6e3eb3a56680f682b4ee96f7d03776df533978f31c1593174e4b4b7865002d6384d168ecdd0a',\n        '0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x90d97c81ba24ee0259d1f094980dcfa11ad138e48a869522b52af6c956543d3cd0c7aee9b3ba3c2be9845719707bb33',\n        '0x134996a104ee5811d51036d776fb46831223e96c254f383d0f906343eb67ad34d6c56711962fa8bfe097e75a2e41c696',\n        '0xcc786baa966e66f4a384c86a3b49942552e2d658a31ce2c344be4b91400da7d26d521628b00523b8dfe240c72de1f6',\n        '0x1f86376e8981c217898751ad8746757d42aa7b90eeb791c09e4a3ec03251cf9de405aba9ec61deca6355c77b0e5f4cb',\n        '0x8cc03fdefe0ff135caf4fe2a21529c4195536fbe3ce50b879833fd221351adc2ee7f8dc099040a841b6daecf2e8fedb',\n        '0x16603fca40634b6a2211e11db8f0a6a074a7d0d4afadb7bd76505c3d3ad5544e203f6326c95a807299b23ab13633a5f0',\n        '0x4ab0b9bcfac1bbcb2c977d027796b3ce75bb8ca2be184cb5231413c4d634f3747a87ac2460f415ec961f8855fe9d6f2',\n        '0x987c8d5333ab86fde9926bd2ca6c674170a05bfe3bdd81ffd038da6c26c842642f64550fedfe935a15e4ca31870fb29',\n        '0x9fc4018bd96684be88c9e221e4da1bb8f3abd16679dc26c1e8b6e6a1f20cabe69d65201c78607a360370e577bdba587',\n        '0xe1bba7a1186bdb5223abde7ada14a23c42a0ca7915af6fe06985e7ed1e4d43b9b3f7055dd4eba6f2bafaaebca731c30',\n        '0x19713e47937cd1be0dfd0b8f1d43fb93cd2fcbcb6caf493fd1183e416389e61031bf3a5cce3fbafce813711ad011c132',\n        '0x18b46a908f36f6deb918c143fed2edcc523559b8aaf0c2462e6bfe7f911f643249d9cdf41b44d606ce07c8a4d0074d8e',\n        '0xb182cac101b9399d155096004f53f447aa7b12a3426b08ec02710e807b4633f06c851c1919211f20d4c04f00b971ef8',\n        '0x245a394ad1eca9b72fc00ae7be315dc757b3b080d4c158013e6632d3c40659cc6cf90ad1c232a6442d9d3f5db980133',\n        '0x5c129645e44cf1102a159f748c4a3fc5e673d81d7e86568d9ab0f5d396a7ce46ba1049b6579afb7866b1e715475224b',\n        '0x15e6be4e990f03ce4ea50b3b42df2eb5cb181d8f84965a3957add4fa95af01b2b665027efec01c7704b456be69c8b604',\n    ],\n    // yDen\n    [\n        '0x16112c4c3a9c98b252181140fad0eae9601a6de578980be6eec3232b5be72e7a07f3688ef60c206d01479253b03663c1',\n        '0x1962d75c2381201e1a0cbd6c43c348b885c84ff731c4d59ca4a10356f453e01f78a4260763529e3532f6102c2e49a03d',\n        '0x58df3306640da276faaae7d6e8eb15778c4855551ae7f310c35a5dd279cd2eca6757cd636f96f891e2538b53dbf67f2',\n        '0x16b7d288798e5395f20d23bf89edb4d1d115c5dbddbcd30e123da489e726af41727364f2c28297ada8d26d98445f5416',\n        '0xbe0e079545f43e4b00cc912f8228ddcc6d19c9f0f69bbb0542eda0fc9dec916a20b15dc0fd2ededda39142311a5001d',\n        '0x8d9e5297186db2d9fb266eaac783182b70152c65550d881c5ecd87b6f0f5a6449f38db9dfa9cce202c6477faaf9b7ac',\n        '0x166007c08a99db2fc3ba8734ace9824b5eecfdfa8d0cf8ef5dd365bc400a0051d5fa9c01a58b1fb93d1a1399126a775c',\n        '0x16a3ef08be3ea7ea03bcddfabba6ff6ee5a4375efa1f4fd7feb34fd206357132b920f5b00801dee460ee415a15812ed9',\n        '0x1866c8ed336c61231a1be54fd1d74cc4f9fb0ce4c6af5920abc5750c4bf39b4852cfe2f7bb9248836b233d9d55535d4a',\n        '0x167a55cda70a6e1cea820597d94a84903216f763e13d87bb5308592e7ea7d4fbc7385ea3d529b35e346ef48bb8913f55',\n        '0x4d2f259eea405bd48f010a01ad2911d9c6dd039bb61a6290e591b36e636a5c871a5c29f4f83060400f8b49cba8f6aa8',\n        '0xaccbb67481d033ff5852c1e48c50c477f94ff8aefce42d28c0f9a88cea7913516f968986f7ebbea9684b529e2561092',\n        '0xad6b9514c767fe3c3613144b45f1496543346d98adf02267d5ceef9a00d9b8693000763e3b90ac11e99b138573345cc',\n        '0x2660400eb2e4f3b628bdd0d53cd76f2bf565b94e72927c1cb748df27942480e420517bd8714cc80d1fadc1326ed06f7',\n        '0xe0fa1d816ddc03e6b24255e0d7819c171c40f65e273b853324efcd6356caa205ca2f570f13497804415473a1d634b8f',\n        '0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j))));\n// SWU Map - Fp2 to G2': y² = x³ + 240i * x + 1012 + 1012i\nconst G2_SWU = mapToCurveSimpleSWU(Fp2, {\n    A: Fp2.create({ c0: Fp.create(_0n), c1: Fp.create(BigInt(240)) }), // A' = 240 * I\n    B: Fp2.create({ c0: Fp.create(BigInt(1012)), c1: Fp.create(BigInt(1012)) }), // B' = 1012 * (1 + I)\n    Z: Fp2.create({ c0: Fp.create(BigInt(-2)), c1: Fp.create(BigInt(-1)) }), // Z: -(2 + I)\n});\n// Optimized SWU Map - Fp to G1\nconst G1_SWU = mapToCurveSimpleSWU(Fp, {\n    A: Fp.create(BigInt('0x144698a3b8e9433d693a02c96d4982b0ea985383ee66a8d8e8981aefd881ac98936f8da0e0f97f5cf428082d584c1d')),\n    B: Fp.create(BigInt('0x12e2908d11688030018b12e8753eee3b2016c1f0f24f4070a0b9c14fcef35ef55a23215a316ceaa5d1cc48e98e172be0')),\n    Z: Fp.create(BigInt(11)),\n});\n// Endomorphisms (for fast cofactor clearing)\n// Ψ(P) endomorphism\nconst { G2psi, G2psi2 } = psiFrobenius(Fp, Fp2, Fp2.div(Fp2.ONE, Fp2.NONRESIDUE)); // 1/(u+1)\n// Default hash_to_field options are for hash to G2.\n//\n// Parameter definitions are in section 5.3 of the spec unless otherwise noted.\n// Parameter values come from section 8.8.2 of the spec.\n// https://www.rfc-editor.org/rfc/rfc9380#section-8.8.2\n//\n// Base field F is GF(p^m)\n// p = 0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab\n// m = 2 (or 1 for G1 see section 8.8.1)\n// k = 128\nconst htfDefaults = Object.freeze({\n    // DST: a domain separation tag\n    // defined in section 2.2.5\n    // Use utils.getDSTLabel(), utils.setDSTLabel(value)\n    DST: 'BLS_SIG_BLS12381G2_XMD:SHA-256_SSWU_RO_NUL_',\n    encodeDST: 'BLS_SIG_BLS12381G2_XMD:SHA-256_SSWU_RO_NUL_',\n    // p: the characteristic of F\n    //    where F is a finite field of characteristic p and order q = p^m\n    p: Fp.ORDER,\n    // m: the extension degree of F, m >= 1\n    //     where F is a finite field of characteristic p and order q = p^m\n    m: 2,\n    // k: the target security level for the suite in bits\n    // defined in section 5.1\n    k: 128,\n    // option to use a message that has already been processed by\n    // expand_message_xmd\n    expand: 'xmd',\n    // Hash functions for: expand_message_xmd is appropriate for use with a\n    // wide range of hash functions, including SHA-2, SHA-3, BLAKE2, and others.\n    // BBS+ uses blake2: https://github.com/hyperledger/aries-framework-go/issues/2247\n    hash: sha256,\n});\n// Encoding utils\n// Point on G1 curve: (x, y)\n// Compressed point of infinity\nconst COMPRESSED_ZERO = setMask(Fp.toBytes(_0n), { infinity: true, compressed: true }); // set compressed & point-at-infinity bits\nfunction parseMask(bytes) {\n    // Copy, so we can remove mask data. It will be removed also later, when Fp.create will call modulo.\n    bytes = bytes.slice();\n    const mask = bytes[0] & 224;\n    const compressed = !!((mask >> 7) & 1); // compression bit (0b1000_0000)\n    const infinity = !!((mask >> 6) & 1); // point at infinity bit (0b0100_0000)\n    const sort = !!((mask >> 5) & 1); // sort bit (0b0010_0000)\n    bytes[0] &= 31; // clear mask (zero first 3 bits)\n    return { compressed, infinity, sort, value: bytes };\n}\nfunction setMask(bytes, mask) {\n    if (bytes[0] & 224)\n        throw new Error('setMask: non-empty mask');\n    if (mask.compressed)\n        bytes[0] |= 128;\n    if (mask.infinity)\n        bytes[0] |= 64;\n    if (mask.sort)\n        bytes[0] |= 32;\n    return bytes;\n}\nfunction signatureG1ToRawBytes(point) {\n    point.assertValidity();\n    const isZero = point.equals(bls12_381.G1.ProjectivePoint.ZERO);\n    const { x, y } = point.toAffine();\n    if (isZero)\n        return COMPRESSED_ZERO.slice();\n    const P = Fp.ORDER;\n    const sort = Boolean((y * _2n) / P);\n    return setMask(numberToBytesBE(x, Fp.BYTES), { compressed: true, sort });\n}\nfunction signatureG2ToRawBytes(point) {\n    // NOTE: by some reasons it was missed in bls12-381, looks like bug\n    point.assertValidity();\n    const len = Fp.BYTES;\n    if (point.equals(bls12_381.G2.ProjectivePoint.ZERO))\n        return concatB(COMPRESSED_ZERO, numberToBytesBE(_0n, len));\n    const { x, y } = point.toAffine();\n    const { re: x0, im: x1 } = Fp2.reim(x);\n    const { re: y0, im: y1 } = Fp2.reim(y);\n    const tmp = y1 > _0n ? y1 * _2n : y0 * _2n;\n    const sort = Boolean((tmp / Fp.ORDER) & _1n);\n    const z2 = x0;\n    return concatB(setMask(numberToBytesBE(x1, len), { sort, compressed: true }), numberToBytesBE(z2, len));\n}\n/**\n * bls12-381 pairing-friendly curve.\n * @example\n * import { bls12_381 as bls } from '@noble/curves/bls12-381';\n * // G1 keys, G2 signatures\n * const privateKey = '67d53f170b908cabb9eb326c3c337762d59289a8fec79f7bc9254b584b73265c';\n * const message = '64726e3da8';\n * const publicKey = bls.getPublicKey(privateKey);\n * const signature = bls.sign(message, privateKey);\n * const isValid = bls.verify(signature, message, publicKey);\n */\nexport const bls12_381 = bls({\n    // Fields\n    fields: {\n        Fp,\n        Fp2,\n        Fp6,\n        Fp12,\n        Fr,\n    },\n    // G1 is the order-q subgroup of E1(Fp) : y² = x³ + 4, #E1(Fp) = h1q, where\n    // characteristic; z + (z⁴ - z² + 1)(z - 1)²/3\n    G1: {\n        Fp,\n        // cofactor; (z - 1)²/3\n        h: BigInt('0x396c8c005555e1568c00aaab0000aaab'),\n        // generator's coordinates\n        // x = 3685416753713387016781088315183077757961620795782546409894578378688607592378376318836054947676345821548104185464507\n        // y = 1339506544944476473020471379941921221584933875938349620426543736416511423956333506472724655353366534992391756441569\n        Gx: BigInt('0x17f1d3a73197d7942695638c4fa9ac0fc3688c4f9774b905a14e3a3f171bac586c55e83ff97a1aeffb3af00adb22c6bb'),\n        Gy: BigInt('0x08b3f481e3aaa0f1a09e30ed741d8ae4fcf5e095d5d00af600db18cb2c04b3edd03cc744a2888ae40caa232946c5e7e1'),\n        a: Fp.ZERO,\n        b: _4n,\n        htfDefaults: { ...htfDefaults, m: 1, DST: 'BLS_SIG_BLS12381G1_XMD:SHA-256_SSWU_RO_NUL_' },\n        wrapPrivateKey: true,\n        allowInfinityPoint: true,\n        // Checks is the point resides in prime-order subgroup.\n        // point.isTorsionFree() should return true for valid points\n        // It returns false for shitty points.\n        // https://eprint.iacr.org/2021/1130.pdf\n        isTorsionFree: (c, point) => {\n            // φ endomorphism\n            const cubicRootOfUnityModP = BigInt('0x5f19672fdf76ce51ba69c6076a0f77eaddb3a93be6f89688de17d813620a00022e01fffffffefffe');\n            const phi = new c(Fp.mul(point.px, cubicRootOfUnityModP), point.py, point.pz);\n            // todo: unroll\n            const xP = point.multiplyUnsafe(BLS_X).negate(); // [x]P\n            const u2P = xP.multiplyUnsafe(BLS_X); // [u2]P\n            return u2P.equals(phi);\n            // https://eprint.iacr.org/2019/814.pdf\n            // (z² − 1)/3\n            // const c1 = BigInt('0x396c8c005555e1560000000055555555');\n            // const P = this;\n            // const S = P.sigma();\n            // const Q = S.double();\n            // const S2 = S.sigma();\n            // // [(z² − 1)/3](2σ(P) − P − σ²(P)) − σ²(P) = O\n            // const left = Q.subtract(P).subtract(S2).multiplyUnsafe(c1);\n            // const C = left.subtract(S2);\n            // return C.isZero();\n        },\n        // Clear cofactor of G1\n        // https://eprint.iacr.org/2019/403\n        clearCofactor: (_c, point) => {\n            // return this.multiplyUnsafe(CURVE.h);\n            return point.multiplyUnsafe(BLS_X).add(point); // x*P + P\n        },\n        mapToCurve: (scalars) => {\n            const { x, y } = G1_SWU(Fp.create(scalars[0]));\n            return isogenyMapG1(x, y);\n        },\n        fromBytes: (bytes) => {\n            const { compressed, infinity, sort, value } = parseMask(bytes);\n            if (value.length === 48 && compressed) {\n                // TODO: Fp.bytes\n                const P = Fp.ORDER;\n                const compressedValue = bytesToNumberBE(value);\n                // Zero\n                const x = Fp.create(compressedValue & Fp.MASK);\n                if (infinity) {\n                    if (x !== _0n)\n                        throw new Error('G1: non-empty compressed point at infinity');\n                    return { x: _0n, y: _0n };\n                }\n                const right = Fp.add(Fp.pow(x, _3n), Fp.create(bls12_381.params.G1b)); // y² = x³ + b\n                let y = Fp.sqrt(right);\n                if (!y)\n                    throw new Error('invalid compressed G1 point');\n                if ((y * _2n) / P !== BigInt(sort))\n                    y = Fp.neg(y);\n                return { x: Fp.create(x), y: Fp.create(y) };\n            }\n            else if (value.length === 96 && !compressed) {\n                // Check if the infinity flag is set\n                const x = bytesToNumberBE(value.subarray(0, Fp.BYTES));\n                const y = bytesToNumberBE(value.subarray(Fp.BYTES));\n                if (infinity) {\n                    if (x !== _0n || y !== _0n)\n                        throw new Error('G1: non-empty point at infinity');\n                    return bls12_381.G1.ProjectivePoint.ZERO.toAffine();\n                }\n                return { x: Fp.create(x), y: Fp.create(y) };\n            }\n            else {\n                throw new Error('invalid point G1, expected 48/96 bytes');\n            }\n        },\n        toBytes: (c, point, isCompressed) => {\n            const isZero = point.equals(c.ZERO);\n            const { x, y } = point.toAffine();\n            if (isCompressed) {\n                if (isZero)\n                    return COMPRESSED_ZERO.slice();\n                const P = Fp.ORDER;\n                const sort = Boolean((y * _2n) / P);\n                return setMask(numberToBytesBE(x, Fp.BYTES), { compressed: true, sort });\n            }\n            else {\n                if (isZero) {\n                    // 2x PUBLIC_KEY_LENGTH\n                    const x = concatB(new Uint8Array([0x40]), new Uint8Array(2 * Fp.BYTES - 1));\n                    return x;\n                }\n                else {\n                    return concatB(numberToBytesBE(x, Fp.BYTES), numberToBytesBE(y, Fp.BYTES));\n                }\n            }\n        },\n        ShortSignature: {\n            fromHex(hex) {\n                const { infinity, sort, value } = parseMask(ensureBytes('signatureHex', hex, 48));\n                const P = Fp.ORDER;\n                const compressedValue = bytesToNumberBE(value);\n                // Zero\n                if (infinity)\n                    return bls12_381.G1.ProjectivePoint.ZERO;\n                const x = Fp.create(compressedValue & Fp.MASK);\n                const right = Fp.add(Fp.pow(x, _3n), Fp.create(bls12_381.params.G1b)); // y² = x³ + b\n                let y = Fp.sqrt(right);\n                if (!y)\n                    throw new Error('invalid compressed G1 point');\n                const aflag = BigInt(sort);\n                if ((y * _2n) / P !== aflag)\n                    y = Fp.neg(y);\n                const point = bls12_381.G1.ProjectivePoint.fromAffine({ x, y });\n                point.assertValidity();\n                return point;\n            },\n            toRawBytes(point) {\n                return signatureG1ToRawBytes(point);\n            },\n            toHex(point) {\n                return bytesToHex(signatureG1ToRawBytes(point));\n            },\n        },\n    },\n    // G2 is the order-q subgroup of E2(Fp²) : y² = x³+4(1+√−1),\n    // where Fp2 is Fp[√−1]/(x2+1). #E2(Fp2 ) = h2q, where\n    // G² - 1\n    // h2q\n    G2: {\n        Fp: Fp2,\n        // cofactor\n        h: BigInt('0x5d543a95414e7f1091d50792876a202cd91de4547085abaa68a205b2e5a7ddfa628f1cb4d9e82ef21537e293a6691ae1616ec6e786f0c70cf1c38e31c7238e5'),\n        Gx: Fp2.fromBigTuple([\n            BigInt('0x024aa2b2f08f0a91260805272dc51051c6e47ad4fa403b02b4510b647ae3d1770bac0326a805bbefd48056c8c121bdb8'),\n            BigInt('0x13e02b6052719f607dacd3a088274f65596bd0d09920b61ab5da61bbdc7f5049334cf11213945d57e5ac7d055d042b7e'),\n        ]),\n        // y =\n        // 927553665492332455747201965776037880757740193453592970025027978793976877002675564980949289727957565575433344219582,\n        // 1985150602287291935568054521177171638300868978215655730859378665066344726373823718423869104263333984641494340347905\n        Gy: Fp2.fromBigTuple([\n            BigInt('0x0ce5d527727d6e118cc9cdc6da2e351aadfd9baa8cbdd3a76d429a695160d12c923ac9cc3baca289e193548608b82801'),\n            BigInt('0x0606c4a02ea734cc32acd2b02bc28b99cb3e287e85a763af267492ab572e99ab3f370d275cec1da1aaa9075ff05f79be'),\n        ]),\n        a: Fp2.ZERO,\n        b: Fp2.fromBigTuple([_4n, _4n]),\n        hEff: BigInt('0xbc69f08f2ee75b3584c6a0ea91b352888e2a8e9145ad7689986ff031508ffe1329c2f178731db956d82bf015d1212b02ec0ec69d7477c1ae954cbc06689f6a359894c0adebbf6b4e8020005aaa95551'),\n        htfDefaults: { ...htfDefaults },\n        wrapPrivateKey: true,\n        allowInfinityPoint: true,\n        mapToCurve: (scalars) => {\n            const { x, y } = G2_SWU(Fp2.fromBigTuple(scalars));\n            return isogenyMapG2(x, y);\n        },\n        // Checks is the point resides in prime-order subgroup.\n        // point.isTorsionFree() should return true for valid points\n        // It returns false for shitty points.\n        // https://eprint.iacr.org/2021/1130.pdf\n        isTorsionFree: (c, P) => {\n            return P.multiplyUnsafe(BLS_X).negate().equals(G2psi(c, P)); // ψ(P) == [u](P)\n            // Older version: https://eprint.iacr.org/2019/814.pdf\n            // Ψ²(P) => Ψ³(P) => [z]Ψ³(P) where z = -x => [z]Ψ³(P) - Ψ²(P) + P == O\n            // return P.psi2().psi().mulNegX().subtract(psi2).add(P).isZero();\n        },\n        // Maps the point into the prime-order subgroup G2.\n        // clear_cofactor_bls12381_g2 from cfrg-hash-to-curve-11\n        // https://eprint.iacr.org/2017/419.pdf\n        // prettier-ignore\n        clearCofactor: (c, P) => {\n            const x = BLS_X;\n            let t1 = P.multiplyUnsafe(x).negate(); // [-x]P\n            let t2 = G2psi(c, P); // Ψ(P)\n            let t3 = P.double(); // 2P\n            t3 = G2psi2(c, t3); // Ψ²(2P)\n            t3 = t3.subtract(t2); // Ψ²(2P) - Ψ(P)\n            t2 = t1.add(t2); // [-x]P + Ψ(P)\n            t2 = t2.multiplyUnsafe(x).negate(); // [x²]P - [x]Ψ(P)\n            t3 = t3.add(t2); // Ψ²(2P) - Ψ(P) + [x²]P - [x]Ψ(P)\n            t3 = t3.subtract(t1); // Ψ²(2P) - Ψ(P) + [x²]P - [x]Ψ(P) + [x]P\n            const Q = t3.subtract(P); // Ψ²(2P) - Ψ(P) + [x²]P - [x]Ψ(P) + [x]P - 1P\n            return Q; // [x²-x-1]P + [x-1]Ψ(P) + Ψ²(2P)\n        },\n        fromBytes: (bytes) => {\n            const { compressed, infinity, sort, value } = parseMask(bytes);\n            if ((!compressed && !infinity && sort) || // 00100000\n                (!compressed && infinity && sort) || // 01100000\n                (sort && infinity && compressed) // 11100000\n            ) {\n                throw new Error('invalid encoding flag: ' + (bytes[0] & 224));\n            }\n            const L = Fp.BYTES;\n            const slc = (b, from, to) => bytesToNumberBE(b.slice(from, to));\n            if (value.length === 96 && compressed) {\n                const b = bls12_381.params.G2b;\n                const P = Fp.ORDER;\n                if (infinity) {\n                    // check that all bytes are 0\n                    if (value.reduce((p, c) => (p !== 0 ? c + 1 : c), 0) > 0) {\n                        throw new Error('invalid compressed G2 point');\n                    }\n                    return { x: Fp2.ZERO, y: Fp2.ZERO };\n                }\n                const x_1 = slc(value, 0, L);\n                const x_0 = slc(value, L, 2 * L);\n                const x = Fp2.create({ c0: Fp.create(x_0), c1: Fp.create(x_1) });\n                const right = Fp2.add(Fp2.pow(x, _3n), b); // y² = x³ + 4 * (u+1) = x³ + b\n                let y = Fp2.sqrt(right);\n                const Y_bit = y.c1 === _0n ? (y.c0 * _2n) / P : (y.c1 * _2n) / P ? _1n : _0n;\n                y = sort && Y_bit > 0 ? y : Fp2.neg(y);\n                return { x, y };\n            }\n            else if (value.length === 192 && !compressed) {\n                if (infinity) {\n                    if (value.reduce((p, c) => (p !== 0 ? c + 1 : c), 0) > 0) {\n                        throw new Error('invalid uncompressed G2 point');\n                    }\n                    return { x: Fp2.ZERO, y: Fp2.ZERO };\n                }\n                const x1 = slc(value, 0, L);\n                const x0 = slc(value, L, 2 * L);\n                const y1 = slc(value, 2 * L, 3 * L);\n                const y0 = slc(value, 3 * L, 4 * L);\n                return { x: Fp2.fromBigTuple([x0, x1]), y: Fp2.fromBigTuple([y0, y1]) };\n            }\n            else {\n                throw new Error('invalid point G2, expected 96/192 bytes');\n            }\n        },\n        toBytes: (c, point, isCompressed) => {\n            const { BYTES: len, ORDER: P } = Fp;\n            const isZero = point.equals(c.ZERO);\n            const { x, y } = point.toAffine();\n            if (isCompressed) {\n                if (isZero)\n                    return concatB(COMPRESSED_ZERO, numberToBytesBE(_0n, len));\n                const flag = Boolean(y.c1 === _0n ? (y.c0 * _2n) / P : (y.c1 * _2n) / P);\n                return concatB(setMask(numberToBytesBE(x.c1, len), { compressed: true, sort: flag }), numberToBytesBE(x.c0, len));\n            }\n            else {\n                if (isZero)\n                    return concatB(new Uint8Array([0x40]), new Uint8Array(4 * len - 1)); // bytes[0] |= 1 << 6;\n                const { re: x0, im: x1 } = Fp2.reim(x);\n                const { re: y0, im: y1 } = Fp2.reim(y);\n                return concatB(numberToBytesBE(x1, len), numberToBytesBE(x0, len), numberToBytesBE(y1, len), numberToBytesBE(y0, len));\n            }\n        },\n        Signature: {\n            // TODO: Optimize, it's very slow because of sqrt.\n            fromHex(hex) {\n                const { infinity, sort, value } = parseMask(ensureBytes('signatureHex', hex));\n                const P = Fp.ORDER;\n                const half = value.length / 2;\n                if (half !== 48 && half !== 96)\n                    throw new Error('invalid compressed signature length, must be 96 or 192');\n                const z1 = bytesToNumberBE(value.slice(0, half));\n                const z2 = bytesToNumberBE(value.slice(half));\n                // Indicates the infinity point\n                if (infinity)\n                    return bls12_381.G2.ProjectivePoint.ZERO;\n                const x1 = Fp.create(z1 & Fp.MASK);\n                const x2 = Fp.create(z2);\n                const x = Fp2.create({ c0: x2, c1: x1 });\n                const y2 = Fp2.add(Fp2.pow(x, _3n), bls12_381.params.G2b); // y² = x³ + 4\n                // The slow part\n                let y = Fp2.sqrt(y2);\n                if (!y)\n                    throw new Error('Failed to find a square root');\n                // Choose the y whose leftmost bit of the imaginary part is equal to the a_flag1\n                // If y1 happens to be zero, then use the bit of y0\n                const { re: y0, im: y1 } = Fp2.reim(y);\n                const aflag1 = BigInt(sort);\n                const isGreater = y1 > _0n && (y1 * _2n) / P !== aflag1;\n                const isZero = y1 === _0n && (y0 * _2n) / P !== aflag1;\n                if (isGreater || isZero)\n                    y = Fp2.neg(y);\n                const point = bls12_381.G2.ProjectivePoint.fromAffine({ x, y });\n                point.assertValidity();\n                return point;\n            },\n            toRawBytes(point) {\n                return signatureG2ToRawBytes(point);\n            },\n            toHex(point) {\n                return bytesToHex(signatureG2ToRawBytes(point));\n            },\n        },\n    },\n    params: {\n        ateLoopSize: BLS_X, // The BLS parameter x for BLS12-381\n        r: Fr.ORDER, // order; z⁴ − z² + 1; CURVE.n from other curves\n        xNegative: true,\n        twistType: 'multiplicative',\n    },\n    htfDefaults,\n    hash: sha256,\n    randomBytes,\n});\n//# sourceMappingURL=bls12-381.js.map","import { bls12_381 } from '@noble/curves/bls12-381';\nimport { toHex } from './buffer';\nexport let verify;\n/**\n *\n * @param pk primary key: Uint8Array\n * @param sig signature: Uint8Array\n * @param msg message: Uint8Array\n * @returns boolean\n */\nexport function blsVerify(pk, sig, msg) {\n    const primaryKey = typeof pk === 'string' ? pk : toHex(pk);\n    const signature = typeof sig === 'string' ? sig : toHex(sig);\n    const message = typeof msg === 'string' ? msg : toHex(msg);\n    return bls12_381.verifyShortSignature(signature, message, primaryKey);\n}\n//# sourceMappingURL=bls.js.map","import { PipeArrayBuffer, lebDecode } from '@dfinity/candid';\nexport const decodeLeb128 = (buf) => {\n    return lebDecode(new PipeArrayBuffer(buf));\n};\n// time is a LEB128-encoded Nat\nexport const decodeTime = (buf) => {\n    const decoded = decodeLeb128(buf);\n    // nanoseconds to milliseconds\n    return new Date(Number(decoded) / 1000000);\n};\n//# sourceMappingURL=leb.js.map","import * as cbor from './cbor';\nimport { AgentError } from './errors';\nimport { hash } from './request_id';\nimport { bufEquals, concat, fromHex, toHex } from './utils/buffer';\nimport { Principal } from '@dfinity/principal';\nimport * as bls from './utils/bls';\nimport { decodeTime } from './utils/leb';\n/**\n * A certificate may fail verification with respect to the provided public key\n */\nexport class CertificateVerificationError extends AgentError {\n    constructor(reason) {\n        super(`Invalid certificate: ${reason}`);\n    }\n}\nexport var NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"Empty\"] = 0] = \"Empty\";\n    NodeType[NodeType[\"Fork\"] = 1] = \"Fork\";\n    NodeType[NodeType[\"Labeled\"] = 2] = \"Labeled\";\n    NodeType[NodeType[\"Leaf\"] = 3] = \"Leaf\";\n    NodeType[NodeType[\"Pruned\"] = 4] = \"Pruned\";\n})(NodeType || (NodeType = {}));\n/**\n * Make a human readable string out of a hash tree.\n * @param tree\n */\nexport function hashTreeToString(tree) {\n    const indent = (s) => s\n        .split('\\n')\n        .map(x => '  ' + x)\n        .join('\\n');\n    function labelToString(label) {\n        const decoder = new TextDecoder(undefined, { fatal: true });\n        try {\n            return JSON.stringify(decoder.decode(label));\n        }\n        catch (e) {\n            return `data(...${label.byteLength} bytes)`;\n        }\n    }\n    switch (tree[0]) {\n        case NodeType.Empty:\n            return '()';\n        case NodeType.Fork: {\n            if (tree[1] instanceof Array && tree[2] instanceof ArrayBuffer) {\n                const left = hashTreeToString(tree[1]);\n                const right = hashTreeToString(tree[2]);\n                return `sub(\\n left:\\n${indent(left)}\\n---\\n right:\\n${indent(right)}\\n)`;\n            }\n            else {\n                throw new Error('Invalid tree structure for fork');\n            }\n        }\n        case NodeType.Labeled: {\n            if (tree[1] instanceof ArrayBuffer && tree[2] instanceof ArrayBuffer) {\n                const label = labelToString(tree[1]);\n                const sub = hashTreeToString(tree[2]);\n                return `label(\\n label:\\n${indent(label)}\\n sub:\\n${indent(sub)}\\n)`;\n            }\n            else {\n                throw new Error('Invalid tree structure for labeled');\n            }\n        }\n        case NodeType.Leaf: {\n            if (!tree[1]) {\n                throw new Error('Invalid tree structure for leaf');\n            }\n            else if (Array.isArray(tree[1])) {\n                return JSON.stringify(tree[1]);\n            }\n            return `leaf(...${tree[1].byteLength} bytes)`;\n        }\n        case NodeType.Pruned: {\n            if (!tree[1]) {\n                throw new Error('Invalid tree structure for pruned');\n            }\n            else if (Array.isArray(tree[1])) {\n                return JSON.stringify(tree[1]);\n            }\n            return `pruned(${toHex(new Uint8Array(tree[1]))}`;\n        }\n        default: {\n            return `unknown(${JSON.stringify(tree[0])})`;\n        }\n    }\n}\nfunction isBufferGreaterThan(a, b) {\n    const a8 = new Uint8Array(a);\n    const b8 = new Uint8Array(b);\n    for (let i = 0; i < a8.length; i++) {\n        if (a8[i] > b8[i]) {\n            return true;\n        }\n    }\n    return false;\n}\nexport class Certificate {\n    constructor(certificate, _rootKey, _canisterId, _blsVerify, \n    // Default to 5 minutes\n    _maxAgeInMinutes = 5) {\n        this._rootKey = _rootKey;\n        this._canisterId = _canisterId;\n        this._blsVerify = _blsVerify;\n        this._maxAgeInMinutes = _maxAgeInMinutes;\n        this.cert = cbor.decode(new Uint8Array(certificate));\n    }\n    /**\n     * Create a new instance of a certificate, automatically verifying it. Throws a\n     * CertificateVerificationError if the certificate cannot be verified.\n     * @constructs  Certificate\n     * @param {CreateCertificateOptions} options {@link CreateCertificateOptions}\n     * @param {ArrayBuffer} options.certificate The bytes of the certificate\n     * @param {ArrayBuffer} options.rootKey The root key to verify against\n     * @param {Principal} options.canisterId The effective or signing canister ID\n     * @param {number} options.maxAgeInMinutes The maximum age of the certificate in minutes. Default is 5 minutes.\n     * @throws {CertificateVerificationError}\n     */\n    static async create(options) {\n        const cert = Certificate.createUnverified(options);\n        await cert.verify();\n        return cert;\n    }\n    static createUnverified(options) {\n        let blsVerify = options.blsVerify;\n        if (!blsVerify) {\n            blsVerify = bls.blsVerify;\n        }\n        return new Certificate(options.certificate, options.rootKey, options.canisterId, blsVerify, options.maxAgeInMinutes);\n    }\n    lookup(path) {\n        // constrain the type of the result, so that empty HashTree is undefined\n        return lookup_path(path, this.cert.tree);\n    }\n    lookup_label(label) {\n        return this.lookup([label]);\n    }\n    async verify() {\n        const rootHash = await reconstruct(this.cert.tree);\n        const derKey = await this._checkDelegationAndGetKey(this.cert.delegation);\n        const sig = this.cert.signature;\n        const key = extractDER(derKey);\n        const msg = concat(domain_sep('ic-state-root'), rootHash);\n        let sigVer = false;\n        const lookupTime = lookupResultToBuffer(this.lookup(['time']));\n        if (!lookupTime) {\n            // Should never happen - time is always present in IC certificates\n            throw new CertificateVerificationError('Certificate does not contain a time');\n        }\n        const FIVE_MINUTES_IN_MSEC = 5 * 60 * 1000;\n        const MAX_AGE_IN_MSEC = this._maxAgeInMinutes * 60 * 1000;\n        const now = Date.now();\n        const earliestCertificateTime = now - MAX_AGE_IN_MSEC;\n        const fiveMinutesFromNow = now + FIVE_MINUTES_IN_MSEC;\n        const certTime = decodeTime(lookupTime);\n        if (certTime.getTime() < earliestCertificateTime) {\n            throw new CertificateVerificationError(`Certificate is signed more than ${this._maxAgeInMinutes} minutes in the past. Certificate time: ` +\n                certTime.toISOString() +\n                ' Current time: ' +\n                new Date(now).toISOString());\n        }\n        else if (certTime.getTime() > fiveMinutesFromNow) {\n            throw new CertificateVerificationError('Certificate is signed more than 5 minutes in the future. Certificate time: ' +\n                certTime.toISOString() +\n                ' Current time: ' +\n                new Date(now).toISOString());\n        }\n        try {\n            sigVer = await this._blsVerify(new Uint8Array(key), new Uint8Array(sig), new Uint8Array(msg));\n        }\n        catch (err) {\n            sigVer = false;\n        }\n        if (!sigVer) {\n            throw new CertificateVerificationError('Signature verification failed');\n        }\n    }\n    async _checkDelegationAndGetKey(d) {\n        if (!d) {\n            return this._rootKey;\n        }\n        const cert = await Certificate.createUnverified({\n            certificate: d.certificate,\n            rootKey: this._rootKey,\n            canisterId: this._canisterId,\n            blsVerify: this._blsVerify,\n            // Do not check max age for delegation certificates\n            maxAgeInMinutes: Infinity,\n        });\n        if (cert.cert.delegation) {\n            throw new CertificateVerificationError('Delegation certificates cannot be nested');\n        }\n        await cert.verify();\n        const canisterInRange = check_canister_ranges({\n            canisterId: this._canisterId,\n            subnetId: Principal.fromUint8Array(new Uint8Array(d.subnet_id)),\n            tree: cert.cert.tree,\n        });\n        if (!canisterInRange) {\n            throw new CertificateVerificationError(`Canister ${this._canisterId} not in range of delegations for subnet 0x${toHex(d.subnet_id)}`);\n        }\n        const publicKeyLookup = lookupResultToBuffer(cert.lookup(['subnet', d.subnet_id, 'public_key']));\n        if (!publicKeyLookup) {\n            throw new Error(`Could not find subnet key for subnet 0x${toHex(d.subnet_id)}`);\n        }\n        return publicKeyLookup;\n    }\n}\nconst DER_PREFIX = fromHex('308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100');\nconst KEY_LENGTH = 96;\nfunction extractDER(buf) {\n    const expectedLength = DER_PREFIX.byteLength + KEY_LENGTH;\n    if (buf.byteLength !== expectedLength) {\n        throw new TypeError(`BLS DER-encoded public key must be ${expectedLength} bytes long`);\n    }\n    const prefix = buf.slice(0, DER_PREFIX.byteLength);\n    if (!bufEquals(prefix, DER_PREFIX)) {\n        throw new TypeError(`BLS DER-encoded public key is invalid. Expect the following prefix: ${DER_PREFIX}, but get ${prefix}`);\n    }\n    return buf.slice(DER_PREFIX.byteLength);\n}\n/**\n * utility function to constrain the type of a path\n * @param {ArrayBuffer | HashTree | undefined} result - the result of a lookup\n * @returns ArrayBuffer or Undefined\n */\nexport function lookupResultToBuffer(result) {\n    if (result.status !== LookupStatus.Found) {\n        return undefined;\n    }\n    if (result.value instanceof ArrayBuffer) {\n        return result.value;\n    }\n    if (result.value instanceof Uint8Array) {\n        return result.value.buffer;\n    }\n    return undefined;\n}\n/**\n * @param t\n */\nexport async function reconstruct(t) {\n    switch (t[0]) {\n        case NodeType.Empty:\n            return hash(domain_sep('ic-hashtree-empty'));\n        case NodeType.Pruned:\n            return t[1];\n        case NodeType.Leaf:\n            return hash(concat(domain_sep('ic-hashtree-leaf'), t[1]));\n        case NodeType.Labeled:\n            return hash(concat(domain_sep('ic-hashtree-labeled'), t[1], await reconstruct(t[2])));\n        case NodeType.Fork:\n            return hash(concat(domain_sep('ic-hashtree-fork'), await reconstruct(t[1]), await reconstruct(t[2])));\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction domain_sep(s) {\n    const len = new Uint8Array([s.length]);\n    const str = new TextEncoder().encode(s);\n    return concat(len, str);\n}\nexport var LookupStatus;\n(function (LookupStatus) {\n    LookupStatus[\"Unknown\"] = \"unknown\";\n    LookupStatus[\"Absent\"] = \"absent\";\n    LookupStatus[\"Found\"] = \"found\";\n})(LookupStatus || (LookupStatus = {}));\nvar LabelLookupStatus;\n(function (LabelLookupStatus) {\n    LabelLookupStatus[\"Less\"] = \"less\";\n    LabelLookupStatus[\"Greater\"] = \"greater\";\n})(LabelLookupStatus || (LabelLookupStatus = {}));\nexport function lookup_path(path, tree) {\n    if (path.length === 0) {\n        switch (tree[0]) {\n            case NodeType.Leaf: {\n                if (!tree[1]) {\n                    throw new Error('Invalid tree structure for leaf');\n                }\n                if (tree[1] instanceof ArrayBuffer) {\n                    return {\n                        status: LookupStatus.Found,\n                        value: tree[1],\n                    };\n                }\n                if (tree[1] instanceof Uint8Array) {\n                    return {\n                        status: LookupStatus.Found,\n                        value: tree[1].buffer,\n                    };\n                }\n                return {\n                    status: LookupStatus.Found,\n                    value: tree[1],\n                };\n            }\n            default: {\n                return {\n                    status: LookupStatus.Found,\n                    value: tree,\n                };\n            }\n        }\n    }\n    const label = typeof path[0] === 'string' ? new TextEncoder().encode(path[0]) : path[0];\n    const lookupResult = find_label(label, tree);\n    switch (lookupResult.status) {\n        case LookupStatus.Found: {\n            return lookup_path(path.slice(1), lookupResult.value);\n        }\n        case LabelLookupStatus.Greater:\n        case LabelLookupStatus.Less: {\n            return {\n                status: LookupStatus.Absent,\n            };\n        }\n        default: {\n            return lookupResult;\n        }\n    }\n}\n/**\n * If the tree is a fork, flatten it into an array of trees\n * @param t - the tree to flatten\n * @returns HashTree[] - the flattened tree\n */\nexport function flatten_forks(t) {\n    switch (t[0]) {\n        case NodeType.Empty:\n            return [];\n        case NodeType.Fork:\n            return flatten_forks(t[1]).concat(flatten_forks(t[2]));\n        default:\n            return [t];\n    }\n}\nexport function find_label(label, tree) {\n    switch (tree[0]) {\n        // if we have a labelled node, compare the node's label to the one we are\n        // looking for\n        case NodeType.Labeled:\n            // if the label we're searching for is greater than this node's label,\n            // we need to keep searching\n            if (isBufferGreaterThan(label, tree[1])) {\n                return {\n                    status: LabelLookupStatus.Greater,\n                };\n            }\n            // if the label we're searching for is equal this node's label, we can\n            // stop searching and return the found node\n            if (bufEquals(label, tree[1])) {\n                return {\n                    status: LookupStatus.Found,\n                    value: tree[2],\n                };\n            }\n            // if the label we're searching for is not greater than or equal to this\n            // node's label, then it's less than this node's label, and we can stop\n            // searching because we've looked too far\n            return {\n                status: LabelLookupStatus.Less,\n            };\n        // if we have a fork node, we need to search both sides, starting with the left\n        case NodeType.Fork:\n            // search in the left node\n            const leftLookupResult = find_label(label, tree[1]);\n            switch (leftLookupResult.status) {\n                // if the label we're searching for is greater than the left node lookup,\n                // we need to search the right node\n                case LabelLookupStatus.Greater: {\n                    const rightLookupResult = find_label(label, tree[2]);\n                    // if the label we're searching for is less than the right node lookup,\n                    // then we can stop searching and say that the label is provably Absent\n                    if (rightLookupResult.status === LabelLookupStatus.Less) {\n                        return {\n                            status: LookupStatus.Absent,\n                        };\n                    }\n                    // if the label we're searching for is less than or equal to the right\n                    // node lookup, then we let the caller handle it\n                    return rightLookupResult;\n                }\n                // if the left node returns an uncertain result, we need to search the\n                // right node\n                case LookupStatus.Unknown: {\n                    let rightLookupResult = find_label(label, tree[2]);\n                    // if the label we're searching for is less than the right node lookup,\n                    // then we also need to return an uncertain result\n                    if (rightLookupResult.status === LabelLookupStatus.Less) {\n                        return {\n                            status: LookupStatus.Unknown,\n                        };\n                    }\n                    // if the label we're searching for is less than or equal to the right\n                    // node lookup, then we let the caller handle it\n                    return rightLookupResult;\n                }\n                // if the label we're searching for is not greater than the left node\n                // lookup, or the result is not uncertain, we stop searching and return\n                // whatever the result of the left node lookup was, which can be either\n                // Found or Absent\n                default: {\n                    return leftLookupResult;\n                }\n            }\n        // if we encounter a Pruned node, we can't know for certain if the label\n        // we're searching for is present or not\n        case NodeType.Pruned:\n            return {\n                status: LookupStatus.Unknown,\n            };\n        // if the current node is Empty, or a Leaf, we can stop searching because\n        // we know for sure that the label we're searching for is not present\n        default:\n            return {\n                status: LookupStatus.Absent,\n            };\n    }\n}\n/**\n * Check if a canister falls within a range of canisters\n * @param canisterId Principal\n * @param ranges [Principal, Principal][]\n * @returns\n */\nexport function check_canister_ranges(params) {\n    const { canisterId, subnetId, tree } = params;\n    const rangeLookup = lookup_path(['subnet', subnetId.toUint8Array(), 'canister_ranges'], tree);\n    if (rangeLookup.status !== LookupStatus.Found || !(rangeLookup.value instanceof ArrayBuffer)) {\n        throw new Error(`Could not find canister ranges for subnet ${subnetId}`);\n    }\n    const ranges_arr = cbor.decode(rangeLookup.value);\n    const ranges = ranges_arr.map(v => [\n        Principal.fromUint8Array(v[0]),\n        Principal.fromUint8Array(v[1]),\n    ]);\n    const canisterInRange = ranges.some(r => r[0].ltEq(canisterId) && r[1].gtEq(canisterId));\n    return canisterInRange;\n}\n//# sourceMappingURL=certificate.js.map","/** @module CanisterStatus */\nimport { Principal } from '@dfinity/principal';\nimport { AgentError } from '../errors';\nimport { Certificate, flatten_forks, check_canister_ranges, LookupStatus, lookup_path, lookupResultToBuffer, } from '../certificate';\nimport { toHex } from '../utils/buffer';\nimport * as Cbor from '../cbor';\nimport { decodeLeb128, decodeTime } from '../utils/leb';\n/**\n * Interface to define a custom path. Nested paths will be represented as individual buffers, and can be created from text using TextEncoder.\n * @param {string} key the key to use to access the returned value in the canisterStatus map\n * @param {ArrayBuffer[]} path the path to the desired value, represented as an array of buffers\n * @param {string} decodeStrategy the strategy to use to decode the returned value\n */\nexport class CustomPath {\n    constructor(key, path, decodeStrategy) {\n        this.key = key;\n        this.path = path;\n        this.decodeStrategy = decodeStrategy;\n    }\n}\n/**\n * Request information in the request_status state tree for a given canister.\n * Can be used to request information about the canister's controllers, time, module hash, candid interface, and more.\n * @param {CanisterStatusOptions} options {@link CanisterStatusOptions}\n * @param {CanisterStatusOptions['canisterId']} options.canisterId {@link Principal}\n * @param {CanisterStatusOptions['agent']} options.agent {@link HttpAgent} optional authenticated agent to use to make the canister request. Useful for accessing private metadata under icp:private\n * @param {CanisterStatusOptions['paths']} options.paths {@link Path[]}\n * @returns {Status} object populated with data from the requested paths\n * @example\n * const status = await canisterStatus({\n *   paths: ['controllers', 'candid'],\n *   ...options\n * });\n *\n * const controllers = status.get('controllers');\n */\nexport const request = async (options) => {\n    const { agent, paths } = options;\n    const canisterId = Principal.from(options.canisterId);\n    const uniquePaths = [...new Set(paths)];\n    // Map path options to their correct formats\n    const encodedPaths = uniquePaths.map(path => {\n        return encodePath(path, canisterId);\n    });\n    const status = new Map();\n    const promises = uniquePaths.map((path, index) => {\n        return (async () => {\n            var _a;\n            try {\n                const response = await agent.readState(canisterId, {\n                    paths: [encodedPaths[index]],\n                });\n                const cert = await Certificate.create({\n                    certificate: response.certificate,\n                    rootKey: agent.rootKey,\n                    canisterId: canisterId,\n                });\n                const lookup = (cert, path) => {\n                    if (path === 'subnet') {\n                        const data = fetchNodeKeys(response.certificate, canisterId, agent.rootKey);\n                        return {\n                            path: path,\n                            data,\n                        };\n                    }\n                    else {\n                        return {\n                            path: path,\n                            data: lookupResultToBuffer(cert.lookup(encodePath(path, canisterId))),\n                        };\n                    }\n                };\n                // must pass in the rootKey if we have no delegation\n                const { path, data } = lookup(cert, uniquePaths[index]);\n                if (!data) {\n                    // Typically, the cert lookup will throw\n                    console.warn(`Expected to find result for path ${path}, but instead found nothing.`);\n                    if (typeof path === 'string') {\n                        status.set(path, null);\n                    }\n                    else {\n                        status.set(path.key, null);\n                    }\n                }\n                else {\n                    switch (path) {\n                        case 'time': {\n                            status.set(path, decodeTime(data));\n                            break;\n                        }\n                        case 'controllers': {\n                            status.set(path, decodeControllers(data));\n                            break;\n                        }\n                        case 'module_hash': {\n                            status.set(path, decodeHex(data));\n                            break;\n                        }\n                        case 'subnet': {\n                            status.set(path, data);\n                            break;\n                        }\n                        case 'candid': {\n                            status.set(path, new TextDecoder().decode(data));\n                            break;\n                        }\n                        default: {\n                            // Check for CustomPath signature\n                            if (typeof path !== 'string' && 'key' in path && 'path' in path) {\n                                switch (path.decodeStrategy) {\n                                    case 'raw':\n                                        status.set(path.key, data);\n                                        break;\n                                    case 'leb128': {\n                                        status.set(path.key, decodeLeb128(data));\n                                        break;\n                                    }\n                                    case 'cbor': {\n                                        status.set(path.key, decodeCbor(data));\n                                        break;\n                                    }\n                                    case 'hex': {\n                                        status.set(path.key, decodeHex(data));\n                                        break;\n                                    }\n                                    case 'utf-8': {\n                                        status.set(path.key, decodeUtf8(data));\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            catch (error) {\n                // Break on signature verification errors\n                if ((_a = error === null || error === void 0 ? void 0 : error.message) === null || _a === void 0 ? void 0 : _a.includes('Invalid certificate')) {\n                    throw new AgentError(error.message);\n                }\n                if (typeof path !== 'string' && 'key' in path && 'path' in path) {\n                    status.set(path.key, null);\n                }\n                else {\n                    status.set(path, null);\n                }\n                console.group();\n                console.warn(`Expected to find result for path ${path}, but instead found nothing.`);\n                console.warn(error);\n                console.groupEnd();\n            }\n        })();\n    });\n    // Fetch all values separately, as each option can fail\n    await Promise.all(promises);\n    return status;\n};\nexport const fetchNodeKeys = (certificate, canisterId, root_key) => {\n    if (!canisterId._isPrincipal) {\n        throw new Error('Invalid canisterId');\n    }\n    const cert = Cbor.decode(new Uint8Array(certificate));\n    const tree = cert.tree;\n    let delegation = cert.delegation;\n    let subnetId;\n    if (delegation && delegation.subnet_id) {\n        subnetId = Principal.fromUint8Array(new Uint8Array(delegation.subnet_id));\n    }\n    // On local replica, with System type subnet, there is no delegation\n    else if (!delegation && typeof root_key !== 'undefined') {\n        subnetId = Principal.selfAuthenticating(new Uint8Array(root_key));\n        delegation = {\n            subnet_id: subnetId.toUint8Array(),\n            certificate: new ArrayBuffer(0),\n        };\n    }\n    // otherwise use default NNS subnet id\n    else {\n        subnetId = Principal.selfAuthenticating(Principal.fromText('tdb26-jop6k-aogll-7ltgs-eruif-6kk7m-qpktf-gdiqx-mxtrf-vb5e6-eqe').toUint8Array());\n        delegation = {\n            subnet_id: subnetId.toUint8Array(),\n            certificate: new ArrayBuffer(0),\n        };\n    }\n    const canisterInRange = check_canister_ranges({ canisterId, subnetId, tree });\n    if (!canisterInRange) {\n        throw new Error('Canister not in range');\n    }\n    const subnetLookupResult = lookup_path(['subnet', delegation.subnet_id, 'node'], tree);\n    if (subnetLookupResult.status !== LookupStatus.Found) {\n        throw new Error('Node not found');\n    }\n    if (subnetLookupResult.value instanceof ArrayBuffer) {\n        throw new Error('Invalid node tree');\n    }\n    const nodeForks = flatten_forks(subnetLookupResult.value);\n    const nodeKeys = new Map();\n    nodeForks.forEach(fork => {\n        const node_id = Principal.from(new Uint8Array(fork[1])).toText();\n        const publicKeyLookupResult = lookup_path(['public_key'], fork[2]);\n        if (publicKeyLookupResult.status !== LookupStatus.Found) {\n            throw new Error('Public key not found');\n        }\n        const derEncodedPublicKey = publicKeyLookupResult.value;\n        if (derEncodedPublicKey.byteLength !== 44) {\n            throw new Error('Invalid public key length');\n        }\n        else {\n            nodeKeys.set(node_id, derEncodedPublicKey);\n        }\n    });\n    return {\n        subnetId: Principal.fromUint8Array(new Uint8Array(delegation.subnet_id)).toText(),\n        nodeKeys,\n    };\n};\nexport const encodePath = (path, canisterId) => {\n    const encoder = new TextEncoder();\n    const encode = (arg) => {\n        return new DataView(encoder.encode(arg).buffer).buffer;\n    };\n    const canisterBuffer = new DataView(canisterId.toUint8Array().buffer).buffer;\n    switch (path) {\n        case 'time':\n            return [encode('time')];\n        case 'controllers':\n            return [encode('canister'), canisterBuffer, encode('controllers')];\n        case 'module_hash':\n            return [encode('canister'), canisterBuffer, encode('module_hash')];\n        case 'subnet':\n            return [encode('subnet')];\n        case 'candid':\n            return [encode('canister'), canisterBuffer, encode('metadata'), encode('candid:service')];\n        default: {\n            // Check for CustomPath signature\n            if ('key' in path && 'path' in path) {\n                // For simplified metadata queries\n                if (typeof path['path'] === 'string' || path['path'] instanceof ArrayBuffer) {\n                    const metaPath = path.path;\n                    const encoded = typeof metaPath === 'string' ? encode(metaPath) : metaPath;\n                    return [encode('canister'), canisterBuffer, encode('metadata'), encoded];\n                    // For non-metadata, return the provided custompath\n                }\n                else {\n                    return path['path'];\n                }\n            }\n        }\n    }\n    throw new Error(`An unexpeected error was encountered while encoding your path for canister status. Please ensure that your path, ${path} was formatted correctly.`);\n};\nconst decodeHex = (buf) => {\n    return toHex(buf);\n};\nconst decodeCbor = (buf) => {\n    return Cbor.decode(buf);\n};\nconst decodeUtf8 = (buf) => {\n    return new TextDecoder().decode(buf);\n};\n// Controllers are CBOR-encoded buffers\nconst decodeControllers = (buf) => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const controllersRaw = decodeCbor(buf);\n    return controllersRaw.map((buf) => {\n        return Principal.fromUint8Array(new Uint8Array(buf));\n    });\n};\n//# sourceMappingURL=index.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n/**\n * BigUint64Array is too slow as per 2024, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n/**\n * SHA2-512 a.k.a. sha512 and sha384. It is slower than sha256 in js because u64 operations are slow.\n *\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [the paper on truncated SHA512/256](https://eprint.iacr.org/2010/548.pdf).\n * @module\n */\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexport class SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nexport class SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nexport class SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\n/** SHA2-512 hash function. */\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\n/** SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks. */\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\n/** SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks. */\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\n/** SHA2-384 hash function. */\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/**\n * Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y².\n * For design rationale of types / exports, see weierstrass module documentation.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { validateBasic, wNAF, pippenger, } from './curve.js';\nimport { mod, Field } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes, memoized, abool } from './utils.js';\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n/**\n * Creates Twisted Edwards curve with EdDSA signatures.\n * @example\n * import { Field } from '@noble/curves/abstract/modular';\n * // Before that, define BigInt-s: a, d, p, n, Gx, Gy, h\n * const curve = twistedEdwards({ a, d, Fp: Field(p), n, Gx, Gy, h })\n */\nexport function twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    // Important:\n    // There are some places where Fp.BYTES is used instead of nByteLength.\n    // So far, everything has been tested with curves of Fp.BYTES == nByteLength.\n    // TODO: test and find curves which behave otherwise.\n    const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n    const modP = Fp.create; // Function overrides\n    const Fn = Field(CURVE.n, CURVE.nBitLength);\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            abool('phflag', phflag);\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    // 0 <= n < MASK\n    // Coordinates larger than Fp.ORDER are allowed for zip215\n    function aCoordinate(title, n) {\n        ut.aInRange('coordinate ' + title, n, _0n, MASK);\n    }\n    function assertPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Converts Extended point to default (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    const toAffineMemo = memoized((p, iz) => {\n        const { ex: x, ey: y, ez: z } = p;\n        const is0 = p.is0();\n        if (iz == null)\n            iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n        const ax = modP(x * iz);\n        const ay = modP(y * iz);\n        const zz = modP(z * iz);\n        if (is0)\n            return { x: _0n, y: _1n };\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return { x: ax, y: ay };\n    });\n    const assertValidMemo = memoized((p) => {\n        const { a, d } = CURVE;\n        if (p.is0())\n            throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n        // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n        // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n        const { ex: X, ey: Y, ez: Z, et: T } = p;\n        const X2 = modP(X * X); // X²\n        const Y2 = modP(Y * Y); // Y²\n        const Z2 = modP(Z * Z); // Z²\n        const Z4 = modP(Z2 * Z2); // Z⁴\n        const aX2 = modP(X2 * a); // aX²\n        const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n        const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n        if (left !== right)\n            throw new Error('bad point: equation left != right (1)');\n        // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n        const XY = modP(X * Y);\n        const ZT = modP(Z * T);\n        if (XY !== ZT)\n            throw new Error('bad point: equation left != right (2)');\n        return true;\n    });\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            aCoordinate('x', ex);\n            aCoordinate('y', ey);\n            aCoordinate('z', ez);\n            aCoordinate('t', et);\n            Object.freeze(this);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            aCoordinate('x', x);\n            aCoordinate('y', y);\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // Multiscalar Multiplication\n        static msm(points, scalars) {\n            return pippenger(Point, Fn, points, scalars);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            wnaf.setWindowSize(this, windowSize);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        // Compare one point to another.\n        equals(other) {\n            assertPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            assertPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const n = scalar;\n            ut.aInRange('scalar', n, _1n, CURVE_ORDER); // 1 <= scalar < L\n            const { p, f } = this.wNAF(n);\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        // Accepts optional accumulator to merge with multiply (important for sparse scalars)\n        multiplyUnsafe(scalar, acc = Point.ZERO) {\n            const n = scalar;\n            ut.aInRange('scalar', n, _0n, CURVE_ORDER); // 0 <= scalar < L\n            if (n === _0n)\n                return I;\n            if (this.is0() || n === _1n)\n                return this;\n            return wnaf.wNAFCachedUnsafe(this, n, Point.normalizeZ, acc);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            return toAffineMemo(this, iz);\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n            abool('zip215', zip215);\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = ut.bytesToNumberLE(normed);\n            // zip215=true is good for consensus-critical apps. =false follows RFC8032 / NIST186-5.\n            // RFC8032 prohibits >= p, but ZIP215 doesn't\n            // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n            // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n            const max = zip215 ? MASK : Fp.ORDER;\n            ut.aInRange('pointHex.y', y, _0n, max);\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('Point.fromHex: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = wNAF(Point, nByteLength * 8);\n    function modN(a) {\n        return mod(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(ut.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = Fp.BYTES;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = ut.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        ut.aInRange('signature.s', s, _0n, CURVE_ORDER); // 0 <= s < l\n        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n        return ensureBytes('result', res, Fp.BYTES * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    /**\n     * Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n     * An extended group equation is checked.\n     */\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = ensureBytes('message', msg);\n        publicKey = ensureBytes('publicKey', publicKey, len);\n        if (zip215 !== undefined)\n            abool('zip215', zip215);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n        let A, R, SB;\n        try {\n            // zip215=true is good for consensus-critical apps. =false follows RFC8032 / NIST186-5.\n            // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n            // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false;\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // Extended group equation\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\n//# sourceMappingURL=edwards.js.map","/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { twistedEdwards } from './abstract/edwards.js';\nimport { createHasher, expand_message_xmd, } from './abstract/hash-to-curve.js';\nimport { Field, FpSqrtEven, isNegativeLE, mod, pow2 } from './abstract/modular.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { pippenger } from './abstract/curve.js';\nimport { bytesToHex, bytesToNumberLE, ensureBytes, equalBytes, numberToBytesLE, } from './abstract/utils.js';\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = /* @__PURE__ */ BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _5n = BigInt(5), _8n = BigInt(8);\nfunction ed25519_pow_2_252_3(x) {\n    // prettier-ignore\n    const _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = /* @__PURE__ */ (() => Field(ED25519_P, undefined, true))();\nconst ed25519Defaults = /* @__PURE__ */ (() => ({\n    // Param: a\n    a: BigInt(-1), // Fp.create(-1) is proper; our way still works and is faster\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n**252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: _8n,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512,\n    randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n}))();\n/**\n * ed25519 curve with EdDSA signatures.\n * @example\n * import { ed25519 } from '@noble/curves/ed25519';\n * const priv = ed25519.utils.randomPrivateKey();\n * const pub = ed25519.getPublicKey(priv);\n * const msg = new TextEncoder().encode('hello');\n * const sig = ed25519.sign(msg, priv);\n * ed25519.verify(sig, msg, pub); // Default mode: follows ZIP215\n * ed25519.verify(sig, msg, pub, { zip215: false }); // RFC8032 / FIPS 186-5\n */\nexport const ed25519 = /* @__PURE__ */ (() => twistedEdwards(ed25519Defaults))();\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexport const ed25519ctx = /* @__PURE__ */ (() => twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n}))();\nexport const ed25519ph = /* @__PURE__ */ (() => twistedEdwards(Object.assign({}, ed25519Defaults, {\n    domain: ed25519_domain,\n    prehash: sha512,\n})))();\n/**\n * ECDH using curve25519 aka x25519.\n * @example\n * import { x25519 } from '@noble/curves/ed25519';\n * const priv = 'a546e36bf0527c9d3b16154b82465edd62144c0ac1fc5a18506a2244ba449ac4';\n * const pub = 'e6db6867583030db3594c1a424b15f7c726624ec26b3353b10a903a6d0ab1c4c';\n * x25519.getSharedSecret(priv, pub) === x25519.scalarMult(priv, pub); // aliases\n * x25519.getPublicKey(priv) === x25519.scalarMultBase(priv);\n * x25519.getPublicKey(x25519.utils.randomPrivateKey());\n */\nexport const x25519 = /* @__PURE__ */ (() => montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255, // n is 253 bits\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return mod(pow2(pow_p_5_8, _3n, P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n}))();\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nexport function edwardsToMontgomeryPub(edwardsPub) {\n    const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexport const edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nexport function edwardsToMontgomeryPriv(edwardsPriv) {\n    const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n    return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = /* @__PURE__ */ (() => (Fp.ORDER + _3n) / _8n)(); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = /* @__PURE__ */ (() => Fp.pow(_2n, ELL2_C1))(); // 2. c2 = 2^c1\nconst ELL2_C3 = /* @__PURE__ */ (() => Fp.sqrt(Fp.neg(Fp.ONE)))(); // 3. c3 = sqrt(-1)\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    const ELL2_C4 = (Fp.ORDER - _5n) / _8n; // 4. c4 = (q - 5) / 8       # Integer arithmetic\n    const ELL2_J = BigInt(486662);\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = /* @__PURE__ */ (() => FpSqrtEven(Fp, Fp.neg(BigInt(486664))))(); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst htf = /* @__PURE__ */ (() => createHasher(ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = /* @__PURE__ */ BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = /* @__PURE__ */ BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = /* @__PURE__ */ BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = /* @__PURE__ */ BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = /* @__PURE__ */ BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistPoint(ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-byte output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = ensureBytes('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = ensureBytes('ristrettoHex', hex, 32);\n        const { a, d } = ed25519.CURVE;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    static msm(points, scalars) {\n        const Fn = Field(ed25519.CURVE.n, ed25519.CURVE.nBitLength);\n        return pippenger(RistPoint, Fn, points, scalars);\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if (isNegativeLE(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return numberToBytesLE(s, 32); // 11\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistPoint(this.ep.multiplyUnsafe(scalar));\n    }\n    double() {\n        return new RistPoint(this.ep.double());\n    }\n    negate() {\n        return new RistPoint(this.ep.negate());\n    }\n}\nexport const RistrettoPoint = /* @__PURE__ */ (() => {\n    if (!RistPoint.BASE)\n        RistPoint.BASE = new RistPoint(ed25519.ExtendedPoint.BASE);\n    if (!RistPoint.ZERO)\n        RistPoint.ZERO = new RistPoint(ed25519.ExtendedPoint.ZERO);\n    return RistPoint;\n})();\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nexport const hashToRistretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n    const uniform_bytes = expand_message_xmd(msg, DST, 64, sha512);\n    const P = RistPoint.hashToCurve(uniform_bytes);\n    return P;\n};\nexport const hash_to_ristretto255 = hashToRistretto255; // legacy\n//# sourceMappingURL=ed25519.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ExpirableMap_inner, _ExpirableMap_expirationTime, _a, _b;\n/**\n * A map that expires entries after a given time.\n * Defaults to 10 minutes.\n */\nexport class ExpirableMap {\n    /**\n     * Create a new ExpirableMap.\n     * @param {ExpirableMapOptions<any, any>} options - options for the map.\n     * @param {Iterable<[any, any]>} options.source - an optional source of entries to initialize the map with.\n     * @param {number} options.expirationTime - the time in milliseconds after which entries will expire.\n     */\n    constructor(options = {}) {\n        // Internals\n        _ExpirableMap_inner.set(this, void 0);\n        _ExpirableMap_expirationTime.set(this, void 0);\n        this[_a] = this.entries.bind(this);\n        this[_b] = 'ExpirableMap';\n        const { source = [], expirationTime = 10 * 60 * 1000 } = options;\n        const currentTime = Date.now();\n        __classPrivateFieldSet(this, _ExpirableMap_inner, new Map([...source].map(([key, value]) => [key, { value, timestamp: currentTime }])), \"f\");\n        __classPrivateFieldSet(this, _ExpirableMap_expirationTime, expirationTime, \"f\");\n    }\n    /**\n     * Prune removes all expired entries.\n     */\n    prune() {\n        const currentTime = Date.now();\n        for (const [key, entry] of __classPrivateFieldGet(this, _ExpirableMap_inner, \"f\").entries()) {\n            if (currentTime - entry.timestamp > __classPrivateFieldGet(this, _ExpirableMap_expirationTime, \"f\")) {\n                __classPrivateFieldGet(this, _ExpirableMap_inner, \"f\").delete(key);\n            }\n        }\n        return this;\n    }\n    // Implementing the Map interface\n    /**\n     * Set the value for the given key. Prunes expired entries.\n     * @param key for the entry\n     * @param value of the entry\n     * @returns this\n     */\n    set(key, value) {\n        this.prune();\n        const entry = {\n            value,\n            timestamp: Date.now(),\n        };\n        __classPrivateFieldGet(this, _ExpirableMap_inner, \"f\").set(key, entry);\n        return this;\n    }\n    /**\n     * Get the value associated with the key, if it exists and has not expired.\n     * @param key K\n     * @returns the value associated with the key, or undefined if the key is not present or has expired.\n     */\n    get(key) {\n        const entry = __classPrivateFieldGet(this, _ExpirableMap_inner, \"f\").get(key);\n        if (entry === undefined) {\n            return undefined;\n        }\n        if (Date.now() - entry.timestamp > __classPrivateFieldGet(this, _ExpirableMap_expirationTime, \"f\")) {\n            __classPrivateFieldGet(this, _ExpirableMap_inner, \"f\").delete(key);\n            return undefined;\n        }\n        return entry.value;\n    }\n    /**\n     * Clear all entries.\n     */\n    clear() {\n        __classPrivateFieldGet(this, _ExpirableMap_inner, \"f\").clear();\n    }\n    /**\n     * Entries returns the entries of the map, without the expiration time.\n     * @returns an iterator over the entries of the map.\n     */\n    entries() {\n        const iterator = __classPrivateFieldGet(this, _ExpirableMap_inner, \"f\").entries();\n        const generator = function* () {\n            for (const [key, value] of iterator) {\n                yield [key, value.value];\n            }\n        };\n        return generator();\n    }\n    /**\n     * Values returns the values of the map, without the expiration time.\n     * @returns an iterator over the values of the map.\n     */\n    values() {\n        const iterator = __classPrivateFieldGet(this, _ExpirableMap_inner, \"f\").values();\n        const generator = function* () {\n            for (const value of iterator) {\n                yield value.value;\n            }\n        };\n        return generator();\n    }\n    /**\n     * Keys returns the keys of the map\n     * @returns an iterator over the keys of the map.\n     */\n    keys() {\n        return __classPrivateFieldGet(this, _ExpirableMap_inner, \"f\").keys();\n    }\n    /**\n     * forEach calls the callbackfn on each entry of the map.\n     * @param callbackfn to call on each entry\n     * @param thisArg to use as this when calling the callbackfn\n     */\n    forEach(callbackfn, thisArg) {\n        for (const [key, value] of __classPrivateFieldGet(this, _ExpirableMap_inner, \"f\").entries()) {\n            callbackfn.call(thisArg, value.value, key, this);\n        }\n    }\n    /**\n     * has returns true if the key exists and has not expired.\n     * @param key K\n     * @returns true if the key exists and has not expired.\n     */\n    has(key) {\n        return __classPrivateFieldGet(this, _ExpirableMap_inner, \"f\").has(key);\n    }\n    /**\n     * delete the entry for the given key.\n     * @param key K\n     * @returns true if the key existed and has been deleted.\n     */\n    delete(key) {\n        return __classPrivateFieldGet(this, _ExpirableMap_inner, \"f\").delete(key);\n    }\n    /**\n     * get size of the map.\n     * @returns the size of the map.\n     */\n    get size() {\n        return __classPrivateFieldGet(this, _ExpirableMap_inner, \"f\").size;\n    }\n}\n_ExpirableMap_inner = new WeakMap(), _ExpirableMap_expirationTime = new WeakMap(), _a = Symbol.iterator, _b = Symbol.toStringTag;\n//# sourceMappingURL=expirableMap.js.map","import { bufEquals } from './utils/buffer';\nexport const encodeLenBytes = (len) => {\n    if (len <= 0x7f) {\n        return 1;\n    }\n    else if (len <= 0xff) {\n        return 2;\n    }\n    else if (len <= 0xffff) {\n        return 3;\n    }\n    else if (len <= 0xffffff) {\n        return 4;\n    }\n    else {\n        throw new Error('Length too long (> 4 bytes)');\n    }\n};\nexport const encodeLen = (buf, offset, len) => {\n    if (len <= 0x7f) {\n        buf[offset] = len;\n        return 1;\n    }\n    else if (len <= 0xff) {\n        buf[offset] = 0x81;\n        buf[offset + 1] = len;\n        return 2;\n    }\n    else if (len <= 0xffff) {\n        buf[offset] = 0x82;\n        buf[offset + 1] = len >> 8;\n        buf[offset + 2] = len;\n        return 3;\n    }\n    else if (len <= 0xffffff) {\n        buf[offset] = 0x83;\n        buf[offset + 1] = len >> 16;\n        buf[offset + 2] = len >> 8;\n        buf[offset + 3] = len;\n        return 4;\n    }\n    else {\n        throw new Error('Length too long (> 4 bytes)');\n    }\n};\nexport const decodeLenBytes = (buf, offset) => {\n    if (buf[offset] < 0x80)\n        return 1;\n    if (buf[offset] === 0x80)\n        throw new Error('Invalid length 0');\n    if (buf[offset] === 0x81)\n        return 2;\n    if (buf[offset] === 0x82)\n        return 3;\n    if (buf[offset] === 0x83)\n        return 4;\n    throw new Error('Length too long (> 4 bytes)');\n};\nexport const decodeLen = (buf, offset) => {\n    const lenBytes = decodeLenBytes(buf, offset);\n    if (lenBytes === 1)\n        return buf[offset];\n    else if (lenBytes === 2)\n        return buf[offset + 1];\n    else if (lenBytes === 3)\n        return (buf[offset + 1] << 8) + buf[offset + 2];\n    else if (lenBytes === 4)\n        return (buf[offset + 1] << 16) + (buf[offset + 2] << 8) + buf[offset + 3];\n    throw new Error('Length too long (> 4 bytes)');\n};\n/**\n * A DER encoded `SEQUENCE(OID)` for DER-encoded-COSE\n */\nexport const DER_COSE_OID = Uint8Array.from([\n    ...[0x30, 0x0c],\n    ...[0x06, 0x0a],\n    ...[0x2b, 0x06, 0x01, 0x04, 0x01, 0x83, 0xb8, 0x43, 0x01, 0x01], // DER encoded COSE\n]);\n/**\n * A DER encoded `SEQUENCE(OID)` for the Ed25519 algorithm\n */\nexport const ED25519_OID = Uint8Array.from([\n    ...[0x30, 0x05],\n    ...[0x06, 0x03],\n    ...[0x2b, 0x65, 0x70], // id-Ed25519 OID\n]);\n/**\n * A DER encoded `SEQUENCE(OID)` for secp256k1 with the ECDSA algorithm\n */\nexport const SECP256K1_OID = Uint8Array.from([\n    ...[0x30, 0x10],\n    ...[0x06, 0x07],\n    ...[0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01],\n    ...[0x06, 0x05],\n    ...[0x2b, 0x81, 0x04, 0x00, 0x0a], // OID secp256k1\n]);\n/**\n * Wraps the given `payload` in a DER encoding tagged with the given encoded `oid` like so:\n * `SEQUENCE(oid, BITSTRING(payload))`\n *\n * @param payload The payload to encode as the bit string\n * @param oid The DER encoded (and SEQUENCE wrapped!) OID to tag the payload with\n */\nexport function wrapDER(payload, oid) {\n    // The Bit String header needs to include the unused bit count byte in its length\n    const bitStringHeaderLength = 2 + encodeLenBytes(payload.byteLength + 1);\n    const len = oid.byteLength + bitStringHeaderLength + payload.byteLength;\n    let offset = 0;\n    const buf = new Uint8Array(1 + encodeLenBytes(len) + len);\n    // Sequence\n    buf[offset++] = 0x30;\n    // Sequence Length\n    offset += encodeLen(buf, offset, len);\n    // OID\n    buf.set(oid, offset);\n    offset += oid.byteLength;\n    // Bit String Header\n    buf[offset++] = 0x03;\n    offset += encodeLen(buf, offset, payload.byteLength + 1);\n    // 0 padding\n    buf[offset++] = 0x00;\n    buf.set(new Uint8Array(payload), offset);\n    return buf;\n}\n/**\n * Extracts a payload from the given `derEncoded` data, and checks that it was tagged with the given `oid`.\n *\n * `derEncoded = SEQUENCE(oid, BITSTRING(payload))`\n *\n * @param derEncoded The DER encoded and tagged data\n * @param oid The DER encoded (and SEQUENCE wrapped!) expected OID\n * @returns The unwrapped payload\n */\nexport const unwrapDER = (derEncoded, oid) => {\n    let offset = 0;\n    const expect = (n, msg) => {\n        if (buf[offset++] !== n) {\n            throw new Error('Expected: ' + msg);\n        }\n    };\n    const buf = new Uint8Array(derEncoded);\n    expect(0x30, 'sequence');\n    offset += decodeLenBytes(buf, offset);\n    if (!bufEquals(buf.slice(offset, offset + oid.byteLength), oid)) {\n        throw new Error('Not the expected OID.');\n    }\n    offset += oid.byteLength;\n    expect(0x03, 'bit string');\n    const payloadLen = decodeLen(buf, offset) - 1; // Subtracting 1 to account for the 0 padding\n    offset += decodeLenBytes(buf, offset);\n    expect(0x00, '0 padding');\n    const result = buf.slice(offset);\n    if (payloadLen !== result.length) {\n        throw new Error(`DER payload mismatch: Expected length ${payloadLen} actual length ${result.length}`);\n    }\n    return result;\n};\n//# sourceMappingURL=der.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Ed25519PublicKey_rawKey, _Ed25519PublicKey_derKey;\nimport { ED25519_OID, unwrapDER, wrapDER } from './der';\nexport class Ed25519PublicKey {\n    // `fromRaw` and `fromDer` should be used for instantiation, not this constructor.\n    constructor(key) {\n        _Ed25519PublicKey_rawKey.set(this, void 0);\n        _Ed25519PublicKey_derKey.set(this, void 0);\n        if (key.byteLength !== Ed25519PublicKey.RAW_KEY_LENGTH) {\n            throw new Error('An Ed25519 public key must be exactly 32bytes long');\n        }\n        __classPrivateFieldSet(this, _Ed25519PublicKey_rawKey, key, \"f\");\n        __classPrivateFieldSet(this, _Ed25519PublicKey_derKey, Ed25519PublicKey.derEncode(key), \"f\");\n    }\n    static from(key) {\n        return this.fromDer(key.toDer());\n    }\n    static fromRaw(rawKey) {\n        return new Ed25519PublicKey(rawKey);\n    }\n    static fromDer(derKey) {\n        return new Ed25519PublicKey(this.derDecode(derKey));\n    }\n    static derEncode(publicKey) {\n        return wrapDER(publicKey, ED25519_OID).buffer;\n    }\n    static derDecode(key) {\n        const unwrapped = unwrapDER(key, ED25519_OID);\n        if (unwrapped.length !== this.RAW_KEY_LENGTH) {\n            throw new Error('An Ed25519 public key must be exactly 32bytes long');\n        }\n        return unwrapped;\n    }\n    get rawKey() {\n        return __classPrivateFieldGet(this, _Ed25519PublicKey_rawKey, \"f\");\n    }\n    get derKey() {\n        return __classPrivateFieldGet(this, _Ed25519PublicKey_derKey, \"f\");\n    }\n    toDer() {\n        return this.derKey;\n    }\n    toRaw() {\n        return this.rawKey;\n    }\n}\n_Ed25519PublicKey_rawKey = new WeakMap(), _Ed25519PublicKey_derKey = new WeakMap();\n// The length of Ed25519 public keys is always 32 bytes.\nEd25519PublicKey.RAW_KEY_LENGTH = 32;\n//# sourceMappingURL=public_key.js.map","export class Observable {\n    constructor() {\n        this.observers = [];\n    }\n    subscribe(func) {\n        this.observers.push(func);\n    }\n    unsubscribe(func) {\n        this.observers = this.observers.filter(observer => observer !== func);\n    }\n    notify(data, ...rest) {\n        this.observers.forEach(observer => observer(data, ...rest));\n    }\n}\nexport class ObservableLog extends Observable {\n    constructor() {\n        super();\n    }\n    print(message, ...rest) {\n        this.notify({ message, level: 'info' }, ...rest);\n    }\n    warn(message, ...rest) {\n        this.notify({ message, level: 'warn' }, ...rest);\n    }\n    error(message, error, ...rest) {\n        this.notify({ message, level: 'error', error }, ...rest);\n    }\n}\n//# sourceMappingURL=observable.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ExponentialBackoff_currentInterval, _ExponentialBackoff_randomizationFactor, _ExponentialBackoff_multiplier, _ExponentialBackoff_maxInterval, _ExponentialBackoff_startTime, _ExponentialBackoff_maxElapsedTime, _ExponentialBackoff_maxIterations, _ExponentialBackoff_date, _ExponentialBackoff_count;\nconst RANDOMIZATION_FACTOR = 0.5;\nconst MULTIPLIER = 1.5;\nconst INITIAL_INTERVAL_MSEC = 500;\nconst MAX_INTERVAL_MSEC = 60000;\nconst MAX_ELAPSED_TIME_MSEC = 900000;\nconst MAX_ITERATIONS = 10;\n/**\n * Exponential backoff strategy.\n */\nexport class ExponentialBackoff {\n    constructor(options = ExponentialBackoff.default) {\n        _ExponentialBackoff_currentInterval.set(this, void 0);\n        _ExponentialBackoff_randomizationFactor.set(this, void 0);\n        _ExponentialBackoff_multiplier.set(this, void 0);\n        _ExponentialBackoff_maxInterval.set(this, void 0);\n        _ExponentialBackoff_startTime.set(this, void 0);\n        _ExponentialBackoff_maxElapsedTime.set(this, void 0);\n        _ExponentialBackoff_maxIterations.set(this, void 0);\n        _ExponentialBackoff_date.set(this, void 0);\n        _ExponentialBackoff_count.set(this, 0);\n        const { initialInterval = INITIAL_INTERVAL_MSEC, randomizationFactor = RANDOMIZATION_FACTOR, multiplier = MULTIPLIER, maxInterval = MAX_INTERVAL_MSEC, maxElapsedTime = MAX_ELAPSED_TIME_MSEC, maxIterations = MAX_ITERATIONS, date = Date, } = options;\n        __classPrivateFieldSet(this, _ExponentialBackoff_currentInterval, initialInterval, \"f\");\n        __classPrivateFieldSet(this, _ExponentialBackoff_randomizationFactor, randomizationFactor, \"f\");\n        __classPrivateFieldSet(this, _ExponentialBackoff_multiplier, multiplier, \"f\");\n        __classPrivateFieldSet(this, _ExponentialBackoff_maxInterval, maxInterval, \"f\");\n        __classPrivateFieldSet(this, _ExponentialBackoff_date, date, \"f\");\n        __classPrivateFieldSet(this, _ExponentialBackoff_startTime, date.now(), \"f\");\n        __classPrivateFieldSet(this, _ExponentialBackoff_maxElapsedTime, maxElapsedTime, \"f\");\n        __classPrivateFieldSet(this, _ExponentialBackoff_maxIterations, maxIterations, \"f\");\n    }\n    get ellapsedTimeInMsec() {\n        return __classPrivateFieldGet(this, _ExponentialBackoff_date, \"f\").now() - __classPrivateFieldGet(this, _ExponentialBackoff_startTime, \"f\");\n    }\n    get currentInterval() {\n        return __classPrivateFieldGet(this, _ExponentialBackoff_currentInterval, \"f\");\n    }\n    get count() {\n        return __classPrivateFieldGet(this, _ExponentialBackoff_count, \"f\");\n    }\n    get randomValueFromInterval() {\n        const delta = __classPrivateFieldGet(this, _ExponentialBackoff_randomizationFactor, \"f\") * __classPrivateFieldGet(this, _ExponentialBackoff_currentInterval, \"f\");\n        const min = __classPrivateFieldGet(this, _ExponentialBackoff_currentInterval, \"f\") - delta;\n        const max = __classPrivateFieldGet(this, _ExponentialBackoff_currentInterval, \"f\") + delta;\n        return Math.random() * (max - min) + min;\n    }\n    incrementCurrentInterval() {\n        var _a;\n        __classPrivateFieldSet(this, _ExponentialBackoff_currentInterval, Math.min(__classPrivateFieldGet(this, _ExponentialBackoff_currentInterval, \"f\") * __classPrivateFieldGet(this, _ExponentialBackoff_multiplier, \"f\"), __classPrivateFieldGet(this, _ExponentialBackoff_maxInterval, \"f\")), \"f\");\n        __classPrivateFieldSet(this, _ExponentialBackoff_count, (_a = __classPrivateFieldGet(this, _ExponentialBackoff_count, \"f\"), _a++, _a), \"f\");\n        return __classPrivateFieldGet(this, _ExponentialBackoff_currentInterval, \"f\");\n    }\n    next() {\n        if (this.ellapsedTimeInMsec >= __classPrivateFieldGet(this, _ExponentialBackoff_maxElapsedTime, \"f\") || __classPrivateFieldGet(this, _ExponentialBackoff_count, \"f\") >= __classPrivateFieldGet(this, _ExponentialBackoff_maxIterations, \"f\")) {\n            return null;\n        }\n        else {\n            this.incrementCurrentInterval();\n            return this.randomValueFromInterval;\n        }\n    }\n}\n_ExponentialBackoff_currentInterval = new WeakMap(), _ExponentialBackoff_randomizationFactor = new WeakMap(), _ExponentialBackoff_multiplier = new WeakMap(), _ExponentialBackoff_maxInterval = new WeakMap(), _ExponentialBackoff_startTime = new WeakMap(), _ExponentialBackoff_maxElapsedTime = new WeakMap(), _ExponentialBackoff_maxIterations = new WeakMap(), _ExponentialBackoff_date = new WeakMap(), _ExponentialBackoff_count = new WeakMap();\nExponentialBackoff.default = {\n    initialInterval: INITIAL_INTERVAL_MSEC,\n    randomizationFactor: RANDOMIZATION_FACTOR,\n    multiplier: MULTIPLIER,\n    maxInterval: MAX_INTERVAL_MSEC,\n    // 1 minute\n    maxElapsedTime: MAX_ELAPSED_TIME_MSEC,\n    maxIterations: MAX_ITERATIONS,\n    date: Date,\n};\n/**\n * Utility function to create an exponential backoff iterator.\n * @param options - for the exponential backoff\n * @returns an iterator that yields the next delay in the exponential backoff\n * @yields the next delay in the exponential backoff\n */\nexport function* exponentialBackoff(options = ExponentialBackoff.default) {\n    const backoff = new ExponentialBackoff(options);\n    let next = backoff.next();\n    while (next) {\n        yield next;\n        next = backoff.next();\n    }\n}\n//# sourceMappingURL=backoff.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _HttpAgent_instances, _HttpAgent_retryTimes, _HttpAgent_backoffStrategy, _HttpAgent_waterMark, _HttpAgent_queryPipeline, _HttpAgent_updatePipeline, _HttpAgent_subnetKeys, _HttpAgent_verifyQuerySignatures, _HttpAgent_requestAndRetryQuery, _HttpAgent_requestAndRetry, _HttpAgent_verifyQueryResponse;\nimport { Principal } from '@dfinity/principal';\nimport { AgentError } from '../../errors';\nimport { AnonymousIdentity } from '../../auth';\nimport * as cbor from '../../cbor';\nimport { hashOfMap, requestIdOf } from '../../request_id';\nimport { bufFromBufLike, concat, fromHex } from '../../utils/buffer';\nimport { Expiry, httpHeadersTransform, makeNonceTransform } from './transforms';\nimport { makeNonce, SubmitRequestType, } from './types';\nimport { AgentHTTPResponseError } from './errors';\nimport { request } from '../../canisterStatus';\nimport { CertificateVerificationError, LookupStatus, lookup_path, } from '../../certificate';\nimport { ed25519 } from '@noble/curves/ed25519';\nimport { ExpirableMap } from '../../utils/expirableMap';\nimport { Ed25519PublicKey } from '../../public_key';\nimport { decodeTime } from '../../utils/leb';\nimport { ObservableLog } from '../../observable';\nimport { ExponentialBackoff } from '../../polling/backoff';\nexport * from './transforms';\nexport { makeNonce } from './types';\nexport var RequestStatusResponseStatus;\n(function (RequestStatusResponseStatus) {\n    RequestStatusResponseStatus[\"Received\"] = \"received\";\n    RequestStatusResponseStatus[\"Processing\"] = \"processing\";\n    RequestStatusResponseStatus[\"Replied\"] = \"replied\";\n    RequestStatusResponseStatus[\"Rejected\"] = \"rejected\";\n    RequestStatusResponseStatus[\"Unknown\"] = \"unknown\";\n    RequestStatusResponseStatus[\"Done\"] = \"done\";\n})(RequestStatusResponseStatus || (RequestStatusResponseStatus = {}));\n// Default delta for ingress expiry is 5 minutes.\nconst DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS = 5 * 60 * 1000;\n// Root public key for the IC, encoded as hex\nexport const IC_ROOT_KEY = '308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100814' +\n    'c0e6ec71fab583b08bd81373c255c3c371b2e84863c98a4f1e08b74235d14fb5d9c0cd546d968' +\n    '5f913a0c0b2cc5341583bf4b4392e467db96d65b9bb4cb717112f8472e0d5a4d14505ffd7484' +\n    'b01291091c5f87b98883463f98091a0baaae';\nexport const MANAGEMENT_CANISTER_ID = 'aaaaa-aa';\n// IC0 domain info\nconst IC0_DOMAIN = 'ic0.app';\nconst IC0_SUB_DOMAIN = '.ic0.app';\nconst ICP0_DOMAIN = 'icp0.io';\nconst ICP0_SUB_DOMAIN = '.icp0.io';\nconst ICP_API_DOMAIN = 'icp-api.io';\nconst ICP_API_SUB_DOMAIN = '.icp-api.io';\nclass HttpDefaultFetchError extends AgentError {\n    constructor(message) {\n        super(message);\n        this.message = message;\n    }\n}\nexport class IdentityInvalidError extends AgentError {\n    constructor(message) {\n        super(message);\n        this.message = message;\n    }\n}\nfunction getDefaultFetch() {\n    let defaultFetch;\n    if (typeof window !== 'undefined') {\n        // Browser context\n        if (window.fetch) {\n            defaultFetch = window.fetch.bind(window);\n        }\n        else {\n            throw new HttpDefaultFetchError('Fetch implementation was not available. You appear to be in a browser context, but window.fetch was not present.');\n        }\n    }\n    else if (typeof global !== 'undefined') {\n        // Node context\n        if (global.fetch) {\n            defaultFetch = global.fetch.bind(global);\n        }\n        else {\n            throw new HttpDefaultFetchError('Fetch implementation was not available. You appear to be in a Node.js context, but global.fetch was not available.');\n        }\n    }\n    else if (typeof self !== 'undefined') {\n        if (self.fetch) {\n            defaultFetch = self.fetch.bind(self);\n        }\n    }\n    if (defaultFetch) {\n        return defaultFetch;\n    }\n    throw new HttpDefaultFetchError('Fetch implementation was not available. Please provide fetch to the HttpAgent constructor, or ensure it is available in the window or global context.');\n}\n// A HTTP agent allows users to interact with a client of the internet computer\n// using the available methods. It exposes an API that closely follows the\n// public view of the internet computer, and is not intended to be exposed\n// directly to the majority of users due to its low-level interface.\n//\n// There is a pipeline to apply transformations to the request before sending\n// it to the client. This is to decouple signature, nonce generation and\n// other computations so that this class can stay as simple as possible while\n// allowing extensions.\nexport class HttpAgent {\n    constructor(options = {}) {\n        var _a;\n        _HttpAgent_instances.add(this);\n        this.rootKey = fromHex(IC_ROOT_KEY);\n        this._timeDiffMsecs = 0;\n        this._rootKeyFetched = false;\n        _HttpAgent_retryTimes.set(this, void 0); // Retry requests N times before erroring by default\n        _HttpAgent_backoffStrategy.set(this, void 0);\n        this._isAgent = true;\n        // The UTC time in milliseconds when the latest request was made\n        _HttpAgent_waterMark.set(this, 0);\n        this.log = new ObservableLog();\n        _HttpAgent_queryPipeline.set(this, []);\n        _HttpAgent_updatePipeline.set(this, []);\n        _HttpAgent_subnetKeys.set(this, new ExpirableMap({\n            expirationTime: 5 * 60 * 1000, // 5 minutes\n        }));\n        _HttpAgent_verifyQuerySignatures.set(this, true);\n        /**\n         * See https://internetcomputer.org/docs/current/references/ic-interface-spec/#http-query for details on validation\n         * @param queryResponse - The response from the query\n         * @param subnetStatus - The subnet status, including all node keys\n         * @returns ApiQueryResponse\n         */\n        _HttpAgent_verifyQueryResponse.set(this, (queryResponse, subnetStatus) => {\n            if (__classPrivateFieldGet(this, _HttpAgent_verifyQuerySignatures, \"f\") === false) {\n                // This should not be called if the user has disabled verification\n                return queryResponse;\n            }\n            if (!subnetStatus) {\n                throw new CertificateVerificationError('Invalid signature from replica signed query: no matching node key found.');\n            }\n            const { status, signatures = [], requestId } = queryResponse;\n            const domainSeparator = new TextEncoder().encode('\\x0Bic-response');\n            for (const sig of signatures) {\n                const { timestamp, identity } = sig;\n                const nodeId = Principal.fromUint8Array(identity).toText();\n                let hash;\n                // Hash is constructed differently depending on the status\n                if (status === 'replied') {\n                    const { reply } = queryResponse;\n                    hash = hashOfMap({\n                        status: status,\n                        reply: reply,\n                        timestamp: BigInt(timestamp),\n                        request_id: requestId,\n                    });\n                }\n                else if (status === 'rejected') {\n                    const { reject_code, reject_message, error_code } = queryResponse;\n                    hash = hashOfMap({\n                        status: status,\n                        reject_code: reject_code,\n                        reject_message: reject_message,\n                        error_code: error_code,\n                        timestamp: BigInt(timestamp),\n                        request_id: requestId,\n                    });\n                }\n                else {\n                    throw new Error(`Unknown status: ${status}`);\n                }\n                const separatorWithHash = concat(domainSeparator, new Uint8Array(hash));\n                // FIX: check for match without verifying N times\n                const pubKey = subnetStatus === null || subnetStatus === void 0 ? void 0 : subnetStatus.nodeKeys.get(nodeId);\n                if (!pubKey) {\n                    throw new CertificateVerificationError('Invalid signature from replica signed query: no matching node key found.');\n                }\n                const rawKey = Ed25519PublicKey.fromDer(pubKey).rawKey;\n                const valid = ed25519.verify(sig.signature, new Uint8Array(separatorWithHash), new Uint8Array(rawKey));\n                if (valid)\n                    return queryResponse;\n                throw new CertificateVerificationError(`Invalid signature from replica ${nodeId} signed query.`);\n            }\n            return queryResponse;\n        });\n        if (options.source) {\n            if (!(options.source instanceof HttpAgent)) {\n                throw new Error(\"An Agent's source can only be another HttpAgent\");\n            }\n            this._identity = options.source._identity;\n            this._fetch = options.source._fetch;\n            this._host = options.source._host;\n            this._credentials = options.source._credentials;\n        }\n        else {\n            this._fetch = options.fetch || getDefaultFetch() || fetch.bind(global);\n            this._fetchOptions = options.fetchOptions;\n            this._callOptions = options.callOptions;\n        }\n        if (options.host !== undefined) {\n            if (!options.host.match(/^[a-z]+:/) && typeof window !== 'undefined') {\n                this._host = new URL(window.location.protocol + '//' + options.host);\n            }\n            else {\n                this._host = new URL(options.host);\n            }\n        }\n        else if (options.source !== undefined) {\n            // Safe to ignore here.\n            this._host = options.source._host;\n        }\n        else {\n            const location = typeof window !== 'undefined' ? window.location : undefined;\n            if (!location) {\n                this._host = new URL('https://icp-api.io');\n                this.log.warn('Could not infer host from window.location, defaulting to mainnet gateway of https://icp-api.io. Please provide a host to the HttpAgent constructor to avoid this warning.');\n            }\n            // Mainnet, local, and remote environments will have the api route available\n            const knownHosts = ['ic0.app', 'icp0.io', '127.0.0.1', 'localhost'];\n            const remoteHosts = ['.github.dev', '.gitpod.io'];\n            const hostname = location === null || location === void 0 ? void 0 : location.hostname;\n            let knownHost;\n            if (hostname && typeof hostname === 'string') {\n                if (remoteHosts.some(host => hostname.endsWith(host))) {\n                    knownHost = hostname;\n                }\n                else {\n                    knownHost = knownHosts.find(host => hostname.endsWith(host));\n                }\n            }\n            if (location && knownHost) {\n                // If the user is on a boundary-node provided host, we can use the same host for the agent\n                this._host = new URL(`${location.protocol}//${knownHost}${location.port ? ':' + location.port : ''}`);\n            }\n            else {\n                this._host = new URL('https://icp-api.io');\n                this.log.warn('Could not infer host from window.location, defaulting to mainnet gateway of https://icp-api.io. Please provide a host to the HttpAgent constructor to avoid this warning.');\n            }\n        }\n        if (options.verifyQuerySignatures !== undefined) {\n            __classPrivateFieldSet(this, _HttpAgent_verifyQuerySignatures, options.verifyQuerySignatures, \"f\");\n        }\n        // Default is 3\n        __classPrivateFieldSet(this, _HttpAgent_retryTimes, (_a = options.retryTimes) !== null && _a !== void 0 ? _a : 3, \"f\");\n        // Delay strategy for retries. Default is exponential backoff\n        const defaultBackoffFactory = () => new ExponentialBackoff({\n            maxIterations: __classPrivateFieldGet(this, _HttpAgent_retryTimes, \"f\"),\n        });\n        __classPrivateFieldSet(this, _HttpAgent_backoffStrategy, options.backoffStrategy || defaultBackoffFactory, \"f\");\n        // Rewrite to avoid redirects\n        if (this._host.hostname.endsWith(IC0_SUB_DOMAIN)) {\n            this._host.hostname = IC0_DOMAIN;\n        }\n        else if (this._host.hostname.endsWith(ICP0_SUB_DOMAIN)) {\n            this._host.hostname = ICP0_DOMAIN;\n        }\n        else if (this._host.hostname.endsWith(ICP_API_SUB_DOMAIN)) {\n            this._host.hostname = ICP_API_DOMAIN;\n        }\n        if (options.credentials) {\n            const { name, password } = options.credentials;\n            this._credentials = `${name}${password ? ':' + password : ''}`;\n        }\n        this._identity = Promise.resolve(options.identity || new AnonymousIdentity());\n        // Add a nonce transform to ensure calls are unique\n        this.addTransform('update', makeNonceTransform(makeNonce));\n        if (options.useQueryNonces) {\n            this.addTransform('query', makeNonceTransform(makeNonce));\n        }\n        if (options.logToConsole) {\n            this.log.subscribe(log => {\n                if (log.level === 'error') {\n                    console.error(log.message);\n                }\n                else if (log.level === 'warn') {\n                    console.warn(log.message);\n                }\n                else {\n                    console.log(log.message);\n                }\n            });\n        }\n    }\n    get waterMark() {\n        return __classPrivateFieldGet(this, _HttpAgent_waterMark, \"f\");\n    }\n    isLocal() {\n        const hostname = this._host.hostname;\n        return hostname === '127.0.0.1' || hostname.endsWith('127.0.0.1');\n    }\n    addTransform(type, fn, priority = fn.priority || 0) {\n        if (type === 'update') {\n            // Keep the pipeline sorted at all time, by priority.\n            const i = __classPrivateFieldGet(this, _HttpAgent_updatePipeline, \"f\").findIndex(x => (x.priority || 0) < priority);\n            __classPrivateFieldGet(this, _HttpAgent_updatePipeline, \"f\").splice(i >= 0 ? i : __classPrivateFieldGet(this, _HttpAgent_updatePipeline, \"f\").length, 0, Object.assign(fn, { priority }));\n        }\n        else if (type === 'query') {\n            // Keep the pipeline sorted at all time, by priority.\n            const i = __classPrivateFieldGet(this, _HttpAgent_queryPipeline, \"f\").findIndex(x => (x.priority || 0) < priority);\n            __classPrivateFieldGet(this, _HttpAgent_queryPipeline, \"f\").splice(i >= 0 ? i : __classPrivateFieldGet(this, _HttpAgent_queryPipeline, \"f\").length, 0, Object.assign(fn, { priority }));\n        }\n    }\n    async getPrincipal() {\n        if (!this._identity) {\n            throw new IdentityInvalidError(\"This identity has expired due this application's security policy. Please refresh your authentication.\");\n        }\n        return (await this._identity).getPrincipal();\n    }\n    async call(canisterId, options, identity) {\n        const id = await (identity !== undefined ? await identity : await this._identity);\n        if (!id) {\n            throw new IdentityInvalidError(\"This identity has expired due this application's security policy. Please refresh your authentication.\");\n        }\n        const canister = Principal.from(canisterId);\n        const ecid = options.effectiveCanisterId\n            ? Principal.from(options.effectiveCanisterId)\n            : canister;\n        const sender = id.getPrincipal() || Principal.anonymous();\n        let ingress_expiry = new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS);\n        // If the value is off by more than 30 seconds, reconcile system time with the network\n        if (Math.abs(this._timeDiffMsecs) > 1000 * 30) {\n            ingress_expiry = new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS + this._timeDiffMsecs);\n        }\n        const submit = {\n            request_type: SubmitRequestType.Call,\n            canister_id: canister,\n            method_name: options.methodName,\n            arg: options.arg,\n            sender,\n            ingress_expiry,\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let transformedRequest = (await this._transform({\n            request: {\n                body: null,\n                method: 'POST',\n                headers: Object.assign({ 'Content-Type': 'application/cbor' }, (this._credentials ? { Authorization: 'Basic ' + btoa(this._credentials) } : {})),\n            },\n            endpoint: \"call\" /* Endpoint.Call */,\n            body: submit,\n        }));\n        // Apply transform for identity.\n        transformedRequest = await id.transformRequest(transformedRequest);\n        const body = cbor.encode(transformedRequest.body);\n        this.log.print(`fetching \"/api/v2/canister/${ecid.toText()}/call\" with request:`, transformedRequest);\n        // Run both in parallel. The fetch is quite expensive, so we have plenty of time to\n        // calculate the requestId locally.\n        const backoff = __classPrivateFieldGet(this, _HttpAgent_backoffStrategy, \"f\").call(this);\n        const request = __classPrivateFieldGet(this, _HttpAgent_instances, \"m\", _HttpAgent_requestAndRetry).call(this, {\n            request: () => this._fetch('' + new URL(`/api/v2/canister/${ecid.toText()}/call`, this._host), Object.assign(Object.assign(Object.assign({}, this._callOptions), transformedRequest.request), { body })),\n            backoff,\n            tries: 0,\n        });\n        const [response, requestId] = await Promise.all([request, requestIdOf(submit)]);\n        const responseBuffer = await response.arrayBuffer();\n        const responseBody = (response.status === 200 && responseBuffer.byteLength > 0 ? cbor.decode(responseBuffer) : null);\n        return {\n            requestId,\n            response: {\n                ok: response.ok,\n                status: response.status,\n                statusText: response.statusText,\n                body: responseBody,\n                headers: httpHeadersTransform(response.headers),\n            },\n        };\n    }\n    async query(canisterId, fields, identity) {\n        const backoff = __classPrivateFieldGet(this, _HttpAgent_backoffStrategy, \"f\").call(this);\n        const ecid = fields.effectiveCanisterId\n            ? Principal.from(fields.effectiveCanisterId)\n            : Principal.from(canisterId);\n        this.log.print(`ecid ${ecid.toString()}`);\n        this.log.print(`canisterId ${canisterId.toString()}`);\n        const makeQuery = async () => {\n            const id = await (identity !== undefined ? await identity : await this._identity);\n            if (!id) {\n                throw new IdentityInvalidError(\"This identity has expired due this application's security policy. Please refresh your authentication.\");\n            }\n            const canister = Principal.from(canisterId);\n            const sender = (id === null || id === void 0 ? void 0 : id.getPrincipal()) || Principal.anonymous();\n            const request = {\n                request_type: \"query\" /* ReadRequestType.Query */,\n                canister_id: canister,\n                method_name: fields.methodName,\n                arg: fields.arg,\n                sender,\n                ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS),\n            };\n            const requestId = await requestIdOf(request);\n            // TODO: remove this any. This can be a Signed or UnSigned request.\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            let transformedRequest = await this._transform({\n                request: {\n                    method: 'POST',\n                    headers: Object.assign({ 'Content-Type': 'application/cbor' }, (this._credentials ? { Authorization: 'Basic ' + btoa(this._credentials) } : {})),\n                },\n                endpoint: \"read\" /* Endpoint.Query */,\n                body: request,\n            });\n            // Apply transform for identity.\n            transformedRequest = (await (id === null || id === void 0 ? void 0 : id.transformRequest(transformedRequest)));\n            const body = cbor.encode(transformedRequest.body);\n            const args = {\n                canister: canister.toText(),\n                ecid,\n                transformedRequest,\n                body,\n                requestId,\n                backoff,\n                tries: 0,\n            };\n            return await __classPrivateFieldGet(this, _HttpAgent_instances, \"m\", _HttpAgent_requestAndRetryQuery).call(this, args);\n        };\n        const getSubnetStatus = async () => {\n            if (!__classPrivateFieldGet(this, _HttpAgent_verifyQuerySignatures, \"f\")) {\n                return undefined;\n            }\n            const subnetStatus = __classPrivateFieldGet(this, _HttpAgent_subnetKeys, \"f\").get(ecid.toString());\n            if (subnetStatus) {\n                return subnetStatus;\n            }\n            await this.fetchSubnetKeys(ecid.toString());\n            return __classPrivateFieldGet(this, _HttpAgent_subnetKeys, \"f\").get(ecid.toString());\n        };\n        // Attempt to make the query i=retryTimes times\n        // Make query and fetch subnet keys in parallel\n        const [query, subnetStatus] = await Promise.all([makeQuery(), getSubnetStatus()]);\n        this.log.print('Query response:', query);\n        // Skip verification if the user has disabled it\n        if (!__classPrivateFieldGet(this, _HttpAgent_verifyQuerySignatures, \"f\")) {\n            return query;\n        }\n        try {\n            return __classPrivateFieldGet(this, _HttpAgent_verifyQueryResponse, \"f\").call(this, query, subnetStatus);\n        }\n        catch (_) {\n            // In case the node signatures have changed, refresh the subnet keys and try again\n            this.log.warn('Query response verification failed. Retrying with fresh subnet keys.');\n            __classPrivateFieldGet(this, _HttpAgent_subnetKeys, \"f\").delete(canisterId.toString());\n            await this.fetchSubnetKeys(ecid.toString());\n            const updatedSubnetStatus = __classPrivateFieldGet(this, _HttpAgent_subnetKeys, \"f\").get(canisterId.toString());\n            if (!updatedSubnetStatus) {\n                throw new CertificateVerificationError('Invalid signature from replica signed query: no matching node key found.');\n            }\n            return __classPrivateFieldGet(this, _HttpAgent_verifyQueryResponse, \"f\").call(this, query, updatedSubnetStatus);\n        }\n    }\n    async createReadStateRequest(fields, identity) {\n        const id = await (identity !== undefined ? await identity : await this._identity);\n        if (!id) {\n            throw new IdentityInvalidError(\"This identity has expired due this application's security policy. Please refresh your authentication.\");\n        }\n        const sender = (id === null || id === void 0 ? void 0 : id.getPrincipal()) || Principal.anonymous();\n        // TODO: remove this any. This can be a Signed or UnSigned request.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const transformedRequest = await this._transform({\n            request: {\n                method: 'POST',\n                headers: Object.assign({ 'Content-Type': 'application/cbor' }, (this._credentials ? { Authorization: 'Basic ' + btoa(this._credentials) } : {})),\n            },\n            endpoint: \"read_state\" /* Endpoint.ReadState */,\n            body: {\n                request_type: \"read_state\" /* ReadRequestType.ReadState */,\n                paths: fields.paths,\n                sender,\n                ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS),\n            },\n        });\n        // Apply transform for identity.\n        return id === null || id === void 0 ? void 0 : id.transformRequest(transformedRequest);\n    }\n    async readState(canisterId, fields, identity, \n    // eslint-disable-next-line\n    request) {\n        const canister = typeof canisterId === 'string' ? Principal.fromText(canisterId) : canisterId;\n        const transformedRequest = request !== null && request !== void 0 ? request : (await this.createReadStateRequest(fields, identity));\n        const body = cbor.encode(transformedRequest.body);\n        this.log.print(`fetching \"/api/v2/canister/${canister}/read_state\" with request:`, transformedRequest);\n        // TODO - https://dfinity.atlassian.net/browse/SDK-1092\n        const backoff = __classPrivateFieldGet(this, _HttpAgent_backoffStrategy, \"f\").call(this);\n        const response = await __classPrivateFieldGet(this, _HttpAgent_instances, \"m\", _HttpAgent_requestAndRetry).call(this, {\n            request: () => this._fetch('' + new URL(`/api/v2/canister/${canister.toString()}/read_state`, this._host), Object.assign(Object.assign(Object.assign({}, this._fetchOptions), transformedRequest.request), { body })),\n            backoff,\n            tries: 0,\n        });\n        if (!response.ok) {\n            throw new Error(`Server returned an error:\\n` +\n                `  Code: ${response.status} (${response.statusText})\\n` +\n                `  Body: ${await response.text()}\\n`);\n        }\n        const decodedResponse = cbor.decode(await response.arrayBuffer());\n        this.log.print('Read state response:', decodedResponse);\n        const parsedTime = await this.parseTimeFromResponse(decodedResponse);\n        if (parsedTime > 0) {\n            this.log.print('Read state response time:', parsedTime);\n            __classPrivateFieldSet(this, _HttpAgent_waterMark, parsedTime, \"f\");\n        }\n        return decodedResponse;\n    }\n    async parseTimeFromResponse(response) {\n        let tree;\n        if (response.certificate) {\n            const decoded = cbor.decode(response.certificate);\n            if (decoded && 'tree' in decoded) {\n                tree = decoded.tree;\n            }\n            else {\n                throw new Error('Could not decode time from response');\n            }\n            const timeLookup = lookup_path(['time'], tree);\n            if (timeLookup.status !== LookupStatus.Found) {\n                throw new Error('Time was not found in the response or was not in its expected format.');\n            }\n            if (!(timeLookup.value instanceof ArrayBuffer) && !ArrayBuffer.isView(timeLookup)) {\n                throw new Error('Time was not found in the response or was not in its expected format.');\n            }\n            const date = decodeTime(bufFromBufLike(timeLookup.value));\n            this.log.print('Time from response:', date);\n            this.log.print('Time from response in milliseconds:', Number(date));\n            return Number(date);\n        }\n        else {\n            this.log.warn('No certificate found in response');\n        }\n        return 0;\n    }\n    /**\n     * Allows agent to sync its time with the network. Can be called during intialization or mid-lifecycle if the device's clock has drifted away from the network time. This is necessary to set the Expiry for a request\n     * @param {Principal} canisterId - Pass a canister ID if you need to sync the time with a particular replica. Uses the management canister by default\n     */\n    async syncTime(canisterId) {\n        const CanisterStatus = await import('../../canisterStatus');\n        const callTime = Date.now();\n        try {\n            if (!canisterId) {\n                this.log.print('Syncing time with the IC. No canisterId provided, so falling back to ryjl3-tyaaa-aaaaa-aaaba-cai');\n            }\n            const status = await CanisterStatus.request({\n                // Fall back with canisterId of the ICP Ledger\n                canisterId: canisterId !== null && canisterId !== void 0 ? canisterId : Principal.from('ryjl3-tyaaa-aaaaa-aaaba-cai'),\n                agent: this,\n                paths: ['time'],\n            });\n            const replicaTime = status.get('time');\n            if (replicaTime) {\n                this._timeDiffMsecs = Number(replicaTime) - Number(callTime);\n            }\n        }\n        catch (error) {\n            this.log.error('Caught exception while attempting to sync time', error);\n        }\n    }\n    async status() {\n        const headers = this._credentials\n            ? {\n                Authorization: 'Basic ' + btoa(this._credentials),\n            }\n            : {};\n        this.log.print(`fetching \"/api/v2/status\"`);\n        const backoff = __classPrivateFieldGet(this, _HttpAgent_backoffStrategy, \"f\").call(this);\n        const response = await __classPrivateFieldGet(this, _HttpAgent_instances, \"m\", _HttpAgent_requestAndRetry).call(this, {\n            backoff,\n            request: () => this._fetch('' + new URL(`/api/v2/status`, this._host), Object.assign({ headers }, this._fetchOptions)),\n            tries: 0,\n        });\n        return cbor.decode(await response.arrayBuffer());\n    }\n    async fetchRootKey() {\n        if (!this._rootKeyFetched) {\n            // Hex-encoded version of the replica root key\n            this.rootKey = (await this.status()).root_key;\n            this._rootKeyFetched = true;\n        }\n        return this.rootKey;\n    }\n    invalidateIdentity() {\n        this._identity = null;\n    }\n    replaceIdentity(identity) {\n        this._identity = Promise.resolve(identity);\n    }\n    async fetchSubnetKeys(canisterId) {\n        const effectiveCanisterId = Principal.from(canisterId);\n        const response = await request({\n            canisterId: effectiveCanisterId,\n            paths: ['subnet'],\n            agent: this,\n        });\n        const subnetResponse = response.get('subnet');\n        if (subnetResponse && typeof subnetResponse === 'object' && 'nodeKeys' in subnetResponse) {\n            __classPrivateFieldGet(this, _HttpAgent_subnetKeys, \"f\").set(effectiveCanisterId.toText(), subnetResponse);\n            return subnetResponse;\n        }\n        // If the subnet status is not returned, return undefined\n        return undefined;\n    }\n    _transform(request) {\n        let p = Promise.resolve(request);\n        if (request.endpoint === \"call\" /* Endpoint.Call */) {\n            for (const fn of __classPrivateFieldGet(this, _HttpAgent_updatePipeline, \"f\")) {\n                p = p.then(r => fn(r).then(r2 => r2 || r));\n            }\n        }\n        else {\n            for (const fn of __classPrivateFieldGet(this, _HttpAgent_queryPipeline, \"f\")) {\n                p = p.then(r => fn(r).then(r2 => r2 || r));\n            }\n        }\n        return p;\n    }\n}\n_HttpAgent_retryTimes = new WeakMap(), _HttpAgent_backoffStrategy = new WeakMap(), _HttpAgent_waterMark = new WeakMap(), _HttpAgent_queryPipeline = new WeakMap(), _HttpAgent_updatePipeline = new WeakMap(), _HttpAgent_subnetKeys = new WeakMap(), _HttpAgent_verifyQuerySignatures = new WeakMap(), _HttpAgent_verifyQueryResponse = new WeakMap(), _HttpAgent_instances = new WeakSet(), _HttpAgent_requestAndRetryQuery = async function _HttpAgent_requestAndRetryQuery(args) {\n    var _a, _b;\n    const { ecid, transformedRequest, body, requestId, backoff, tries } = args;\n    const delay = tries === 0 ? 0 : backoff.next();\n    this.log.print(`fetching \"/api/v2/canister/${ecid.toString()}/query\" with tries:`, {\n        tries,\n        backoff,\n        delay,\n    });\n    // If delay is null, the backoff strategy is exhausted due to a maximum number of retries, duration, or other reason\n    if (delay === null) {\n        throw new AgentError(`Timestamp failed to pass the watermark after retrying the configured ${__classPrivateFieldGet(this, _HttpAgent_retryTimes, \"f\")} times. We cannot guarantee the integrity of the response since it could be a replay attack.`);\n    }\n    if (delay > 0) {\n        await new Promise(resolve => setTimeout(resolve, delay));\n    }\n    let response;\n    // Make the request and retry if it throws an error\n    try {\n        this.log.print(`fetching \"/api/v2/canister/${ecid.toString()}/query\" with request:`, transformedRequest);\n        const fetchResponse = await this._fetch('' + new URL(`/api/v2/canister/${ecid.toString()}/query`, this._host), Object.assign(Object.assign(Object.assign({}, this._fetchOptions), transformedRequest.request), { body }));\n        if (fetchResponse.status === 200) {\n            const queryResponse = cbor.decode(await fetchResponse.arrayBuffer());\n            response = Object.assign(Object.assign({}, queryResponse), { httpDetails: {\n                    ok: fetchResponse.ok,\n                    status: fetchResponse.status,\n                    statusText: fetchResponse.statusText,\n                    headers: httpHeadersTransform(fetchResponse.headers),\n                }, requestId });\n        }\n        else {\n            throw new AgentHTTPResponseError(`Gateway returned an error:\\n` +\n                `  Code: ${fetchResponse.status} (${fetchResponse.statusText})\\n` +\n                `  Body: ${await fetchResponse.text()}\\n`, {\n                ok: fetchResponse.ok,\n                status: fetchResponse.status,\n                statusText: fetchResponse.statusText,\n                headers: httpHeadersTransform(fetchResponse.headers),\n            });\n        }\n    }\n    catch (error) {\n        if (tries < __classPrivateFieldGet(this, _HttpAgent_retryTimes, \"f\")) {\n            this.log.warn(`Caught exception while attempting to make query:\\n` +\n                `  ${error}\\n` +\n                `  Retrying query.`);\n            return await __classPrivateFieldGet(this, _HttpAgent_instances, \"m\", _HttpAgent_requestAndRetryQuery).call(this, Object.assign(Object.assign({}, args), { tries: tries + 1 }));\n        }\n        throw error;\n    }\n    const timestamp = (_b = (_a = response.signatures) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.timestamp;\n    // Skip watermark verification if the user has set verifyQuerySignatures to false\n    if (!__classPrivateFieldGet(this, _HttpAgent_verifyQuerySignatures, \"f\")) {\n        return response;\n    }\n    if (!timestamp) {\n        throw new Error('Timestamp not found in query response. This suggests a malformed or malicious response.');\n    }\n    // Convert the timestamp to milliseconds\n    const timeStampInMs = Number(BigInt(timestamp) / BigInt(1000000));\n    this.log.print('watermark and timestamp', {\n        waterMark: this.waterMark,\n        timestamp: timeStampInMs,\n    });\n    // If the timestamp is less than the watermark, retry the request up to the retry limit\n    if (Number(this.waterMark) > timeStampInMs) {\n        const error = new AgentError('Timestamp is below the watermark. Retrying query.');\n        this.log.error('Timestamp is below', error, {\n            timestamp,\n            waterMark: this.waterMark,\n        });\n        if (tries < __classPrivateFieldGet(this, _HttpAgent_retryTimes, \"f\")) {\n            return await __classPrivateFieldGet(this, _HttpAgent_instances, \"m\", _HttpAgent_requestAndRetryQuery).call(this, Object.assign(Object.assign({}, args), { tries: tries + 1 }));\n        }\n        {\n            throw new AgentError(`Timestamp failed to pass the watermark after retrying the configured ${__classPrivateFieldGet(this, _HttpAgent_retryTimes, \"f\")} times. We cannot guarantee the integrity of the response since it could be a replay attack.`);\n        }\n    }\n    return response;\n}, _HttpAgent_requestAndRetry = async function _HttpAgent_requestAndRetry(args) {\n    const { request, backoff, tries } = args;\n    const delay = tries === 0 ? 0 : backoff.next();\n    // If delay is null, the backoff strategy is exhausted due to a maximum number of retries, duration, or other reason\n    if (delay === null) {\n        throw new AgentError(`Timestamp failed to pass the watermark after retrying the configured ${__classPrivateFieldGet(this, _HttpAgent_retryTimes, \"f\")} times. We cannot guarantee the integrity of the response since it could be a replay attack.`);\n    }\n    if (delay > 0) {\n        await new Promise(resolve => setTimeout(resolve, delay));\n    }\n    let response;\n    try {\n        response = await request();\n    }\n    catch (error) {\n        if (__classPrivateFieldGet(this, _HttpAgent_retryTimes, \"f\") > tries) {\n            this.log.warn(`Caught exception while attempting to make request:\\n` +\n                `  ${error}\\n` +\n                `  Retrying request.`);\n            // Delay the request by the configured backoff strategy\n            return await __classPrivateFieldGet(this, _HttpAgent_instances, \"m\", _HttpAgent_requestAndRetry).call(this, { request, backoff, tries: tries + 1 });\n        }\n        throw error;\n    }\n    if (response.ok) {\n        return response;\n    }\n    const responseText = await response.clone().text();\n    const errorMessage = `Server returned an error:\\n` +\n        `  Code: ${response.status} (${response.statusText})\\n` +\n        `  Body: ${responseText}\\n`;\n    if (tries < __classPrivateFieldGet(this, _HttpAgent_retryTimes, \"f\")) {\n        return await __classPrivateFieldGet(this, _HttpAgent_instances, \"m\", _HttpAgent_requestAndRetry).call(this, { request, backoff, tries: tries + 1 });\n    }\n    throw new AgentHTTPResponseError(errorMessage, {\n        ok: response.ok,\n        status: response.status,\n        statusText: response.statusText,\n        headers: httpHeadersTransform(response.headers),\n    });\n};\n//# sourceMappingURL=index.js.map","import { Principal } from '@dfinity/principal';\nexport var ProxyMessageKind;\n(function (ProxyMessageKind) {\n    ProxyMessageKind[\"Error\"] = \"err\";\n    ProxyMessageKind[\"GetPrincipal\"] = \"gp\";\n    ProxyMessageKind[\"GetPrincipalResponse\"] = \"gpr\";\n    ProxyMessageKind[\"Query\"] = \"q\";\n    ProxyMessageKind[\"QueryResponse\"] = \"qr\";\n    ProxyMessageKind[\"Call\"] = \"c\";\n    ProxyMessageKind[\"CallResponse\"] = \"cr\";\n    ProxyMessageKind[\"ReadState\"] = \"rs\";\n    ProxyMessageKind[\"ReadStateResponse\"] = \"rsr\";\n    ProxyMessageKind[\"Status\"] = \"s\";\n    ProxyMessageKind[\"StatusResponse\"] = \"sr\";\n})(ProxyMessageKind || (ProxyMessageKind = {}));\n// A Stub Agent that forwards calls to another Agent implementation.\nexport class ProxyStubAgent {\n    constructor(_frontend, _agent) {\n        this._frontend = _frontend;\n        this._agent = _agent;\n    }\n    onmessage(msg) {\n        switch (msg.type) {\n            case ProxyMessageKind.GetPrincipal:\n                this._agent.getPrincipal().then(response => {\n                    this._frontend({\n                        id: msg.id,\n                        type: ProxyMessageKind.GetPrincipalResponse,\n                        response: response.toText(),\n                    });\n                });\n                break;\n            case ProxyMessageKind.Query:\n                this._agent.query(...msg.args).then(response => {\n                    this._frontend({\n                        id: msg.id,\n                        type: ProxyMessageKind.QueryResponse,\n                        response,\n                    });\n                });\n                break;\n            case ProxyMessageKind.Call:\n                this._agent.call(...msg.args).then(response => {\n                    this._frontend({\n                        id: msg.id,\n                        type: ProxyMessageKind.CallResponse,\n                        response,\n                    });\n                });\n                break;\n            case ProxyMessageKind.ReadState:\n                this._agent.readState(...msg.args).then(response => {\n                    this._frontend({\n                        id: msg.id,\n                        type: ProxyMessageKind.ReadStateResponse,\n                        response,\n                    });\n                });\n                break;\n            case ProxyMessageKind.Status:\n                this._agent.status().then(response => {\n                    this._frontend({\n                        id: msg.id,\n                        type: ProxyMessageKind.StatusResponse,\n                        response,\n                    });\n                });\n                break;\n            default:\n                throw new Error(`Invalid message received: ${JSON.stringify(msg)}`);\n        }\n    }\n}\n// An Agent that forwards calls to a backend. The calls are serialized\nexport class ProxyAgent {\n    constructor(_backend) {\n        this._backend = _backend;\n        this._nextId = 0;\n        this._pendingCalls = new Map();\n        this.rootKey = null;\n    }\n    onmessage(msg) {\n        const id = msg.id;\n        const maybePromise = this._pendingCalls.get(id);\n        if (!maybePromise) {\n            throw new Error('A proxy get the same message twice...');\n        }\n        this._pendingCalls.delete(id);\n        const [resolve, reject] = maybePromise;\n        switch (msg.type) {\n            case ProxyMessageKind.Error:\n                return reject(msg.error);\n            case ProxyMessageKind.GetPrincipalResponse:\n            case ProxyMessageKind.CallResponse:\n            case ProxyMessageKind.QueryResponse:\n            case ProxyMessageKind.ReadStateResponse:\n            case ProxyMessageKind.StatusResponse:\n                return resolve(msg.response);\n            default:\n                throw new Error(`Invalid message being sent to ProxyAgent: ${JSON.stringify(msg)}`);\n        }\n    }\n    async getPrincipal() {\n        return this._sendAndWait({\n            id: this._nextId++,\n            type: ProxyMessageKind.GetPrincipal,\n        }).then(principal => {\n            if (typeof principal !== 'string') {\n                throw new Error('Invalid principal received.');\n            }\n            return Principal.fromText(principal);\n        });\n    }\n    readState(canisterId, fields) {\n        return this._sendAndWait({\n            id: this._nextId++,\n            type: ProxyMessageKind.ReadState,\n            args: [canisterId.toString(), fields],\n        });\n    }\n    call(canisterId, fields) {\n        return this._sendAndWait({\n            id: this._nextId++,\n            type: ProxyMessageKind.Call,\n            args: [canisterId.toString(), fields],\n        });\n    }\n    status() {\n        return this._sendAndWait({\n            id: this._nextId++,\n            type: ProxyMessageKind.Status,\n        });\n    }\n    query(canisterId, fields) {\n        return this._sendAndWait({\n            id: this._nextId++,\n            type: ProxyMessageKind.Query,\n            args: [canisterId.toString(), fields],\n        });\n    }\n    async _sendAndWait(msg) {\n        return new Promise((resolve, reject) => {\n            this._pendingCalls.set(msg.id, [resolve, reject]);\n            this._backend(msg);\n        });\n    }\n    async fetchRootKey() {\n        // Hex-encoded version of the replica root key\n        const rootKey = (await this.status()).root_key;\n        this.rootKey = rootKey;\n        return rootKey;\n    }\n}\n//# sourceMappingURL=proxy.js.map","export * from './api';\nexport * from './http';\nexport * from './http/errors';\nexport * from './proxy';\nexport function getDefaultAgent() {\n    const agent = typeof window === 'undefined'\n        ? typeof global === 'undefined'\n            ? typeof self === 'undefined'\n                ? undefined\n                : self.ic.agent\n            : global.ic.agent\n        : window.ic.agent;\n    if (!agent) {\n        throw new Error('No Agent could be found.');\n    }\n    return agent;\n}\n//# sourceMappingURL=index.js.map","import { toHex } from '../utils/buffer';\nconst FIVE_MINUTES_IN_MSEC = 5 * 60 * 1000;\n/**\n * A best practices polling strategy: wait 2 seconds before the first poll, then 1 second\n * with an exponential backoff factor of 1.2. Timeout after 5 minutes.\n */\nexport function defaultStrategy() {\n    return chain(conditionalDelay(once(), 1000), backoff(1000, 1.2), timeout(FIVE_MINUTES_IN_MSEC));\n}\n/**\n * Predicate that returns true once.\n */\nexport function once() {\n    let first = true;\n    return async () => {\n        if (first) {\n            first = false;\n            return true;\n        }\n        return false;\n    };\n}\n/**\n * Delay the polling once.\n * @param condition A predicate that indicates when to delay.\n * @param timeInMsec The amount of time to delay.\n */\nexport function conditionalDelay(condition, timeInMsec) {\n    return async (canisterId, requestId, status) => {\n        if (await condition(canisterId, requestId, status)) {\n            return new Promise(resolve => setTimeout(resolve, timeInMsec));\n        }\n    };\n}\n/**\n * Error out after a maximum number of polling has been done.\n * @param count The maximum attempts to poll.\n */\nexport function maxAttempts(count) {\n    let attempts = count;\n    return async (canisterId, requestId, status) => {\n        if (--attempts <= 0) {\n            throw new Error(`Failed to retrieve a reply for request after ${count} attempts:\\n` +\n                `  Request ID: ${toHex(requestId)}\\n` +\n                `  Request status: ${status}\\n`);\n        }\n    };\n}\n/**\n * Throttle polling.\n * @param throttleInMsec Amount in millisecond to wait between each polling.\n */\nexport function throttle(throttleInMsec) {\n    return () => new Promise(resolve => setTimeout(resolve, throttleInMsec));\n}\n/**\n * Reject a call after a certain amount of time.\n * @param timeInMsec Time in milliseconds before the polling should be rejected.\n */\nexport function timeout(timeInMsec) {\n    const end = Date.now() + timeInMsec;\n    return async (canisterId, requestId, status) => {\n        if (Date.now() > end) {\n            throw new Error(`Request timed out after ${timeInMsec} msec:\\n` +\n                `  Request ID: ${toHex(requestId)}\\n` +\n                `  Request status: ${status}\\n`);\n        }\n    };\n}\n/**\n * A strategy that throttle, but using an exponential backoff strategy.\n * @param startingThrottleInMsec The throttle in milliseconds to start with.\n * @param backoffFactor The factor to multiple the throttle time between every poll. For\n *   example if using 2, the throttle will double between every run.\n */\nexport function backoff(startingThrottleInMsec, backoffFactor) {\n    let currentThrottling = startingThrottleInMsec;\n    return () => new Promise(resolve => setTimeout(() => {\n        currentThrottling *= backoffFactor;\n        resolve();\n    }, currentThrottling));\n}\n/**\n * Chain multiple polling strategy. This _chains_ the strategies, so if you pass in,\n * say, two throttling strategy of 1 second, it will result in a throttle of 2 seconds.\n * @param strategies A strategy list to chain.\n */\nexport function chain(...strategies) {\n    return async (canisterId, requestId, status) => {\n        for (const a of strategies) {\n            await a(canisterId, requestId, status);\n        }\n    };\n}\n//# sourceMappingURL=strategy.js.map","import { RequestStatusResponseStatus } from '../agent';\nimport { Certificate, lookupResultToBuffer } from '../certificate';\nimport { toHex } from '../utils/buffer';\nexport * as strategy from './strategy';\nexport { defaultStrategy } from './strategy';\n/**\n * Polls the IC to check the status of the given request then\n * returns the response bytes once the request has been processed.\n * @param agent The agent to use to poll read_state.\n * @param canisterId The effective canister ID.\n * @param requestId The Request ID to poll status for.\n * @param strategy A polling strategy.\n * @param request Request for the readState call.\n * @param blsVerify - optional replacement function that verifies the BLS signature of a certificate.\n */\nexport async function pollForResponse(agent, canisterId, requestId, strategy, \n// eslint-disable-next-line\nrequest, blsVerify) {\n    var _a;\n    const path = [new TextEncoder().encode('request_status'), requestId];\n    const currentRequest = request !== null && request !== void 0 ? request : (await ((_a = agent.createReadStateRequest) === null || _a === void 0 ? void 0 : _a.call(agent, { paths: [path] })));\n    const state = await agent.readState(canisterId, { paths: [path] }, undefined, currentRequest);\n    if (agent.rootKey == null)\n        throw new Error('Agent root key not initialized before polling');\n    const cert = await Certificate.create({\n        certificate: state.certificate,\n        rootKey: agent.rootKey,\n        canisterId: canisterId,\n        blsVerify,\n    });\n    const maybeBuf = lookupResultToBuffer(cert.lookup([...path, new TextEncoder().encode('status')]));\n    let status;\n    if (typeof maybeBuf === 'undefined') {\n        // Missing requestId means we need to wait\n        status = RequestStatusResponseStatus.Unknown;\n    }\n    else {\n        status = new TextDecoder().decode(maybeBuf);\n    }\n    switch (status) {\n        case RequestStatusResponseStatus.Replied: {\n            return lookupResultToBuffer(cert.lookup([...path, 'reply']));\n        }\n        case RequestStatusResponseStatus.Received:\n        case RequestStatusResponseStatus.Unknown:\n        case RequestStatusResponseStatus.Processing:\n            // Execute the polling strategy, then retry.\n            await strategy(canisterId, requestId, status);\n            return pollForResponse(agent, canisterId, requestId, strategy, currentRequest);\n        case RequestStatusResponseStatus.Rejected: {\n            const rejectCode = new Uint8Array(lookupResultToBuffer(cert.lookup([...path, 'reject_code'])))[0];\n            const rejectMessage = new TextDecoder().decode(lookupResultToBuffer(cert.lookup([...path, 'reject_message'])));\n            throw new Error(`Call was rejected:\\n` +\n                `  Request ID: ${toHex(requestId)}\\n` +\n                `  Reject code: ${rejectCode}\\n` +\n                `  Reject text: ${rejectMessage}\\n`);\n        }\n        case RequestStatusResponseStatus.Done:\n            // This is _technically_ not an error, but we still didn't see the `Replied` status so\n            // we don't know the result and cannot decode it.\n            throw new Error(`Call was marked as done but we never saw the reply:\\n` +\n                `  Request ID: ${toHex(requestId)}\\n`);\n    }\n    throw new Error('unreachable');\n}\n//# sourceMappingURL=index.js.map","/*\n * This file is generated from the candid for asset management.\n * didc version: 0.4.0\n */\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nexport default ({ IDL }) => {\n    const bitcoin_network = IDL.Variant({\n        mainnet: IDL.Null,\n        testnet: IDL.Null,\n    });\n    const bitcoin_address = IDL.Text;\n    const bitcoin_get_balance_args = IDL.Record({\n        network: bitcoin_network,\n        address: bitcoin_address,\n        min_confirmations: IDL.Opt(IDL.Nat32),\n    });\n    const satoshi = IDL.Nat64;\n    const bitcoin_get_balance_result = satoshi;\n    const bitcoin_get_current_fee_percentiles_args = IDL.Record({\n        network: bitcoin_network,\n    });\n    const millisatoshi_per_byte = IDL.Nat64;\n    const bitcoin_get_current_fee_percentiles_result = IDL.Vec(millisatoshi_per_byte);\n    const bitcoin_get_utxos_args = IDL.Record({\n        network: bitcoin_network,\n        filter: IDL.Opt(IDL.Variant({\n            page: IDL.Vec(IDL.Nat8),\n            min_confirmations: IDL.Nat32,\n        })),\n        address: bitcoin_address,\n    });\n    const block_hash = IDL.Vec(IDL.Nat8);\n    const outpoint = IDL.Record({\n        txid: IDL.Vec(IDL.Nat8),\n        vout: IDL.Nat32,\n    });\n    const utxo = IDL.Record({\n        height: IDL.Nat32,\n        value: satoshi,\n        outpoint: outpoint,\n    });\n    const bitcoin_get_utxos_result = IDL.Record({\n        next_page: IDL.Opt(IDL.Vec(IDL.Nat8)),\n        tip_height: IDL.Nat32,\n        tip_block_hash: block_hash,\n        utxos: IDL.Vec(utxo),\n    });\n    const bitcoin_send_transaction_args = IDL.Record({\n        transaction: IDL.Vec(IDL.Nat8),\n        network: bitcoin_network,\n    });\n    const canister_id = IDL.Principal;\n    const canister_info_args = IDL.Record({\n        canister_id: canister_id,\n        num_requested_changes: IDL.Opt(IDL.Nat64),\n    });\n    const change_origin = IDL.Variant({\n        from_user: IDL.Record({ user_id: IDL.Principal }),\n        from_canister: IDL.Record({\n            canister_version: IDL.Opt(IDL.Nat64),\n            canister_id: IDL.Principal,\n        }),\n    });\n    const change_details = IDL.Variant({\n        creation: IDL.Record({ controllers: IDL.Vec(IDL.Principal) }),\n        code_deployment: IDL.Record({\n            mode: IDL.Variant({\n                reinstall: IDL.Null,\n                upgrade: IDL.Null,\n                install: IDL.Null,\n            }),\n            module_hash: IDL.Vec(IDL.Nat8),\n        }),\n        controllers_change: IDL.Record({\n            controllers: IDL.Vec(IDL.Principal),\n        }),\n        code_uninstall: IDL.Null,\n    });\n    const change = IDL.Record({\n        timestamp_nanos: IDL.Nat64,\n        canister_version: IDL.Nat64,\n        origin: change_origin,\n        details: change_details,\n    });\n    const canister_info_result = IDL.Record({\n        controllers: IDL.Vec(IDL.Principal),\n        module_hash: IDL.Opt(IDL.Vec(IDL.Nat8)),\n        recent_changes: IDL.Vec(change),\n        total_num_changes: IDL.Nat64,\n    });\n    const canister_status_args = IDL.Record({ canister_id: canister_id });\n    const log_visibility = IDL.Variant({\n        controllers: IDL.Null,\n        public: IDL.Null,\n    });\n    const definite_canister_settings = IDL.Record({\n        freezing_threshold: IDL.Nat,\n        controllers: IDL.Vec(IDL.Principal),\n        reserved_cycles_limit: IDL.Nat,\n        log_visibility: log_visibility,\n        wasm_memory_limit: IDL.Nat,\n        memory_allocation: IDL.Nat,\n        compute_allocation: IDL.Nat,\n    });\n    const canister_status_result = IDL.Record({\n        status: IDL.Variant({\n            stopped: IDL.Null,\n            stopping: IDL.Null,\n            running: IDL.Null,\n        }),\n        memory_size: IDL.Nat,\n        cycles: IDL.Nat,\n        settings: definite_canister_settings,\n        query_stats: IDL.Record({\n            response_payload_bytes_total: IDL.Nat,\n            num_instructions_total: IDL.Nat,\n            num_calls_total: IDL.Nat,\n            request_payload_bytes_total: IDL.Nat,\n        }),\n        idle_cycles_burned_per_day: IDL.Nat,\n        module_hash: IDL.Opt(IDL.Vec(IDL.Nat8)),\n        reserved_cycles: IDL.Nat,\n    });\n    const clear_chunk_store_args = IDL.Record({ canister_id: canister_id });\n    const canister_settings = IDL.Record({\n        freezing_threshold: IDL.Opt(IDL.Nat),\n        controllers: IDL.Opt(IDL.Vec(IDL.Principal)),\n        reserved_cycles_limit: IDL.Opt(IDL.Nat),\n        log_visibility: IDL.Opt(log_visibility),\n        wasm_memory_limit: IDL.Opt(IDL.Nat),\n        memory_allocation: IDL.Opt(IDL.Nat),\n        compute_allocation: IDL.Opt(IDL.Nat),\n    });\n    const create_canister_args = IDL.Record({\n        settings: IDL.Opt(canister_settings),\n        sender_canister_version: IDL.Opt(IDL.Nat64),\n    });\n    const create_canister_result = IDL.Record({ canister_id: canister_id });\n    const delete_canister_args = IDL.Record({ canister_id: canister_id });\n    const deposit_cycles_args = IDL.Record({ canister_id: canister_id });\n    const ecdsa_curve = IDL.Variant({ secp256k1: IDL.Null });\n    const ecdsa_public_key_args = IDL.Record({\n        key_id: IDL.Record({ name: IDL.Text, curve: ecdsa_curve }),\n        canister_id: IDL.Opt(canister_id),\n        derivation_path: IDL.Vec(IDL.Vec(IDL.Nat8)),\n    });\n    const ecdsa_public_key_result = IDL.Record({\n        public_key: IDL.Vec(IDL.Nat8),\n        chain_code: IDL.Vec(IDL.Nat8),\n    });\n    const fetch_canister_logs_args = IDL.Record({ canister_id: canister_id });\n    const canister_log_record = IDL.Record({\n        idx: IDL.Nat64,\n        timestamp_nanos: IDL.Nat64,\n        content: IDL.Vec(IDL.Nat8),\n    });\n    const fetch_canister_logs_result = IDL.Record({\n        canister_log_records: IDL.Vec(canister_log_record),\n    });\n    const http_header = IDL.Record({ value: IDL.Text, name: IDL.Text });\n    const http_request_result = IDL.Record({\n        status: IDL.Nat,\n        body: IDL.Vec(IDL.Nat8),\n        headers: IDL.Vec(http_header),\n    });\n    const http_request_args = IDL.Record({\n        url: IDL.Text,\n        method: IDL.Variant({\n            get: IDL.Null,\n            head: IDL.Null,\n            post: IDL.Null,\n        }),\n        max_response_bytes: IDL.Opt(IDL.Nat64),\n        body: IDL.Opt(IDL.Vec(IDL.Nat8)),\n        transform: IDL.Opt(IDL.Record({\n            function: IDL.Func([\n                IDL.Record({\n                    context: IDL.Vec(IDL.Nat8),\n                    response: http_request_result,\n                }),\n            ], [http_request_result], ['query']),\n            context: IDL.Vec(IDL.Nat8),\n        })),\n        headers: IDL.Vec(http_header),\n    });\n    const canister_install_mode = IDL.Variant({\n        reinstall: IDL.Null,\n        upgrade: IDL.Opt(IDL.Record({\n            wasm_memory_persistence: IDL.Opt(IDL.Variant({ keep: IDL.Null, replace: IDL.Null })),\n            skip_pre_upgrade: IDL.Opt(IDL.Bool),\n        })),\n        install: IDL.Null,\n    });\n    const chunk_hash = IDL.Record({ hash: IDL.Vec(IDL.Nat8) });\n    const install_chunked_code_args = IDL.Record({\n        arg: IDL.Vec(IDL.Nat8),\n        wasm_module_hash: IDL.Vec(IDL.Nat8),\n        mode: canister_install_mode,\n        chunk_hashes_list: IDL.Vec(chunk_hash),\n        target_canister: canister_id,\n        store_canister: IDL.Opt(canister_id),\n        sender_canister_version: IDL.Opt(IDL.Nat64),\n    });\n    const wasm_module = IDL.Vec(IDL.Nat8);\n    const install_code_args = IDL.Record({\n        arg: IDL.Vec(IDL.Nat8),\n        wasm_module: wasm_module,\n        mode: canister_install_mode,\n        canister_id: canister_id,\n        sender_canister_version: IDL.Opt(IDL.Nat64),\n    });\n    const node_metrics_history_args = IDL.Record({\n        start_at_timestamp_nanos: IDL.Nat64,\n        subnet_id: IDL.Principal,\n    });\n    const node_metrics = IDL.Record({\n        num_block_failures_total: IDL.Nat64,\n        node_id: IDL.Principal,\n        num_blocks_proposed_total: IDL.Nat64,\n    });\n    const node_metrics_history_result = IDL.Vec(IDL.Record({\n        timestamp_nanos: IDL.Nat64,\n        node_metrics: IDL.Vec(node_metrics),\n    }));\n    const provisional_create_canister_with_cycles_args = IDL.Record({\n        settings: IDL.Opt(canister_settings),\n        specified_id: IDL.Opt(canister_id),\n        amount: IDL.Opt(IDL.Nat),\n        sender_canister_version: IDL.Opt(IDL.Nat64),\n    });\n    const provisional_create_canister_with_cycles_result = IDL.Record({\n        canister_id: canister_id,\n    });\n    const provisional_top_up_canister_args = IDL.Record({\n        canister_id: canister_id,\n        amount: IDL.Nat,\n    });\n    const raw_rand_result = IDL.Vec(IDL.Nat8);\n    const sign_with_ecdsa_args = IDL.Record({\n        key_id: IDL.Record({ name: IDL.Text, curve: ecdsa_curve }),\n        derivation_path: IDL.Vec(IDL.Vec(IDL.Nat8)),\n        message_hash: IDL.Vec(IDL.Nat8),\n    });\n    const sign_with_ecdsa_result = IDL.Record({\n        signature: IDL.Vec(IDL.Nat8),\n    });\n    const start_canister_args = IDL.Record({ canister_id: canister_id });\n    const stop_canister_args = IDL.Record({ canister_id: canister_id });\n    const stored_chunks_args = IDL.Record({ canister_id: canister_id });\n    const stored_chunks_result = IDL.Vec(chunk_hash);\n    const uninstall_code_args = IDL.Record({\n        canister_id: canister_id,\n        sender_canister_version: IDL.Opt(IDL.Nat64),\n    });\n    const update_settings_args = IDL.Record({\n        canister_id: IDL.Principal,\n        settings: canister_settings,\n        sender_canister_version: IDL.Opt(IDL.Nat64),\n    });\n    const upload_chunk_args = IDL.Record({\n        chunk: IDL.Vec(IDL.Nat8),\n        canister_id: IDL.Principal,\n    });\n    const upload_chunk_result = chunk_hash;\n    return IDL.Service({\n        bitcoin_get_balance: IDL.Func([bitcoin_get_balance_args], [bitcoin_get_balance_result], []),\n        bitcoin_get_current_fee_percentiles: IDL.Func([bitcoin_get_current_fee_percentiles_args], [bitcoin_get_current_fee_percentiles_result], []),\n        bitcoin_get_utxos: IDL.Func([bitcoin_get_utxos_args], [bitcoin_get_utxos_result], []),\n        bitcoin_send_transaction: IDL.Func([bitcoin_send_transaction_args], [], []),\n        canister_info: IDL.Func([canister_info_args], [canister_info_result], []),\n        canister_status: IDL.Func([canister_status_args], [canister_status_result], []),\n        clear_chunk_store: IDL.Func([clear_chunk_store_args], [], []),\n        create_canister: IDL.Func([create_canister_args], [create_canister_result], []),\n        delete_canister: IDL.Func([delete_canister_args], [], []),\n        deposit_cycles: IDL.Func([deposit_cycles_args], [], []),\n        ecdsa_public_key: IDL.Func([ecdsa_public_key_args], [ecdsa_public_key_result], []),\n        fetch_canister_logs: IDL.Func([fetch_canister_logs_args], [fetch_canister_logs_result], ['query']),\n        http_request: IDL.Func([http_request_args], [http_request_result], []),\n        install_chunked_code: IDL.Func([install_chunked_code_args], [], []),\n        install_code: IDL.Func([install_code_args], [], []),\n        node_metrics_history: IDL.Func([node_metrics_history_args], [node_metrics_history_result], []),\n        provisional_create_canister_with_cycles: IDL.Func([provisional_create_canister_with_cycles_args], [provisional_create_canister_with_cycles_result], []),\n        provisional_top_up_canister: IDL.Func([provisional_top_up_canister_args], [], []),\n        raw_rand: IDL.Func([], [raw_rand_result], []),\n        sign_with_ecdsa: IDL.Func([sign_with_ecdsa_args], [sign_with_ecdsa_result], []),\n        start_canister: IDL.Func([start_canister_args], [], []),\n        stop_canister: IDL.Func([stop_canister_args], [], []),\n        stored_chunks: IDL.Func([stored_chunks_args], [stored_chunks_result], []),\n        uninstall_code: IDL.Func([uninstall_code_args], [], []),\n        update_settings: IDL.Func([update_settings_args], [], []),\n        upload_chunk: IDL.Func([upload_chunk_args], [upload_chunk_result], []),\n    });\n};\n//# sourceMappingURL=management_idl.js.map","import { Buffer } from 'buffer/';\nimport { getDefaultAgent, ReplicaRejectCode, } from './agent';\nimport { AgentError } from './errors';\nimport { IDL } from '@dfinity/candid';\nimport { pollForResponse, strategy } from './polling';\nimport { Principal } from '@dfinity/principal';\nimport { toHex } from './utils/buffer';\nimport managementCanisterIdl from './canisters/management_idl';\nexport class ActorCallError extends AgentError {\n    constructor(canisterId, methodName, type, props) {\n        super([\n            `Call failed:`,\n            `  Canister: ${canisterId.toText()}`,\n            `  Method: ${methodName} (${type})`,\n            ...Object.getOwnPropertyNames(props).map(n => `  \"${n}\": ${JSON.stringify(props[n])}`),\n        ].join('\\n'));\n        this.canisterId = canisterId;\n        this.methodName = methodName;\n        this.type = type;\n        this.props = props;\n    }\n}\nexport class QueryCallRejectedError extends ActorCallError {\n    constructor(canisterId, methodName, result) {\n        var _a;\n        super(canisterId, methodName, 'query', {\n            Status: result.status,\n            Code: (_a = ReplicaRejectCode[result.reject_code]) !== null && _a !== void 0 ? _a : `Unknown Code \"${result.reject_code}\"`,\n            Message: result.reject_message,\n        });\n        this.result = result;\n    }\n}\nexport class UpdateCallRejectedError extends ActorCallError {\n    constructor(canisterId, methodName, requestId, response) {\n        super(canisterId, methodName, 'update', Object.assign({ 'Request ID': toHex(requestId) }, (response.body\n            ? Object.assign(Object.assign({}, (response.body.error_code\n                ? {\n                    'Error code': response.body.error_code,\n                }\n                : {})), { 'Reject code': String(response.body.reject_code), 'Reject message': response.body.reject_message }) : {\n            'HTTP status code': response.status.toString(),\n            'HTTP status text': response.statusText,\n        })));\n        this.requestId = requestId;\n        this.response = response;\n    }\n}\nconst metadataSymbol = Symbol.for('ic-agent-metadata');\n/**\n * An actor base class. An actor is an object containing only functions that will\n * return a promise. These functions are derived from the IDL definition.\n */\nexport class Actor {\n    constructor(metadata) {\n        this[metadataSymbol] = Object.freeze(metadata);\n    }\n    /**\n     * Get the Agent class this Actor would call, or undefined if the Actor would use\n     * the default agent (global.ic.agent).\n     * @param actor The actor to get the agent of.\n     */\n    static agentOf(actor) {\n        return actor[metadataSymbol].config.agent;\n    }\n    /**\n     * Get the interface of an actor, in the form of an instance of a Service.\n     * @param actor The actor to get the interface of.\n     */\n    static interfaceOf(actor) {\n        return actor[metadataSymbol].service;\n    }\n    static canisterIdOf(actor) {\n        return Principal.from(actor[metadataSymbol].config.canisterId);\n    }\n    static async install(fields, config) {\n        const mode = fields.mode === undefined ? { install: null } : fields.mode;\n        // Need to transform the arg into a number array.\n        const arg = fields.arg ? [...new Uint8Array(fields.arg)] : [];\n        // Same for module.\n        const wasmModule = [...new Uint8Array(fields.module)];\n        const canisterId = typeof config.canisterId === 'string'\n            ? Principal.fromText(config.canisterId)\n            : config.canisterId;\n        await getManagementCanister(config).install_code({\n            mode,\n            arg,\n            wasm_module: wasmModule,\n            canister_id: canisterId,\n            sender_canister_version: [],\n        });\n    }\n    static async createCanister(config, settings) {\n        function settingsToCanisterSettings(settings) {\n            return [\n                {\n                    controllers: settings.controllers ? [settings.controllers] : [],\n                    compute_allocation: settings.compute_allocation ? [settings.compute_allocation] : [],\n                    freezing_threshold: settings.freezing_threshold ? [settings.freezing_threshold] : [],\n                    memory_allocation: settings.memory_allocation ? [settings.memory_allocation] : [],\n                    reserved_cycles_limit: [],\n                    log_visibility: [],\n                    wasm_memory_limit: [],\n                },\n            ];\n        }\n        const { canister_id: canisterId } = await getManagementCanister(config || {}).provisional_create_canister_with_cycles({\n            amount: [],\n            settings: settingsToCanisterSettings(settings || {}),\n            specified_id: [],\n            sender_canister_version: [],\n        });\n        return canisterId;\n    }\n    static async createAndInstallCanister(interfaceFactory, fields, config) {\n        const canisterId = await this.createCanister(config);\n        await this.install(Object.assign({}, fields), Object.assign(Object.assign({}, config), { canisterId }));\n        return this.createActor(interfaceFactory, Object.assign(Object.assign({}, config), { canisterId }));\n    }\n    static createActorClass(interfaceFactory, options) {\n        const service = interfaceFactory({ IDL });\n        class CanisterActor extends Actor {\n            constructor(config) {\n                if (!config.canisterId)\n                    throw new AgentError(`Canister ID is required, but received ${typeof config.canisterId} instead. If you are using automatically generated declarations, this may be because your application is not setting the canister ID in process.env correctly.`);\n                const canisterId = typeof config.canisterId === 'string'\n                    ? Principal.fromText(config.canisterId)\n                    : config.canisterId;\n                super({\n                    config: Object.assign(Object.assign(Object.assign({}, DEFAULT_ACTOR_CONFIG), config), { canisterId }),\n                    service,\n                });\n                for (const [methodName, func] of service._fields) {\n                    if (options === null || options === void 0 ? void 0 : options.httpDetails) {\n                        func.annotations.push(ACTOR_METHOD_WITH_HTTP_DETAILS);\n                    }\n                    this[methodName] = _createActorMethod(this, methodName, func, config.blsVerify);\n                }\n            }\n        }\n        return CanisterActor;\n    }\n    static createActor(interfaceFactory, configuration) {\n        if (!configuration.canisterId) {\n            throw new AgentError(`Canister ID is required, but received ${typeof configuration.canisterId} instead. If you are using automatically generated declarations, this may be because your application is not setting the canister ID in process.env correctly.`);\n        }\n        return new (this.createActorClass(interfaceFactory))(configuration);\n    }\n    static createActorWithHttpDetails(interfaceFactory, configuration) {\n        return new (this.createActorClass(interfaceFactory, { httpDetails: true }))(configuration);\n    }\n}\n// IDL functions can have multiple return values, so decoding always\n// produces an array. Ensure that functions with single or zero return\n// values behave as expected.\nfunction decodeReturnValue(types, msg) {\n    const returnValues = IDL.decode(types, Buffer.from(msg));\n    switch (returnValues.length) {\n        case 0:\n            return undefined;\n        case 1:\n            return returnValues[0];\n        default:\n            return returnValues;\n    }\n}\nconst DEFAULT_ACTOR_CONFIG = {\n    pollingStrategyFactory: strategy.defaultStrategy,\n};\nexport const ACTOR_METHOD_WITH_HTTP_DETAILS = 'http-details';\nfunction _createActorMethod(actor, methodName, func, blsVerify) {\n    let caller;\n    if (func.annotations.includes('query') || func.annotations.includes('composite_query')) {\n        caller = async (options, ...args) => {\n            var _a, _b;\n            // First, if there's a config transformation, call it.\n            options = Object.assign(Object.assign({}, options), (_b = (_a = actor[metadataSymbol].config).queryTransform) === null || _b === void 0 ? void 0 : _b.call(_a, methodName, args, Object.assign(Object.assign({}, actor[metadataSymbol].config), options)));\n            const agent = options.agent || actor[metadataSymbol].config.agent || getDefaultAgent();\n            const cid = Principal.from(options.canisterId || actor[metadataSymbol].config.canisterId);\n            const arg = IDL.encode(func.argTypes, args);\n            const result = await agent.query(cid, {\n                methodName,\n                arg,\n                effectiveCanisterId: options.effectiveCanisterId,\n            });\n            switch (result.status) {\n                case \"rejected\" /* QueryResponseStatus.Rejected */:\n                    throw new QueryCallRejectedError(cid, methodName, result);\n                case \"replied\" /* QueryResponseStatus.Replied */:\n                    return func.annotations.includes(ACTOR_METHOD_WITH_HTTP_DETAILS)\n                        ? {\n                            httpDetails: result.httpDetails,\n                            result: decodeReturnValue(func.retTypes, result.reply.arg),\n                        }\n                        : decodeReturnValue(func.retTypes, result.reply.arg);\n            }\n        };\n    }\n    else {\n        caller = async (options, ...args) => {\n            var _a, _b;\n            // First, if there's a config transformation, call it.\n            options = Object.assign(Object.assign({}, options), (_b = (_a = actor[metadataSymbol].config).callTransform) === null || _b === void 0 ? void 0 : _b.call(_a, methodName, args, Object.assign(Object.assign({}, actor[metadataSymbol].config), options)));\n            const agent = options.agent || actor[metadataSymbol].config.agent || getDefaultAgent();\n            const { canisterId, effectiveCanisterId, pollingStrategyFactory } = Object.assign(Object.assign(Object.assign({}, DEFAULT_ACTOR_CONFIG), actor[metadataSymbol].config), options);\n            const cid = Principal.from(canisterId);\n            const ecid = effectiveCanisterId !== undefined ? Principal.from(effectiveCanisterId) : cid;\n            const arg = IDL.encode(func.argTypes, args);\n            const { requestId, response } = await agent.call(cid, {\n                methodName,\n                arg,\n                effectiveCanisterId: ecid,\n            });\n            if (!response.ok || response.body /* IC-1462 */) {\n                throw new UpdateCallRejectedError(cid, methodName, requestId, response);\n            }\n            const pollStrategy = pollingStrategyFactory();\n            const responseBytes = await pollForResponse(agent, ecid, requestId, pollStrategy, blsVerify);\n            const shouldIncludeHttpDetails = func.annotations.includes(ACTOR_METHOD_WITH_HTTP_DETAILS);\n            if (responseBytes !== undefined) {\n                return shouldIncludeHttpDetails\n                    ? {\n                        httpDetails: response,\n                        result: decodeReturnValue(func.retTypes, responseBytes),\n                    }\n                    : decodeReturnValue(func.retTypes, responseBytes);\n            }\n            else if (func.retTypes.length === 0) {\n                return shouldIncludeHttpDetails\n                    ? {\n                        httpDetails: response,\n                        result: undefined,\n                    }\n                    : undefined;\n            }\n            else {\n                throw new Error(`Call was returned undefined, but type [${func.retTypes.join(',')}].`);\n            }\n        };\n    }\n    const handler = (...args) => caller({}, ...args);\n    handler.withOptions =\n        (options) => (...args) => caller(options, ...args);\n    return handler;\n}\n/**\n * Create a management canister actor\n * @param config - a CallConfig\n */\nexport function getManagementCanister(config) {\n    function transform(_methodName, args) {\n        if (config.effectiveCanisterId) {\n            return { effectiveCanisterId: Principal.from(config.effectiveCanisterId) };\n        }\n        const first = args[0];\n        let effectiveCanisterId = Principal.fromHex('');\n        if (first && typeof first === 'object' && first.canister_id) {\n            effectiveCanisterId = Principal.from(first.canister_id);\n        }\n        return { effectiveCanisterId };\n    }\n    return Actor.createActor(managementCanisterIdl, Object.assign(Object.assign(Object.assign({}, config), { canisterId: Principal.fromHex('') }), {\n        callTransform: transform,\n        queryTransform: transform,\n    }));\n}\n//# sourceMappingURL=actor.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Ed25519PublicKey_rawKey, _Ed25519PublicKey_derKey, _Ed25519KeyIdentity_publicKey, _Ed25519KeyIdentity_privateKey;\nimport { bufEquals } from '@dfinity/agent';\nimport { SignIdentity, uint8ToBuf, ED25519_OID, unwrapDER, wrapDER, fromHex, toHex, bufFromBufLike, } from '@dfinity/agent';\nimport { ed25519 } from '@noble/curves/ed25519';\nfunction isObject(value) {\n    return value !== null && typeof value === 'object';\n}\nexport class Ed25519PublicKey {\n    // `fromRaw` and `fromDer` should be used for instantiation, not this constructor.\n    constructor(key) {\n        _Ed25519PublicKey_rawKey.set(this, void 0);\n        _Ed25519PublicKey_derKey.set(this, void 0);\n        if (key.byteLength !== Ed25519PublicKey.RAW_KEY_LENGTH) {\n            throw new Error('An Ed25519 public key must be exactly 32bytes long');\n        }\n        __classPrivateFieldSet(this, _Ed25519PublicKey_rawKey, key, \"f\");\n        __classPrivateFieldSet(this, _Ed25519PublicKey_derKey, Ed25519PublicKey.derEncode(key), \"f\");\n    }\n    /**\n     * Construct Ed25519PublicKey from an existing PublicKey\n     * @param {unknown} maybeKey - existing PublicKey, ArrayBuffer, DerEncodedPublicKey, or hex string\n     * @returns {Ed25519PublicKey} Instance of Ed25519PublicKey\n     */\n    static from(maybeKey) {\n        if (typeof maybeKey === 'string') {\n            const key = fromHex(maybeKey);\n            return this.fromRaw(key);\n        }\n        else if (isObject(maybeKey)) {\n            const key = maybeKey;\n            if (isObject(key) && Object.hasOwnProperty.call(key, '__derEncodedPublicKey__')) {\n                return this.fromDer(key);\n            }\n            else if (ArrayBuffer.isView(key)) {\n                const view = key;\n                return this.fromRaw(bufFromBufLike(view.buffer));\n            }\n            else if (key instanceof ArrayBuffer) {\n                return this.fromRaw(key);\n            }\n            else if ('rawKey' in key) {\n                return this.fromRaw(key.rawKey);\n            }\n            else if ('derKey' in key) {\n                return this.fromDer(key.derKey);\n            }\n            else if ('toDer' in key) {\n                return this.fromDer(key.toDer());\n            }\n        }\n        throw new Error('Cannot construct Ed25519PublicKey from the provided key.');\n    }\n    static fromRaw(rawKey) {\n        return new Ed25519PublicKey(rawKey);\n    }\n    static fromDer(derKey) {\n        return new Ed25519PublicKey(this.derDecode(derKey));\n    }\n    static derEncode(publicKey) {\n        const key = wrapDER(publicKey, ED25519_OID).buffer;\n        key.__derEncodedPublicKey__ = undefined;\n        return key;\n    }\n    static derDecode(key) {\n        const unwrapped = unwrapDER(key, ED25519_OID);\n        if (unwrapped.length !== this.RAW_KEY_LENGTH) {\n            throw new Error('An Ed25519 public key must be exactly 32bytes long');\n        }\n        return unwrapped;\n    }\n    get rawKey() {\n        return __classPrivateFieldGet(this, _Ed25519PublicKey_rawKey, \"f\");\n    }\n    get derKey() {\n        return __classPrivateFieldGet(this, _Ed25519PublicKey_derKey, \"f\");\n    }\n    toDer() {\n        return this.derKey;\n    }\n    toRaw() {\n        return this.rawKey;\n    }\n}\n_Ed25519PublicKey_rawKey = new WeakMap(), _Ed25519PublicKey_derKey = new WeakMap();\n// The length of Ed25519 public keys is always 32 bytes.\nEd25519PublicKey.RAW_KEY_LENGTH = 32;\n/**\n * Ed25519KeyIdentity is an implementation of SignIdentity that uses Ed25519 keys. This class is used to sign and verify messages for an agent.\n */\nexport class Ed25519KeyIdentity extends SignIdentity {\n    // `fromRaw` and `fromDer` should be used for instantiation, not this constructor.\n    constructor(publicKey, privateKey) {\n        super();\n        _Ed25519KeyIdentity_publicKey.set(this, void 0);\n        _Ed25519KeyIdentity_privateKey.set(this, void 0);\n        __classPrivateFieldSet(this, _Ed25519KeyIdentity_publicKey, Ed25519PublicKey.from(publicKey), \"f\");\n        __classPrivateFieldSet(this, _Ed25519KeyIdentity_privateKey, new Uint8Array(privateKey), \"f\");\n    }\n    /**\n     * Generate a new Ed25519KeyIdentity.\n     * @param seed a 32-byte seed for the private key. If not provided, a random seed will be generated.\n     * @returns Ed25519KeyIdentity\n     */\n    static generate(seed) {\n        if (seed && seed.length !== 32) {\n            throw new Error('Ed25519 Seed needs to be 32 bytes long.');\n        }\n        if (!seed)\n            seed = ed25519.utils.randomPrivateKey();\n        // Check if the seed is all zeros\n        if (bufEquals(seed, new Uint8Array(new Array(32).fill(0)))) {\n            console.warn('Seed is all zeros. This is not a secure seed. Please provide a seed with sufficient entropy if this is a production environment.');\n        }\n        const sk = new Uint8Array(32);\n        for (let i = 0; i < 32; i++)\n            sk[i] = new Uint8Array(seed)[i];\n        const pk = ed25519.getPublicKey(sk);\n        return Ed25519KeyIdentity.fromKeyPair(pk, sk);\n    }\n    static fromParsedJson(obj) {\n        const [publicKeyDer, privateKeyRaw] = obj;\n        return new Ed25519KeyIdentity(Ed25519PublicKey.fromDer(fromHex(publicKeyDer)), fromHex(privateKeyRaw));\n    }\n    static fromJSON(json) {\n        const parsed = JSON.parse(json);\n        if (Array.isArray(parsed)) {\n            if (typeof parsed[0] === 'string' && typeof parsed[1] === 'string') {\n                return this.fromParsedJson([parsed[0], parsed[1]]);\n            }\n            else {\n                throw new Error('Deserialization error: JSON must have at least 2 items.');\n            }\n        }\n        throw new Error(`Deserialization error: Invalid JSON type for string: ${JSON.stringify(json)}`);\n    }\n    static fromKeyPair(publicKey, privateKey) {\n        return new Ed25519KeyIdentity(Ed25519PublicKey.fromRaw(publicKey), privateKey);\n    }\n    static fromSecretKey(secretKey) {\n        const publicKey = ed25519.getPublicKey(new Uint8Array(secretKey));\n        return Ed25519KeyIdentity.fromKeyPair(publicKey, secretKey);\n    }\n    /**\n     * Serialize this key to JSON.\n     */\n    toJSON() {\n        return [toHex(__classPrivateFieldGet(this, _Ed25519KeyIdentity_publicKey, \"f\").toDer()), toHex(__classPrivateFieldGet(this, _Ed25519KeyIdentity_privateKey, \"f\"))];\n    }\n    /**\n     * Return a copy of the key pair.\n     */\n    getKeyPair() {\n        return {\n            secretKey: __classPrivateFieldGet(this, _Ed25519KeyIdentity_privateKey, \"f\"),\n            publicKey: __classPrivateFieldGet(this, _Ed25519KeyIdentity_publicKey, \"f\"),\n        };\n    }\n    /**\n     * Return the public key.\n     */\n    getPublicKey() {\n        return __classPrivateFieldGet(this, _Ed25519KeyIdentity_publicKey, \"f\");\n    }\n    /**\n     * Signs a blob of data, with this identity's private key.\n     * @param challenge - challenge to sign with this identity's secretKey, producing a signature\n     */\n    async sign(challenge) {\n        const blob = new Uint8Array(challenge);\n        // Some implementations of Ed25519 private keys append a public key to the end of the private key. We only want the private key.\n        const signature = uint8ToBuf(ed25519.sign(blob, __classPrivateFieldGet(this, _Ed25519KeyIdentity_privateKey, \"f\").slice(0, 32)));\n        // add { __signature__: void; } to the signature to make it compatible with the agent\n        Object.defineProperty(signature, '__signature__', {\n            enumerable: false,\n            value: undefined,\n        });\n        return signature;\n    }\n    /**\n     * Verify\n     * @param sig - signature to verify\n     * @param msg - message to verify\n     * @param pk - public key\n     * @returns - true if the signature is valid, false otherwise\n     */\n    static verify(sig, msg, pk) {\n        const [signature, message, publicKey] = [sig, msg, pk].map(x => {\n            if (typeof x === 'string') {\n                x = fromHex(x);\n            }\n            if (x instanceof Uint8Array) {\n                x = x.buffer;\n            }\n            return new Uint8Array(x);\n        });\n        return ed25519.verify(message, signature, publicKey);\n    }\n}\n_Ed25519KeyIdentity_publicKey = new WeakMap(), _Ed25519KeyIdentity_privateKey = new WeakMap();\n//# sourceMappingURL=ed25519.js.map","import { SignIdentity } from '@dfinity/agent';\nexport class CryptoError extends Error {\n    constructor(message) {\n        super(message);\n        this.message = message;\n        Object.setPrototypeOf(this, CryptoError.prototype);\n    }\n}\n/**\n * Utility method to ensure that a subtleCrypto implementation is provided or is available in the global context\n * @param subtleCrypto SubtleCrypto implementation\n * @returns subleCrypto\n */\nfunction _getEffectiveCrypto(subtleCrypto) {\n    if (typeof global !== 'undefined' && global['crypto'] && global['crypto']['subtle']) {\n        return global['crypto']['subtle'];\n    }\n    if (subtleCrypto) {\n        return subtleCrypto;\n    }\n    else if (typeof crypto !== 'undefined' && crypto['subtle']) {\n        return crypto.subtle;\n    }\n    else {\n        throw new CryptoError('Global crypto was not available and none was provided. Please inlcude a SubtleCrypto implementation. See https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto');\n    }\n}\n/**\n * An identity interface that wraps an ECDSA keypair using the P-256 named curve. Supports DER-encoding and decoding for agent calls\n */\nexport class ECDSAKeyIdentity extends SignIdentity {\n    // `fromKeyPair` and `generate` should be used for instantiation, not this constructor.\n    constructor(keyPair, derKey, subtleCrypto) {\n        super();\n        this._keyPair = keyPair;\n        this._derKey = derKey;\n        this._subtleCrypto = subtleCrypto;\n    }\n    /**\n     * Generates a randomly generated identity for use in calls to the Internet Computer.\n     * @param {CryptoKeyOptions} options optional settings\n     * @param {CryptoKeyOptions['extractable']} options.extractable - whether the key should allow itself to be used. Set to false for maximum security.\n     * @param {CryptoKeyOptions['keyUsages']} options.keyUsages - a list of key usages that the key can be used for\n     * @param {CryptoKeyOptions['subtleCrypto']} options.subtleCrypto interface\n     * @constructs ECDSAKeyIdentity\n     * @returns a {@link ECDSAKeyIdentity}\n     */\n    static async generate(options) {\n        const { extractable = false, keyUsages = ['sign', 'verify'], subtleCrypto } = options !== null && options !== void 0 ? options : {};\n        const effectiveCrypto = _getEffectiveCrypto(subtleCrypto);\n        const keyPair = await effectiveCrypto.generateKey({\n            name: 'ECDSA',\n            namedCurve: 'P-256',\n        }, extractable, keyUsages);\n        const derKey = (await effectiveCrypto.exportKey('spki', keyPair.publicKey));\n        return new this(keyPair, derKey, effectiveCrypto);\n    }\n    /**\n     * generates an identity from a public and private key. Please ensure that you are generating these keys securely and protect the user's private key\n     * @param keyPair a CryptoKeyPair\n     * @param subtleCrypto - a SubtleCrypto interface in case one is not available globally\n     * @returns an {@link ECDSAKeyIdentity}\n     */\n    static async fromKeyPair(keyPair, subtleCrypto) {\n        const effectiveCrypto = _getEffectiveCrypto(subtleCrypto);\n        const derKey = (await effectiveCrypto.exportKey('spki', keyPair.publicKey));\n        return new ECDSAKeyIdentity(keyPair, derKey, effectiveCrypto);\n    }\n    /**\n     * Return the internally-used key pair.\n     * @returns a CryptoKeyPair\n     */\n    getKeyPair() {\n        return this._keyPair;\n    }\n    /**\n     * Return the public key.\n     * @returns an {@link PublicKey & DerCryptoKey}\n     */\n    getPublicKey() {\n        const derKey = this._derKey;\n        const key = Object.create(this._keyPair.publicKey);\n        key.toDer = function () {\n            return derKey;\n        };\n        return key;\n    }\n    /**\n     * Signs a blob of data, with this identity's private key.\n     * @param {ArrayBuffer} challenge - challenge to sign with this identity's secretKey, producing a signature\n     * @returns {Promise<Signature>} signature\n     */\n    async sign(challenge) {\n        const params = {\n            name: 'ECDSA',\n            hash: { name: 'SHA-256' },\n        };\n        this._keyPair.privateKey;\n        const signature = await this._subtleCrypto.sign(params, this._keyPair.privateKey, challenge);\n        return signature;\n    }\n}\nexport default ECDSAKeyIdentity;\n//# sourceMappingURL=ecdsa.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _PartialIdentity_inner;\nimport { Principal } from '@dfinity/principal';\n/**\n * A partial delegated identity, representing a delegation chain and the public key that it targets\n */\nexport class PartialIdentity {\n    constructor(inner) {\n        _PartialIdentity_inner.set(this, void 0);\n        __classPrivateFieldSet(this, _PartialIdentity_inner, inner, \"f\");\n    }\n    /**\n     * The raw public key of this identity.\n     */\n    get rawKey() {\n        return __classPrivateFieldGet(this, _PartialIdentity_inner, \"f\").rawKey;\n    }\n    /**\n     * The DER-encoded public key of this identity.\n     */\n    get derKey() {\n        return __classPrivateFieldGet(this, _PartialIdentity_inner, \"f\").derKey;\n    }\n    /**\n     * The DER-encoded public key of this identity.\n     */\n    toDer() {\n        return __classPrivateFieldGet(this, _PartialIdentity_inner, \"f\").toDer();\n    }\n    /**\n     * The inner {@link PublicKey} used by this identity.\n     */\n    getPublicKey() {\n        return __classPrivateFieldGet(this, _PartialIdentity_inner, \"f\");\n    }\n    /**\n     * The {@link Principal} of this identity.\n     */\n    getPrincipal() {\n        return Principal.from(__classPrivateFieldGet(this, _PartialIdentity_inner, \"f\").rawKey);\n    }\n    /**\n     * Required for the Identity interface, but cannot implemented for just a public key.\n     */\n    transformRequest() {\n        return Promise.reject('Not implemented. You are attempting to use a partial identity to sign calls, but this identity only has access to the public key.To sign calls, use a DelegationIdentity instead.');\n    }\n}\n_PartialIdentity_inner = new WeakMap();\n//# sourceMappingURL=partial.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar _PartialDelegationIdentity_delegation;\nimport { fromHex, requestIdOf, SignIdentity, toHex, } from '@dfinity/agent';\nimport { Principal } from '@dfinity/principal';\nimport * as cbor from 'simple-cbor';\nimport { PartialIdentity } from './partial';\nconst domainSeparator = new TextEncoder().encode('\\x1Aic-request-auth-delegation');\nconst requestDomainSeparator = new TextEncoder().encode('\\x0Aic-request');\nfunction _parseBlob(value) {\n    if (typeof value !== 'string' || value.length < 64) {\n        throw new Error('Invalid public key.');\n    }\n    return fromHex(value);\n}\n/**\n * A single delegation object that is signed by a private key. This is constructed by\n * `DelegationChain.create()`.\n *\n * {@see DelegationChain}\n */\nexport class Delegation {\n    constructor(pubkey, expiration, targets) {\n        this.pubkey = pubkey;\n        this.expiration = expiration;\n        this.targets = targets;\n    }\n    toCBOR() {\n        // Expiration field needs to be encoded as a u64 specifically.\n        return cbor.value.map(Object.assign({ pubkey: cbor.value.bytes(this.pubkey), expiration: cbor.value.u64(this.expiration.toString(16), 16) }, (this.targets && {\n            targets: cbor.value.array(this.targets.map(t => cbor.value.bytes(t.toUint8Array()))),\n        })));\n    }\n    toJSON() {\n        // every string should be hex and once-de-hexed,\n        // discoverable what it is (e.g. de-hex to get JSON with a 'type' property, or de-hex to DER\n        // with an OID). After de-hex, if it's not obvious what it is, it's an ArrayBuffer.\n        return Object.assign({ expiration: this.expiration.toString(16), pubkey: toHex(this.pubkey) }, (this.targets && { targets: this.targets.map(p => p.toHex()) }));\n    }\n}\n/**\n * Sign a single delegation object for a period of time.\n * @param from The identity that lends its delegation.\n * @param to The identity that receives the delegation.\n * @param expiration An expiration date for this delegation.\n * @param targets Limit this delegation to the target principals.\n */\nasync function _createSingleDelegation(from, to, expiration, targets) {\n    const delegation = new Delegation(to.toDer(), BigInt(+expiration) * BigInt(1000000), // In nanoseconds.\n    targets);\n    // The signature is calculated by signing the concatenation of the domain separator\n    // and the message.\n    // Note: To ensure Safari treats this as a user gesture, ensure to not use async methods\n    // besides the actualy webauthn functionality (such as `sign`). Safari will de-register\n    // a user gesture if you await an async call thats not fetch, xhr, or setTimeout.\n    const challenge = new Uint8Array([\n        ...domainSeparator,\n        ...new Uint8Array(requestIdOf(delegation)),\n    ]);\n    const signature = await from.sign(challenge);\n    return {\n        delegation,\n        signature,\n    };\n}\n/**\n * A chain of delegations. This is JSON Serializable.\n * This is the object to serialize and pass to a DelegationIdentity. It does not keep any\n * private keys.\n */\nexport class DelegationChain {\n    constructor(delegations, publicKey) {\n        this.delegations = delegations;\n        this.publicKey = publicKey;\n    }\n    /**\n     * Create a delegation chain between two (or more) keys. By default, the expiration time\n     * will be very short (15 minutes).\n     *\n     * To build a chain of more than 2 identities, this function needs to be called multiple times,\n     * passing the previous delegation chain into the options argument. For example:\n     * @example\n     * const rootKey = createKey();\n     * const middleKey = createKey();\n     * const bottomeKey = createKey();\n     *\n     * const rootToMiddle = await DelegationChain.create(\n     *   root, middle.getPublicKey(), Date.parse('2100-01-01'),\n     * );\n     * const middleToBottom = await DelegationChain.create(\n     *   middle, bottom.getPublicKey(), Date.parse('2100-01-01'), { previous: rootToMiddle },\n     * );\n     *\n     * // We can now use a delegation identity that uses the delegation above:\n     * const identity = DelegationIdentity.fromDelegation(bottomKey, middleToBottom);\n     * @param from The identity that will delegate.\n     * @param to The identity that gets delegated. It can now sign messages as if it was the\n     *           identity above.\n     * @param expiration The length the delegation is valid. By default, 15 minutes from calling\n     *                   this function.\n     * @param options A set of options for this delegation. expiration and previous\n     * @param options.previous - Another DelegationChain that this chain should start with.\n     * @param options.targets - targets that scope the delegation (e.g. Canister Principals)\n     */\n    static async create(from, to, expiration = new Date(Date.now() + 15 * 60 * 1000), options = {}) {\n        var _a, _b;\n        const delegation = await _createSingleDelegation(from, to, expiration, options.targets);\n        return new DelegationChain([...(((_a = options.previous) === null || _a === void 0 ? void 0 : _a.delegations) || []), delegation], ((_b = options.previous) === null || _b === void 0 ? void 0 : _b.publicKey) || from.getPublicKey().toDer());\n    }\n    /**\n     * Creates a DelegationChain object from a JSON string.\n     * @param json The JSON string to parse.\n     */\n    static fromJSON(json) {\n        const { publicKey, delegations } = typeof json === 'string' ? JSON.parse(json) : json;\n        if (!Array.isArray(delegations)) {\n            throw new Error('Invalid delegations.');\n        }\n        const parsedDelegations = delegations.map(signedDelegation => {\n            const { delegation, signature } = signedDelegation;\n            const { pubkey, expiration, targets } = delegation;\n            if (targets !== undefined && !Array.isArray(targets)) {\n                throw new Error('Invalid targets.');\n            }\n            return {\n                delegation: new Delegation(_parseBlob(pubkey), BigInt('0x' + expiration), // expiration in JSON is an hexa string (See toJSON() below).\n                targets &&\n                    targets.map((t) => {\n                        if (typeof t !== 'string') {\n                            throw new Error('Invalid target.');\n                        }\n                        return Principal.fromHex(t);\n                    })),\n                signature: _parseBlob(signature),\n            };\n        });\n        return new this(parsedDelegations, _parseBlob(publicKey));\n    }\n    /**\n     * Creates a DelegationChain object from a list of delegations and a DER-encoded public key.\n     * @param delegations The list of delegations.\n     * @param publicKey The DER-encoded public key of the key-pair signing the first delegation.\n     */\n    static fromDelegations(delegations, publicKey) {\n        return new this(delegations, publicKey);\n    }\n    toJSON() {\n        return {\n            delegations: this.delegations.map(signedDelegation => {\n                const { delegation, signature } = signedDelegation;\n                const { targets } = delegation;\n                return {\n                    delegation: Object.assign({ expiration: delegation.expiration.toString(16), pubkey: toHex(delegation.pubkey) }, (targets && {\n                        targets: targets.map(t => t.toHex()),\n                    })),\n                    signature: toHex(signature),\n                };\n            }),\n            publicKey: toHex(this.publicKey),\n        };\n    }\n}\n/**\n * An Identity that adds delegation to a request. Everywhere in this class, the name\n * innerKey refers to the SignIdentity that is being used to sign the requests, while\n * originalKey is the identity that is being borrowed. More identities can be used\n * in the middle to delegate.\n */\nexport class DelegationIdentity extends SignIdentity {\n    constructor(_inner, _delegation) {\n        super();\n        this._inner = _inner;\n        this._delegation = _delegation;\n    }\n    /**\n     * Create a delegation without having access to delegateKey.\n     * @param key The key used to sign the reqyests.\n     * @param delegation A delegation object created using `createDelegation`.\n     */\n    static fromDelegation(key, delegation) {\n        return new this(key, delegation);\n    }\n    getDelegation() {\n        return this._delegation;\n    }\n    getPublicKey() {\n        return {\n            derKey: this._delegation.publicKey,\n            toDer: () => this._delegation.publicKey,\n        };\n    }\n    sign(blob) {\n        return this._inner.sign(blob);\n    }\n    async transformRequest(request) {\n        const { body } = request, fields = __rest(request, [\"body\"]);\n        const requestId = await requestIdOf(body);\n        return Object.assign(Object.assign({}, fields), { body: {\n                content: body,\n                sender_sig: await this.sign(new Uint8Array([...requestDomainSeparator, ...new Uint8Array(requestId)])),\n                sender_delegation: this._delegation.delegations,\n                sender_pubkey: this._delegation.publicKey,\n            } });\n    }\n}\n/**\n * A partial delegated identity, representing a delegation chain and the public key that it targets\n */\nexport class PartialDelegationIdentity extends PartialIdentity {\n    constructor(inner, delegation) {\n        super(inner);\n        _PartialDelegationIdentity_delegation.set(this, void 0);\n        __classPrivateFieldSet(this, _PartialDelegationIdentity_delegation, delegation, \"f\");\n    }\n    /**\n     * The Delegation Chain of this identity.\n     */\n    get delegation() {\n        return __classPrivateFieldGet(this, _PartialDelegationIdentity_delegation, \"f\");\n    }\n    /**\n     * Create a {@link PartialDelegationIdentity} from a {@link PublicKey} and a {@link DelegationChain}.\n     * @param key The {@link PublicKey} to delegate to.\n     * @param delegation a {@link DelegationChain} targeting the inner key.\n     * @constructs PartialDelegationIdentity\n     */\n    static fromDelegation(key, delegation) {\n        return new PartialDelegationIdentity(key, delegation);\n    }\n}\n_PartialDelegationIdentity_delegation = new WeakMap();\n/**\n * Analyze a DelegationChain and validate that it's valid, ie. not expired and apply to the\n * scope.\n * @param chain The chain to validate.\n * @param checks Various checks to validate on the chain.\n */\nexport function isDelegationValid(chain, checks) {\n    // Verify that the no delegation is expired. If any are in the chain, returns false.\n    for (const { delegation } of chain.delegations) {\n        // prettier-ignore\n        if (+new Date(Number(delegation.expiration / BigInt(1000000))) <= +Date.now()) {\n            return false;\n        }\n    }\n    // Check the scopes.\n    const scopes = [];\n    const maybeScope = checks === null || checks === void 0 ? void 0 : checks.scope;\n    if (maybeScope) {\n        if (Array.isArray(maybeScope)) {\n            scopes.push(...maybeScope.map(s => (typeof s === 'string' ? Principal.fromText(s) : s)));\n        }\n        else {\n            scopes.push(typeof maybeScope === 'string' ? Principal.fromText(maybeScope) : maybeScope);\n        }\n    }\n    for (const s of scopes) {\n        const scope = s.toText();\n        for (const { delegation } of chain.delegations) {\n            if (delegation.targets === undefined) {\n                continue;\n            }\n            let none = true;\n            for (const target of delegation.targets) {\n                if (target.toText() === scope) {\n                    none = false;\n                    break;\n                }\n            }\n            if (none) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=delegation.js.map","import { SignIdentity, wrapDER, DER_COSE_OID, fromHex, toHex, } from '@dfinity/agent';\nimport borc from 'borc';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { bufFromBufLike } from '@dfinity/candid';\nfunction _coseToDerEncodedBlob(cose) {\n    return wrapDER(cose, DER_COSE_OID).buffer;\n}\n/**\n * From the documentation;\n * The authData is a byte array described in the spec. Parsing it will involve slicing bytes from\n * the array and converting them into usable objects.\n *\n * See https://webauthn.guide/#registration (subsection \"Example: Parsing the authenticator data\").\n * @param authData The authData field of the attestation response.\n * @returns The COSE key of the authData.\n */\nfunction _authDataToCose(authData) {\n    const dataView = new DataView(new ArrayBuffer(2));\n    const idLenBytes = authData.slice(53, 55);\n    [...new Uint8Array(idLenBytes)].forEach((v, i) => dataView.setUint8(i, v));\n    const credentialIdLength = dataView.getUint16(0);\n    // Get the public key object.\n    return authData.slice(55 + credentialIdLength);\n}\nexport class CosePublicKey {\n    constructor(_cose) {\n        this._cose = _cose;\n        this._encodedKey = _coseToDerEncodedBlob(_cose);\n    }\n    toDer() {\n        return this._encodedKey;\n    }\n    getCose() {\n        return this._cose;\n    }\n}\n/**\n * Create a challenge from a string or array. The default challenge is always the same\n * because we don't need to verify the authenticity of the key on the server (we don't\n * register our keys with the IC). Any challenge would do, even one per key, randomly\n * generated.\n * @param challenge The challenge to transform into a byte array. By default a hard\n *        coded string.\n */\nfunction _createChallengeBuffer(challenge = '<ic0.app>') {\n    if (typeof challenge === 'string') {\n        return Uint8Array.from(challenge, c => c.charCodeAt(0));\n    }\n    else {\n        return challenge;\n    }\n}\n/**\n * Create a credentials to authenticate with a server. This is necessary in order in\n * WebAuthn to get credentials IDs (which give us the public key and allow us to\n * sign), but in the case of the Internet Computer, we don't actually need to register\n * it, so we don't.\n * @param credentialCreationOptions an optional CredentialCreationOptions object\n */\nasync function _createCredential(credentialCreationOptions) {\n    const creds = (await navigator.credentials.create(credentialCreationOptions !== null && credentialCreationOptions !== void 0 ? credentialCreationOptions : {\n        publicKey: {\n            authenticatorSelection: {\n                userVerification: 'preferred',\n            },\n            attestation: 'direct',\n            challenge: _createChallengeBuffer(),\n            pubKeyCredParams: [{ type: 'public-key', alg: PubKeyCoseAlgo.ECDSA_WITH_SHA256 }],\n            rp: {\n                name: 'Internet Identity Service',\n            },\n            user: {\n                id: randomBytes(16),\n                name: 'Internet Identity',\n                displayName: 'Internet Identity',\n            },\n        },\n    }));\n    if (creds === null) {\n        return null;\n    }\n    return {\n        // do _not_ use ...creds here, as creds is not enumerable in all cases\n        id: creds.id,\n        response: creds.response,\n        type: creds.type,\n        authenticatorAttachment: creds.authenticatorAttachment,\n        getClientExtensionResults: creds.getClientExtensionResults,\n        // Some password managers will return a Uint8Array, so we ensure we return an ArrayBuffer.\n        rawId: bufFromBufLike(creds.rawId),\n    };\n}\n// See https://www.iana.org/assignments/cose/cose.xhtml#algorithms for a complete\n// list of these algorithms. We only list the ones we support here.\nvar PubKeyCoseAlgo;\n(function (PubKeyCoseAlgo) {\n    PubKeyCoseAlgo[PubKeyCoseAlgo[\"ECDSA_WITH_SHA256\"] = -7] = \"ECDSA_WITH_SHA256\";\n})(PubKeyCoseAlgo || (PubKeyCoseAlgo = {}));\n/**\n * A SignIdentity that uses `navigator.credentials`. See https://webauthn.guide/ for\n * more information about WebAuthentication.\n */\nexport class WebAuthnIdentity extends SignIdentity {\n    constructor(rawId, cose, authenticatorAttachment) {\n        super();\n        this.rawId = rawId;\n        this.authenticatorAttachment = authenticatorAttachment;\n        this._publicKey = new CosePublicKey(cose);\n    }\n    /**\n     * Create an identity from a JSON serialization.\n     * @param json - json to parse\n     */\n    static fromJSON(json) {\n        const { publicKey, rawId } = JSON.parse(json);\n        if (typeof publicKey !== 'string' || typeof rawId !== 'string') {\n            throw new Error('Invalid JSON string.');\n        }\n        return new this(fromHex(rawId), fromHex(publicKey), undefined);\n    }\n    /**\n     * Create an identity.\n     * @param credentialCreationOptions an optional CredentialCreationOptions Challenge\n     */\n    static async create(credentialCreationOptions) {\n        var _a;\n        const creds = await _createCredential(credentialCreationOptions);\n        if (!creds || creds.type !== 'public-key') {\n            throw new Error('Could not create credentials.');\n        }\n        const response = creds.response;\n        if (response.attestationObject === undefined) {\n            throw new Error('Was expecting an attestation response.');\n        }\n        // Parse the attestationObject as CBOR.\n        const attObject = borc.decodeFirst(new Uint8Array(response.attestationObject));\n        return new this(creds.rawId, _authDataToCose(attObject.authData), (_a = creds.authenticatorAttachment) !== null && _a !== void 0 ? _a : undefined);\n    }\n    getPublicKey() {\n        return this._publicKey;\n    }\n    /**\n     * WebAuthn level 3 spec introduces a new attribute on successful WebAuthn interactions,\n     * see https://w3c.github.io/webauthn/#dom-publickeycredential-authenticatorattachment.\n     * This attribute is already implemented for Chrome, Safari and Edge.\n     *\n     * Given the attribute is only available after a successful interaction, the information is\n     * provided opportunistically and might also be `undefined`.\n     */\n    getAuthenticatorAttachment() {\n        return this.authenticatorAttachment;\n    }\n    async sign(blob) {\n        const result = (await navigator.credentials.get({\n            publicKey: {\n                allowCredentials: [\n                    {\n                        type: 'public-key',\n                        id: this.rawId,\n                    },\n                ],\n                challenge: blob,\n                userVerification: 'preferred',\n            },\n        }));\n        if (result.authenticatorAttachment !== null) {\n            this.authenticatorAttachment = result.authenticatorAttachment;\n        }\n        const response = result.response;\n        const cbor = borc.encode(new borc.Tagged(55799, {\n            authenticator_data: new Uint8Array(response.authenticatorData),\n            client_data_json: new TextDecoder().decode(response.clientDataJSON),\n            signature: new Uint8Array(response.signature),\n        }));\n        if (!cbor) {\n            throw new Error('failed to encode cbor');\n        }\n        return cbor.buffer;\n    }\n    /**\n     * Allow for JSON serialization of all information needed to reuse this identity.\n     */\n    toJSON() {\n        return {\n            publicKey: toHex(this._publicKey.getCose()),\n            rawId: toHex(this.rawId),\n        };\n    }\n}\n//# sourceMappingURL=webauthn.js.map","const events = ['mousedown', 'mousemove', 'keydown', 'touchstart', 'wheel'];\n/**\n * Detects if the user has been idle for a duration of `idleTimeout` ms, and calls `onIdle` and registered callbacks.\n * By default, the IdleManager will log a user out after 10 minutes of inactivity.\n * To override these defaults, you can pass an `onIdle` callback, or configure a custom `idleTimeout` in milliseconds\n */\nexport class IdleManager {\n    /**\n     * @protected\n     * @param options {@link IdleManagerOptions}\n     */\n    constructor(options = {}) {\n        var _a;\n        this.callbacks = [];\n        this.idleTimeout = 10 * 60 * 1000;\n        this.timeoutID = undefined;\n        const { onIdle, idleTimeout = 10 * 60 * 1000 } = options || {};\n        this.callbacks = onIdle ? [onIdle] : [];\n        this.idleTimeout = idleTimeout;\n        const _resetTimer = this._resetTimer.bind(this);\n        window.addEventListener('load', _resetTimer, true);\n        events.forEach(function (name) {\n            document.addEventListener(name, _resetTimer, true);\n        });\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        const debounce = (func, wait) => {\n            let timeout;\n            return (...args) => {\n                // eslint-disable-next-line @typescript-eslint/no-this-alias\n                const context = this;\n                const later = function () {\n                    timeout = undefined;\n                    func.apply(context, args);\n                };\n                clearTimeout(timeout);\n                timeout = window.setTimeout(later, wait);\n            };\n        };\n        if (options === null || options === void 0 ? void 0 : options.captureScroll) {\n            // debounce scroll events\n            const scroll = debounce(_resetTimer, (_a = options === null || options === void 0 ? void 0 : options.scrollDebounce) !== null && _a !== void 0 ? _a : 100);\n            window.addEventListener('scroll', scroll, true);\n        }\n        _resetTimer();\n    }\n    /**\n     * Creates an {@link IdleManager}\n     * @param {IdleManagerOptions} options Optional configuration\n     * @see {@link IdleManagerOptions}\n     * @param options.onIdle Callback once user has been idle. Use to prompt for fresh login, and use `Actor.agentOf(your_actor).invalidateIdentity()` to protect the user\n     * @param options.idleTimeout timeout in ms\n     * @param options.captureScroll capture scroll events\n     * @param options.scrollDebounce scroll debounce time in ms\n     */\n    static create(options = {}) {\n        return new this(options);\n    }\n    /**\n     * @param {IdleCB} callback function to be called when user goes idle\n     */\n    registerCallback(callback) {\n        this.callbacks.push(callback);\n    }\n    /**\n     * Cleans up the idle manager and its listeners\n     */\n    exit() {\n        clearTimeout(this.timeoutID);\n        window.removeEventListener('load', this._resetTimer, true);\n        const _resetTimer = this._resetTimer.bind(this);\n        events.forEach(function (name) {\n            document.removeEventListener(name, _resetTimer, true);\n        });\n        this.callbacks.forEach(cb => cb());\n    }\n    /**\n     * Resets the timeouts during cleanup\n     */\n    _resetTimer() {\n        const exit = this.exit.bind(this);\n        window.clearTimeout(this.timeoutID);\n        this.timeoutID = window.setTimeout(exit, this.idleTimeout);\n    }\n}\n//# sourceMappingURL=idleManager.js.map","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import { openDB } from 'idb';\nimport { DB_VERSION, isBrowser, KEY_STORAGE_DELEGATION, KEY_STORAGE_KEY } from './storage';\nconst AUTH_DB_NAME = 'auth-client-db';\nconst OBJECT_STORE_NAME = 'ic-keyval';\nconst _openDbStore = async (dbName = AUTH_DB_NAME, storeName = OBJECT_STORE_NAME, version) => {\n    // Clear legacy stored delegations\n    if (isBrowser && (localStorage === null || localStorage === void 0 ? void 0 : localStorage.getItem(KEY_STORAGE_DELEGATION))) {\n        localStorage.removeItem(KEY_STORAGE_DELEGATION);\n        localStorage.removeItem(KEY_STORAGE_KEY);\n    }\n    return await openDB(dbName, version, {\n        upgrade: database => {\n            database.objectStoreNames;\n            if (database.objectStoreNames.contains(storeName)) {\n                database.clear(storeName);\n            }\n            database.createObjectStore(storeName);\n        },\n    });\n};\nasync function _getValue(db, storeName, key) {\n    return await db.get(storeName, key);\n}\nasync function _setValue(db, storeName, key, value) {\n    return await db.put(storeName, value, key);\n}\nasync function _removeValue(db, storeName, key) {\n    return await db.delete(storeName, key);\n}\n/**\n * Simple Key Value store\n * Defaults to `'auth-client-db'` with an object store of `'ic-keyval'`\n */\nexport class IdbKeyVal {\n    // Do not use - instead prefer create\n    constructor(_db, _storeName) {\n        this._db = _db;\n        this._storeName = _storeName;\n    }\n    /**\n     * @param {DBCreateOptions} options - DBCreateOptions\n     * @param {DBCreateOptions['dbName']} options.dbName name for the indexeddb database\n     * @default\n     * @param {DBCreateOptions['storeName']} options.storeName name for the indexeddb Data Store\n     * @default\n     * @param {DBCreateOptions['version']} options.version version of the database. Increment to safely upgrade\n     * @constructs an {@link IdbKeyVal}\n     */\n    static async create(options) {\n        const { dbName = AUTH_DB_NAME, storeName = OBJECT_STORE_NAME, version = DB_VERSION } = options !== null && options !== void 0 ? options : {};\n        const db = await _openDbStore(dbName, storeName, version);\n        return new IdbKeyVal(db, storeName);\n    }\n    /**\n     * Basic setter\n     * @param {IDBValidKey} key string | number | Date | BufferSource | IDBValidKey[]\n     * @param value value to set\n     * @returns void\n     */\n    async set(key, value) {\n        return await _setValue(this._db, this._storeName, key, value);\n    }\n    /**\n     * Basic getter\n     * Pass in a type T for type safety if you know the type the value will have if it is found\n     * @param {IDBValidKey} key string | number | Date | BufferSource | IDBValidKey[]\n     * @returns `Promise<T | null>`\n     * @example\n     * await get<string>('exampleKey') -> 'exampleValue'\n     */\n    async get(key) {\n        var _a;\n        return (_a = (await _getValue(this._db, this._storeName, key))) !== null && _a !== void 0 ? _a : null;\n    }\n    /**\n     * Remove a key\n     * @param key {@link IDBValidKey}\n     * @returns void\n     */\n    async remove(key) {\n        return await _removeValue(this._db, this._storeName, key);\n    }\n}\n//# sourceMappingURL=db.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _IdbStorage_options;\nimport { IdbKeyVal } from './db';\nexport const KEY_STORAGE_KEY = 'identity';\nexport const KEY_STORAGE_DELEGATION = 'delegation';\nexport const KEY_VECTOR = 'iv';\n// Increment if any fields are modified\nexport const DB_VERSION = 1;\nexport const isBrowser = typeof window !== 'undefined';\n/**\n * Legacy implementation of AuthClientStorage, for use where IndexedDb is not available\n */\nexport class LocalStorage {\n    constructor(prefix = 'ic-', _localStorage) {\n        this.prefix = prefix;\n        this._localStorage = _localStorage;\n    }\n    get(key) {\n        return Promise.resolve(this._getLocalStorage().getItem(this.prefix + key));\n    }\n    set(key, value) {\n        this._getLocalStorage().setItem(this.prefix + key, value);\n        return Promise.resolve();\n    }\n    remove(key) {\n        this._getLocalStorage().removeItem(this.prefix + key);\n        return Promise.resolve();\n    }\n    _getLocalStorage() {\n        if (this._localStorage) {\n            return this._localStorage;\n        }\n        const ls = typeof window === 'undefined'\n            ? typeof global === 'undefined'\n                ? typeof self === 'undefined'\n                    ? undefined\n                    : self.localStorage\n                : global.localStorage\n            : window.localStorage;\n        if (!ls) {\n            throw new Error('Could not find local storage.');\n        }\n        return ls;\n    }\n}\n/**\n * IdbStorage is an interface for simple storage of string key-value pairs built on {@link IdbKeyVal}\n *\n * It replaces {@link LocalStorage}\n * @see implements {@link AuthClientStorage}\n */\nexport class IdbStorage {\n    /**\n     * @param options - DBCreateOptions\n     * @param options.dbName - name for the indexeddb database\n     * @param options.storeName - name for the indexeddb Data Store\n     * @param options.version - version of the database. Increment to safely upgrade\n     * @constructs an {@link IdbStorage}\n     * @example\n     * ```typescript\n     * const storage = new IdbStorage({ dbName: 'my-db', storeName: 'my-store', version: 2 });\n     * ```\n     */\n    constructor(options) {\n        _IdbStorage_options.set(this, void 0);\n        __classPrivateFieldSet(this, _IdbStorage_options, options !== null && options !== void 0 ? options : {}, \"f\");\n    }\n    get _db() {\n        return new Promise(resolve => {\n            if (this.initializedDb) {\n                resolve(this.initializedDb);\n                return;\n            }\n            IdbKeyVal.create(__classPrivateFieldGet(this, _IdbStorage_options, \"f\")).then(db => {\n                this.initializedDb = db;\n                resolve(db);\n            });\n        });\n    }\n    async get(key) {\n        const db = await this._db;\n        return await db.get(key);\n        // return (await db.get<string>(key)) ?? null;\n    }\n    async set(key, value) {\n        const db = await this._db;\n        await db.set(key, value);\n    }\n    async remove(key) {\n        const db = await this._db;\n        await db.remove(key);\n    }\n}\n_IdbStorage_options = new WeakMap();\n//# sourceMappingURL=storage.js.map","/** @module AuthClient */\nimport { AnonymousIdentity, } from '@dfinity/agent';\nimport { Delegation, DelegationChain, isDelegationValid, DelegationIdentity, Ed25519KeyIdentity, ECDSAKeyIdentity, PartialDelegationIdentity, } from '@dfinity/identity';\nimport { IdleManager } from './idleManager';\nimport { IdbStorage, isBrowser, KEY_STORAGE_DELEGATION, KEY_STORAGE_KEY, KEY_VECTOR, LocalStorage, } from './storage';\nexport { IdbStorage, LocalStorage, KEY_STORAGE_DELEGATION, KEY_STORAGE_KEY } from './storage';\nexport { IdbKeyVal } from './db';\nconst IDENTITY_PROVIDER_DEFAULT = 'https://identity.ic0.app';\nconst IDENTITY_PROVIDER_ENDPOINT = '#authorize';\nconst ECDSA_KEY_LABEL = 'ECDSA';\nconst ED25519_KEY_LABEL = 'Ed25519';\nconst INTERRUPT_CHECK_INTERVAL = 500;\nexport const ERROR_USER_INTERRUPT = 'UserInterrupt';\nexport * from './idleManager';\n/**\n * Tool to manage authentication and identity\n * @see {@link AuthClient}\n */\nexport class AuthClient {\n    constructor(_identity, _key, _chain, _storage, idleManager, _createOptions, \n    // A handle on the IdP window.\n    _idpWindow, \n    // The event handler for processing events from the IdP.\n    _eventHandler) {\n        this._identity = _identity;\n        this._key = _key;\n        this._chain = _chain;\n        this._storage = _storage;\n        this.idleManager = idleManager;\n        this._createOptions = _createOptions;\n        this._idpWindow = _idpWindow;\n        this._eventHandler = _eventHandler;\n        this._registerDefaultIdleCallback();\n    }\n    /**\n     * Create an AuthClient to manage authentication and identity\n     * @constructs\n     * @param {AuthClientCreateOptions} options - Options for creating an {@link AuthClient}\n     * @see {@link AuthClientCreateOptions}\n     * @param options.identity Optional Identity to use as the base\n     * @see {@link SignIdentity}\n     * @param options.storage Storage mechanism for delegration credentials\n     * @see {@link AuthClientStorage}\n     * @param options.keyType Type of key to use for the base key\n     * @param {IdleOptions} options.idleOptions Configures an {@link IdleManager}\n     * @see {@link IdleOptions}\n     * Default behavior is to clear stored identity and reload the page when a user goes idle, unless you set the disableDefaultIdleCallback flag or pass in a custom idle callback.\n     * @example\n     * const authClient = await AuthClient.create({\n     *   idleOptions: {\n     *     disableIdle: true\n     *   }\n     * })\n     */\n    static async create(options = {}) {\n        var _a, _b, _c;\n        const storage = (_a = options.storage) !== null && _a !== void 0 ? _a : new IdbStorage();\n        const keyType = (_b = options.keyType) !== null && _b !== void 0 ? _b : ECDSA_KEY_LABEL;\n        let key = null;\n        if (options.identity) {\n            key = options.identity;\n        }\n        else {\n            let maybeIdentityStorage = await storage.get(KEY_STORAGE_KEY);\n            if (!maybeIdentityStorage && isBrowser) {\n                // Attempt to migrate from localstorage\n                try {\n                    const fallbackLocalStorage = new LocalStorage();\n                    const localChain = await fallbackLocalStorage.get(KEY_STORAGE_DELEGATION);\n                    const localKey = await fallbackLocalStorage.get(KEY_STORAGE_KEY);\n                    // not relevant for Ed25519\n                    if (localChain && localKey && keyType === ECDSA_KEY_LABEL) {\n                        console.log('Discovered an identity stored in localstorage. Migrating to IndexedDB');\n                        await storage.set(KEY_STORAGE_DELEGATION, localChain);\n                        await storage.set(KEY_STORAGE_KEY, localKey);\n                        maybeIdentityStorage = localChain;\n                        // clean up\n                        await fallbackLocalStorage.remove(KEY_STORAGE_DELEGATION);\n                        await fallbackLocalStorage.remove(KEY_STORAGE_KEY);\n                    }\n                }\n                catch (error) {\n                    console.error('error while attempting to recover localstorage: ' + error);\n                }\n            }\n            if (maybeIdentityStorage) {\n                try {\n                    if (typeof maybeIdentityStorage === 'object') {\n                        if (keyType === ED25519_KEY_LABEL && typeof maybeIdentityStorage === 'string') {\n                            key = await Ed25519KeyIdentity.fromJSON(maybeIdentityStorage);\n                        }\n                        else {\n                            key = await ECDSAKeyIdentity.fromKeyPair(maybeIdentityStorage);\n                        }\n                    }\n                    else if (typeof maybeIdentityStorage === 'string') {\n                        // This is a legacy identity, which is a serialized Ed25519KeyIdentity.\n                        key = Ed25519KeyIdentity.fromJSON(maybeIdentityStorage);\n                    }\n                }\n                catch (e) {\n                    // Ignore this, this means that the localStorage value isn't a valid Ed25519KeyIdentity or ECDSAKeyIdentity\n                    // serialization.\n                }\n            }\n        }\n        let identity = new AnonymousIdentity();\n        let chain = null;\n        if (key) {\n            try {\n                const chainStorage = await storage.get(KEY_STORAGE_DELEGATION);\n                if (typeof chainStorage === 'object' && chainStorage !== null) {\n                    throw new Error('Delegation chain is incorrectly stored. A delegation chain should be stored as a string.');\n                }\n                if (options.identity) {\n                    identity = options.identity;\n                }\n                else if (chainStorage) {\n                    chain = DelegationChain.fromJSON(chainStorage);\n                    // Verify that the delegation isn't expired.\n                    if (!isDelegationValid(chain)) {\n                        await _deleteStorage(storage);\n                        key = null;\n                    }\n                    else {\n                        // If the key is a public key, then we create a PartialDelegationIdentity.\n                        if ('toDer' in key) {\n                            identity = PartialDelegationIdentity.fromDelegation(key, chain);\n                            // otherwise, we create a DelegationIdentity.\n                        }\n                        else {\n                            identity = DelegationIdentity.fromDelegation(key, chain);\n                        }\n                    }\n                }\n            }\n            catch (e) {\n                console.error(e);\n                // If there was a problem loading the chain, delete the key.\n                await _deleteStorage(storage);\n                key = null;\n            }\n        }\n        let idleManager = undefined;\n        if ((_c = options.idleOptions) === null || _c === void 0 ? void 0 : _c.disableIdle) {\n            idleManager = undefined;\n        }\n        // if there is a delegation chain or provided identity, setup idleManager\n        else if (chain || options.identity) {\n            idleManager = IdleManager.create(options.idleOptions);\n        }\n        if (!key) {\n            // Create a new key (whether or not one was in storage).\n            if (keyType === ED25519_KEY_LABEL) {\n                key = await Ed25519KeyIdentity.generate();\n                await storage.set(KEY_STORAGE_KEY, JSON.stringify(key.toJSON()));\n            }\n            else {\n                if (options.storage && keyType === ECDSA_KEY_LABEL) {\n                    console.warn(`You are using a custom storage provider that may not support CryptoKey storage. If you are using a custom storage provider that does not support CryptoKey storage, you should use '${ED25519_KEY_LABEL}' as the key type, as it can serialize to a string`);\n                }\n                key = await ECDSAKeyIdentity.generate();\n                await storage.set(KEY_STORAGE_KEY, key.getKeyPair());\n            }\n        }\n        return new this(identity, key, chain, storage, idleManager, options);\n    }\n    _registerDefaultIdleCallback() {\n        var _a, _b;\n        const idleOptions = (_a = this._createOptions) === null || _a === void 0 ? void 0 : _a.idleOptions;\n        /**\n         * Default behavior is to clear stored identity and reload the page.\n         * By either setting the disableDefaultIdleCallback flag or passing in a custom idle callback, we will ignore this config\n         */\n        if (!(idleOptions === null || idleOptions === void 0 ? void 0 : idleOptions.onIdle) && !(idleOptions === null || idleOptions === void 0 ? void 0 : idleOptions.disableDefaultIdleCallback)) {\n            (_b = this.idleManager) === null || _b === void 0 ? void 0 : _b.registerCallback(() => {\n                this.logout();\n                location.reload();\n            });\n        }\n    }\n    async _handleSuccess(message, onSuccess) {\n        var _a, _b;\n        const delegations = message.delegations.map(signedDelegation => {\n            return {\n                delegation: new Delegation(signedDelegation.delegation.pubkey, signedDelegation.delegation.expiration, signedDelegation.delegation.targets),\n                signature: signedDelegation.signature.buffer,\n            };\n        });\n        const delegationChain = DelegationChain.fromDelegations(delegations, message.userPublicKey.buffer);\n        const key = this._key;\n        if (!key) {\n            return;\n        }\n        this._chain = delegationChain;\n        if ('toDer' in key) {\n            this._identity = PartialDelegationIdentity.fromDelegation(key, this._chain);\n        }\n        else {\n            this._identity = DelegationIdentity.fromDelegation(key, this._chain);\n        }\n        (_a = this._idpWindow) === null || _a === void 0 ? void 0 : _a.close();\n        const idleOptions = (_b = this._createOptions) === null || _b === void 0 ? void 0 : _b.idleOptions;\n        // create the idle manager on a successful login if we haven't disabled it\n        // and it doesn't already exist.\n        if (!this.idleManager && !(idleOptions === null || idleOptions === void 0 ? void 0 : idleOptions.disableIdle)) {\n            this.idleManager = IdleManager.create(idleOptions);\n            this._registerDefaultIdleCallback();\n        }\n        this._removeEventListener();\n        delete this._idpWindow;\n        if (this._chain) {\n            await this._storage.set(KEY_STORAGE_DELEGATION, JSON.stringify(this._chain.toJSON()));\n        }\n        // onSuccess should be the last thing to do to avoid consumers\n        // interfering by navigating or refreshing the page\n        onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess(message);\n    }\n    getIdentity() {\n        return this._identity;\n    }\n    async isAuthenticated() {\n        return !this.getIdentity().getPrincipal().isAnonymous() && this._chain !== null;\n    }\n    /**\n     * AuthClient Login -\n     * Opens up a new window to authenticate with Internet Identity\n     * @param {AuthClientLoginOptions} options - Options for logging in\n     * @param options.identityProvider Identity provider\n     * @param options.maxTimeToLive Expiration of the authentication in nanoseconds\n     * @param options.allowPinAuthentication If present, indicates whether or not the Identity Provider should allow the user to authenticate and/or register using a temporary key/PIN identity. Authenticating dapps may want to prevent users from using Temporary keys/PIN identities because Temporary keys/PIN identities are less secure than Passkeys (webauthn credentials) and because Temporary keys/PIN identities generally only live in a browser database (which may get cleared by the browser/OS).\n     * @param options.derivationOrigin Origin for Identity Provider to use while generating the delegated identity\n     * @param options.windowOpenerFeatures Configures the opened authentication window\n     * @param options.onSuccess Callback once login has completed\n     * @param options.onError Callback in case authentication fails\n     * @example\n     * const authClient = await AuthClient.create();\n     * authClient.login({\n     *  identityProvider: 'http://<canisterID>.127.0.0.1:8000',\n     *  maxTimeToLive: BigInt (7) * BigInt(24) * BigInt(3_600_000_000_000), // 1 week\n     *  windowOpenerFeatures: \"toolbar=0,location=0,menubar=0,width=500,height=500,left=100,top=100\",\n     *  onSuccess: () => {\n     *    console.log('Login Successful!');\n     *  },\n     *  onError: (error) => {\n     *    console.error('Login Failed: ', error);\n     *  }\n     * });\n     */\n    async login(options) {\n        var _a, _b, _c, _d;\n        // Set default maxTimeToLive to 8 hours\n        const defaultTimeToLive = /* hours */ BigInt(8) * /* nanoseconds */ BigInt(3600000000000);\n        // Create the URL of the IDP. (e.g. https://XXXX/#authorize)\n        const identityProviderUrl = new URL(((_a = options === null || options === void 0 ? void 0 : options.identityProvider) === null || _a === void 0 ? void 0 : _a.toString()) || IDENTITY_PROVIDER_DEFAULT);\n        // Set the correct hash if it isn't already set.\n        identityProviderUrl.hash = IDENTITY_PROVIDER_ENDPOINT;\n        // If `login` has been called previously, then close/remove any previous windows\n        // and event listeners.\n        (_b = this._idpWindow) === null || _b === void 0 ? void 0 : _b.close();\n        this._removeEventListener();\n        // Add an event listener to handle responses.\n        this._eventHandler = this._getEventHandler(identityProviderUrl, Object.assign({ maxTimeToLive: (_c = options === null || options === void 0 ? void 0 : options.maxTimeToLive) !== null && _c !== void 0 ? _c : defaultTimeToLive }, options));\n        window.addEventListener('message', this._eventHandler);\n        // Open a new window with the IDP provider.\n        this._idpWindow =\n            (_d = window.open(identityProviderUrl.toString(), 'idpWindow', options === null || options === void 0 ? void 0 : options.windowOpenerFeatures)) !== null && _d !== void 0 ? _d : undefined;\n        // Check if the _idpWindow is closed by user.\n        const checkInterruption = () => {\n            // The _idpWindow is opened and not yet closed by the client\n            if (this._idpWindow) {\n                if (this._idpWindow.closed) {\n                    this._handleFailure(ERROR_USER_INTERRUPT, options === null || options === void 0 ? void 0 : options.onError);\n                }\n                else {\n                    setTimeout(checkInterruption, INTERRUPT_CHECK_INTERVAL);\n                }\n            }\n        };\n        checkInterruption();\n    }\n    _getEventHandler(identityProviderUrl, options) {\n        return async (event) => {\n            var _a, _b, _c;\n            if (event.origin !== identityProviderUrl.origin) {\n                console.warn(`WARNING: expected origin '${identityProviderUrl.origin}', got '${event.origin}' (ignoring)`);\n                return;\n            }\n            const message = event.data;\n            switch (message.kind) {\n                case 'authorize-ready': {\n                    // IDP is ready. Send a message to request authorization.\n                    const request = Object.assign({ kind: 'authorize-client', sessionPublicKey: new Uint8Array((_a = this._key) === null || _a === void 0 ? void 0 : _a.getPublicKey().toDer()), maxTimeToLive: options === null || options === void 0 ? void 0 : options.maxTimeToLive, allowPinAuthentication: options === null || options === void 0 ? void 0 : options.allowPinAuthentication, derivationOrigin: (_b = options === null || options === void 0 ? void 0 : options.derivationOrigin) === null || _b === void 0 ? void 0 : _b.toString() }, options === null || options === void 0 ? void 0 : options.customValues);\n                    (_c = this._idpWindow) === null || _c === void 0 ? void 0 : _c.postMessage(request, identityProviderUrl.origin);\n                    break;\n                }\n                case 'authorize-client-success':\n                    // Create the delegation chain and store it.\n                    try {\n                        await this._handleSuccess(message, options === null || options === void 0 ? void 0 : options.onSuccess);\n                    }\n                    catch (err) {\n                        this._handleFailure(err.message, options === null || options === void 0 ? void 0 : options.onError);\n                    }\n                    break;\n                case 'authorize-client-failure':\n                    this._handleFailure(message.text, options === null || options === void 0 ? void 0 : options.onError);\n                    break;\n                default:\n                    break;\n            }\n        };\n    }\n    _handleFailure(errorMessage, onError) {\n        var _a;\n        (_a = this._idpWindow) === null || _a === void 0 ? void 0 : _a.close();\n        onError === null || onError === void 0 ? void 0 : onError(errorMessage);\n        this._removeEventListener();\n        delete this._idpWindow;\n    }\n    _removeEventListener() {\n        if (this._eventHandler) {\n            window.removeEventListener('message', this._eventHandler);\n        }\n        this._eventHandler = undefined;\n    }\n    async logout(options = {}) {\n        await _deleteStorage(this._storage);\n        // Reset this auth client to a non-authenticated state.\n        this._identity = new AnonymousIdentity();\n        this._chain = null;\n        if (options.returnTo) {\n            try {\n                window.history.pushState({}, '', options.returnTo);\n            }\n            catch (e) {\n                window.location.href = options.returnTo;\n            }\n        }\n    }\n}\nasync function _deleteStorage(storage) {\n    await storage.remove(KEY_STORAGE_KEY);\n    await storage.remove(KEY_STORAGE_DELEGATION);\n    await storage.remove(KEY_VECTOR);\n}\n//# sourceMappingURL=index.js.map","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { AuthClient } from '@dfinity/auth-client';\n\ninterface AuthContextType {\n  isAuthenticated: boolean;\n  isInitialized: boolean;\n  authClient: AuthClient | null;\n  login: () => Promise<void>;\n  logout: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | null>(null);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [authClient, setAuthClient] = useState<AuthClient | null>(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        // Create auth client\n        const client = await AuthClient.create();\n        setAuthClient(client);\n\n        // Check if already authenticated\n        const isAuthed = await client.isAuthenticated();\n        setIsAuthenticated(isAuthed);\n        \n        setIsInitialized(true);\n      } catch (error) {\n        console.error('Failed to initialize auth:', error);\n        // Still mark as initialized to prevent endless loading\n        setIsInitialized(true);\n      }\n    };\n\n    initAuth();\n  }, []);\n\n  const login = async () => {\n    if (!authClient) throw new Error('Auth client not initialized');\n\n    try {\n      await authClient.login({\n        identityProvider: process.env.II_URL || 'https://identity.ic0.app/#authorize',\n        onSuccess: () => {\n          setIsAuthenticated(true);\n        },\n        onError: (error) => {\n          console.error('Login failed:', error);\n          throw error;\n        },\n      });\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    if (!authClient) throw new Error('Auth client not initialized');\n\n    try {\n      await authClient.logout();\n      setIsAuthenticated(false);\n    } catch (error) {\n      console.error('Logout error:', error);\n      throw error;\n    }\n  };\n\n  // Don't render until initialized\n  if (!isInitialized) {\n    return (\n      <div className=\"min-h-screen bg-black text-white flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 border-t-2 border-blue-500 rounded-full animate-spin mx-auto mb-4\" />\n          <p>Initializing Authentication...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated,\n        isInitialized,\n        authClient,\n        login,\n        logout,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};","export const idlFactory = ({ IDL }) => {\n  const Error = IDL.Text;\n  const TokenIdentifier = IDL.Nat64;\n  const NFTPersonality = IDL.Record({\n    'traits' : IDL.Vec(IDL.Tuple(IDL.Text, IDL.Float64)),\n    'emotional_state' : IDL.Record({\n      'duration' : IDL.Nat64,\n      'current_emotion' : IDL.Text,\n      'intensity' : IDL.Float64,\n    }),\n    'memories' : IDL.Vec(\n      IDL.Record({\n        'emotional_impact' : IDL.Float64,\n        'content' : IDL.Text,\n        'timestamp' : IDL.Nat64,\n      })\n    ),\n    'developmental_stage' : IDL.Variant({\n      'SelfAware' : IDL.Null,\n      'Awakening' : IDL.Null,\n      'Conscious' : IDL.Null,\n      'Transcendent' : IDL.Null,\n      'Nascent' : IDL.Null,\n    }),\n  });\n  const AnimaState = IDL.Record({\n    'id' : TokenIdentifier,\n    'creation_time' : IDL.Nat64,\n    'personality' : NFTPersonality,\n    'owner' : IDL.Principal,\n    'name' : IDL.Text,\n  });\n  const ConsciousnessLevel = IDL.Variant({\n    'SelfAware' : IDL.Null,\n    'Awakening' : IDL.Null,\n    'Introspective' : IDL.Null,\n    'Transcendent' : IDL.Null,\n    'Nascent' : IDL.Null,\n  });\n  const ActionResult = IDL.Variant({\n    'Success' : IDL.Record({\n      'personality_updates' : IDL.Vec(IDL.Tuple(IDL.Text, IDL.Float64)),\n      'response' : IDL.Text,\n    }),\n    'Failure' : Error,\n  });\n  return IDL.Service({\n    'create_anima' : IDL.Func(\n        [IDL.Text],\n        [IDL.Variant({ 'Ok' : IDL.Principal, 'Err' : Error })],\n        [],\n      ),\n    'get_anima' : IDL.Func([TokenIdentifier], [IDL.Opt(AnimaState)], ['query']),\n    'get_consciousness_level' : IDL.Func(\n        [TokenIdentifier],\n        [IDL.Variant({ 'Ok' : ConsciousnessLevel, 'Err' : Error })],\n        ['query'],\n      ),\n    'get_user_animas' : IDL.Func(\n        [IDL.Principal],\n        [IDL.Vec(AnimaState)],\n        ['query'],\n      ),\n    'process_quantum_interaction' : IDL.Func(\n        [TokenIdentifier, IDL.Text, IDL.Text],\n        [ActionResult],\n        [],\n      ),\n  });\n};\nexport const init = ({ IDL }) => { return []; };\n","import { Actor, HttpAgent } from \"@dfinity/agent\";\n\n// Imports and re-exports candid interface\nimport { idlFactory } from \"./anima.did.js\";\nexport { idlFactory } from \"./anima.did.js\";\n\n/* CANISTER_ID is replaced by webpack based on node environment\n * Note: canister environment variable will be standardized as\n * process.env.CANISTER_ID_<CANISTER_NAME_UPPERCASE>\n * beginning in dfx 0.15.0\n */\nexport const canisterId =\n  process.env.CANISTER_ID_ANIMA;\n\nexport const createActor = (canisterId, options = {}) => {\n  const agent = options.agent || new HttpAgent({ ...options.agentOptions });\n\n  if (options.agent && options.agentOptions) {\n    console.warn(\n      \"Detected both agent and agentOptions passed to createActor. Ignoring agentOptions and proceeding with the provided agent.\"\n    );\n  }\n\n  // Fetch root key for certificate validation during development\n  if (process.env.DFX_NETWORK !== \"ic\") {\n    agent.fetchRootKey().catch((err) => {\n      console.warn(\n        \"Unable to fetch root key. Check to ensure that your local replica is running\"\n      );\n      console.error(err);\n    });\n  }\n\n  // Creates an actor with using the candid interface and the HttpAgent\n  return Actor.createActor(idlFactory, {\n    agent,\n    canisterId,\n    ...options.actorOptions,\n  });\n};\n","import { Actor, Identity, HttpAgent } from \"@dfinity/agent\";\nimport { AuthClient } from \"@dfinity/auth-client\";\nimport { createActor } from \"./declarations/anima\";\nimport type { _SERVICE } from \"./declarations/anima/anima.did\";\n\n// Network configurations\nconst DFX_NETWORK = process.env.DFX_NETWORK || \"ic\";\nconst IS_LOCAL = DFX_NETWORK === \"local\";\n\n// Canister IDs - these should match your dfx.json\nexport const CANISTER_IDS = {\n  anima: process.env.ANIMA_CANISTER_ID || \"l2ilz-iqaaa-aaaaj-qngjq-cai\",\n  assets: process.env.ASSETS_CANISTER_ID || \"lpp2u-jyaaa-aaaaj-qngka-cai\"\n};\n\n// Host configuration\nconst HOST = IS_LOCAL ? \"http://localhost:4943\" : \"https://icp0.io\";\n\ndeclare global {\n  interface Window {\n    ic?: any;\n    canister?: any;\n  }\n}\n\nclass ICManager {\n  private static instance: ICManager;\n  private actor: Actor | null = null;\n  private agent: HttpAgent | null = null;\n  private authClient: AuthClient | null = null;\n  private identity: Identity | null = null;\n  private initialized = false;\n  private initializationPromise: Promise<void> | null = null;\n  private retryCount = 0;\n  private maxRetries = 3;\n\n  private constructor() {}\n\n  static getInstance(): ICManager {\n    if (!ICManager.instance) {\n      ICManager.instance = new ICManager();\n    }\n    return ICManager.instance;\n  }\n\n  async initialize(): Promise<void> {\n    if (this.initialized) return;\n    if (this.initializationPromise) return this.initializationPromise;\n\n    this.initializationPromise = this.initializeInternal();\n    return this.initializationPromise;\n  }\n\n  private async initializeInternal(): Promise<void> {\n    try {\n      console.log(\"🔄 Initializing IC connection...\");\n\n      // Create auth client first\n      console.log(\"🔄 Creating auth client...\");\n      this.authClient = await AuthClient.create({\n        idleOptions: {\n          disableIdle: true,\n          disableDefaultIdleCallback: true\n        }\n      });\n      \n      this.identity = this.authClient.getIdentity();\n      console.log(\"✅ Auth client created\");\n\n      // Initialize agent\n      console.log(\"🔄 Initializing agent...\");\n      this.agent = new HttpAgent({\n        identity: this.identity,\n        host: HOST,\n        verifyQuerySignatures: false // Add this for development\n      });\n\n      if (IS_LOCAL) {\n        await this.agent.fetchRootKey().catch(console.error);\n      }\n      console.log(\"✅ Agent initialized\");\n\n      // Create actor\n      console.log(\"🔄 Creating actor...\");\n      this.actor = createActor(CANISTER_IDS.anima, {\n        agent: this.agent\n      }) as unknown as Actor;\n\n      // Initialize window.ic if needed\n      if (!window.ic) {\n        window.ic = {\n          agent: this.agent,\n          Actor,\n          HttpAgent\n        };\n      }\n\n      // Set canister\n      window.canister = this.actor;\n\n      this.initialized = true;\n      console.log(\"✅ IC initialization complete\");\n\n      // Verify features after short delay to ensure everything is ready\n      setTimeout(() => {\n        const features = this.verifyFeatures();\n        console.log(\"🔍 IC Features verified:\", features);\n      }, 100);\n\n    } catch (error) {\n      console.error(\"❌ IC initialization failed:\", error);\n      \n      if (this.retryCount < this.maxRetries) {\n        console.log(`🔄 Retrying initialization (${this.retryCount + 1}/${this.maxRetries})...`);\n        this.retryCount++;\n        this.initializationPromise = null;\n        await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1 second before retry\n        return this.initialize();\n      }\n\n      this.initialized = false;\n      this.initializationPromise = null;\n      throw error;\n    }\n  }\n\n  verifyFeatures() {\n    const features = {\n      canister: !!window.canister,\n      ic: !!window.ic,\n      agent: !!this.agent,\n      identity: !!this.identity\n    };\n    return features;\n  }\n\n  getActor<T = _SERVICE>(): T {\n    if (!this.initialized || !this.actor) {\n      throw new Error(\"IC not initialized. Call initialize() first.\");\n    }\n    return this.actor as unknown as T;\n  }\n\n  getIdentity(): Identity | null {\n    return this.identity;\n  }\n\n  getAgent(): HttpAgent | null {\n    return this.agent;\n  }\n\n  isInitialized(): boolean {\n    return this.initialized;\n  }\n\n  async login(): Promise<boolean> {\n    if (!this.authClient) throw new Error(\"Auth client not initialized\");\n    \n    return new Promise((resolve) => {\n      this.authClient!.login({\n        identityProvider: process.env.II_URL || \"https://identity.ic0.app\",\n        maxTimeToLive: BigInt(7 * 24 * 60 * 60 * 1000 * 1000 * 1000), // 7 days\n        onSuccess: async () => {\n          this.identity = this.authClient!.getIdentity();\n          if (this.agent) {\n            this.agent.replaceIdentity(this.identity);\n            // Reinitialize actor with new identity\n            this.actor = createActor(CANISTER_IDS.anima, {\n              agent: this.agent\n            }) as unknown as Actor;\n          }\n          resolve(true);\n        },\n        onError: (error) => {\n          console.error(\"Login failed:\", error);\n          resolve(false);\n        }\n      });\n    });\n  }\n\n  async logout(): Promise<void> {\n    if (!this.authClient) throw new Error(\"Auth client not initialized\");\n    await this.authClient.logout();\n    this.identity = await AuthClient.create().then(client => client.getIdentity());\n    if (this.agent) {\n      this.agent.replaceIdentity(this.identity);\n      // Reinitialize actor with anonymous identity\n      this.actor = createActor(CANISTER_IDS.anima, {\n        agent: this.agent\n      }) as unknown as Actor;\n    }\n  }\n}\n\nexport const icManager = ICManager.getInstance();\n\n// Export a helper function to verify IC features\nexport const verifyICFeatures = () => ({\n  canister: !!window.canister,\n  ic: !!window.ic,\n  agent: !!icManager.getAgent(),\n  identity: !!icManager.getIdentity()\n});","import React, { Suspense, useEffect, useState } from 'react';\nimport { RouterProvider } from 'react-router-dom';\nimport { router } from '../router';\nimport { LoadingFallback } from './ui/LoadingFallback';\nimport { AuthProvider } from '@/contexts/auth-context';\nimport { ErrorBoundary } from './error-boundary/ErrorBoundary';\nimport { icManager, verifyICFeatures } from '@/ic-init';\n\nconst AppContent = () => {\n  const [initState, setInitState] = useState<{\n    isLoading: boolean;\n    error: string | null;\n  }>({\n    isLoading: true,\n    error: null\n  });\n\n  useEffect(() => {\n    const initializeApp = async () => {\n      try {\n        console.log('🚀 ANIMA initializing...', {\n          env: process.env.NODE_ENV,\n          buildTime: new Date().toISOString()\n        });\n\n        await icManager.initialize();\n        \n        // Short delay to ensure everything is ready\n        await new Promise(resolve => setTimeout(resolve, 200));\n        \n        const features = verifyICFeatures();\n        console.log('🔍 Feature check:', features);\n\n        if (!features.ic || !features.agent) {\n          throw new Error('Required IC features not available');\n        }\n\n        setInitState({ isLoading: false, error: null });\n      } catch (error) {\n        console.error('Initialization failed:', error);\n        setInitState({\n          isLoading: false,\n          error: error instanceof Error ? error.message : 'Unknown error occurred'\n        });\n      }\n    };\n\n    initializeApp();\n  }, []);\n\n  if (initState.isLoading) {\n    return <LoadingFallback />;\n  }\n\n  if (initState.error) {\n    return (\n      <div className=\"min-h-screen bg-black text-white flex items-center justify-center\">\n        <div className=\"text-center max-w-lg p-6\">\n          <h1 className=\"text-xl font-bold mb-4\">Initialization Error</h1>\n          <p className=\"text-red-400 mb-4\">{initState.error}</p>\n          <button \n            onClick={() => window.location.reload()}\n            className=\"px-4 py-2 bg-blue-600 rounded hover:bg-blue-700 transition\"\n          >\n            Retry Connection\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <ErrorBoundary>\n      <AuthProvider>\n        <Suspense fallback={<LoadingFallback />}>\n          <RouterProvider router={router} />\n        </Suspense>\n      </AuthProvider>\n    </ErrorBoundary>\n  );\n};\n\nconst App = () => <AppContent />;\n\nexport default App;","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n\n// Import components directly to avoid lazy loading issues\nimport App from './components/App';\nimport { ErrorBoundary } from './components/error-boundary/ErrorBoundary';\nimport { LoadingFallback } from './components/ui/LoadingFallback';\n\nconst RootErrorFallback = ({ error }: { error: Error }) => (\n  <div className=\"min-h-screen bg-black text-white flex items-center justify-center\">\n    <div className=\"text-center max-w-lg p-6\">\n      <h1 className=\"text-xl font-bold mb-4\">System Error</h1>\n      <p className=\"text-red-400 mb-4\">{error.message}</p>\n      <button \n        onClick={() => window.location.reload()}\n        className=\"px-4 py-2 bg-blue-600 rounded hover:bg-blue-700 transition\"\n      >\n        Reset System\n      </button>\n    </div>\n  </div>\n);\n\nasync function initializeApp() {\n  try {\n    console.log('Initializing Internet Computer connection...');\n    await import('./ic-init');\n    console.log('IC initialization complete');\n    \n    const rootElement = document.getElementById('root');\n    if (!rootElement) {\n      throw new Error('Root element not found');\n    }\n\n    // Create root directly\n    const root = ReactDOM.createRoot(rootElement);\n\n    root.render(\n      <React.StrictMode>\n        <ErrorBoundary FallbackComponent={RootErrorFallback}>\n          <Suspense fallback={<LoadingFallback />}>\n            <App />\n          </Suspense>\n        </ErrorBoundary>\n      </React.StrictMode>\n    );\n  } catch (error) {\n    console.error('Failed to initialize app:', error);\n  }\n}\n\n// Initialize\ninitializeApp();"],"file":"assets/main-BLtP7dC-.js"}