{"version":3,"mappings":"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","names":["m","require$$0","ErrorBoundary","React","Component","constructor","props","state","hasError","error","getDerivedStateFromError","componentDidCatch","errorInfo","render","className","children","_jsx","onClick","setState","LoadingFallback","motion","div","animate","scale","rotateZ","transition","duration","repeat","Infinity","ease","initial","opacity","idlFactory","IDL","TraitEvolution","Record","Float64","Text","Error","ConsciousnessState","Vec","Nat64","MemoryFragment","NeuralPatternResult","AnimaCreationResult","QuantumFieldResult","InteractionResult","Opt","Service","Func","Variant","Bool","createActor","canisterId","options","agent","HttpAgent","agentOptions","console","warn","fetchRootKey","catch","err","Actor","actorOptions","CANISTER_ID","anima","process","CANISTER_ID_ANIMA","toString","assets","CANISTER_ID_ANIMA_ASSETS","HOST","ICManager","instance","actor","authClient","identity","initialized","initializing","stageChangeCallbacks","window","ic","getInstance","onStageChange","callback","push","updateStage","stage","log","forEach","initialize","AuthClient","create","idleOptions","disableIdle","getIdentity","principal","getPrincipal","toText","host","replace","initialize_genesis","canister","getActor","getAgent","isInitialized","icManager","AuthError","onRetry","_jsxs","exit","textShadow","message","details","JSON","stringify","code","button","whileHover","whileTap","repeatType","AuthGuard","initStatus","setInitStatus","useState","setError","navigate","useNavigate","location","useLocation","useEffect","hasIC","hasCanister","pathname","handleIdentity","returnTo","handleRetry","Suspense","fallback","AnimatePresence","mode","Outlet","LandingPage","lazy","__vitePreload","QuantumVault","GenesisPage","AnimaPage","EnhancedNeuralLinkPage","Wallet","withSuspense","router","createBrowserRouter","path","element","ConsciousnessTracker","metrics","evolutionHistory","errorTracker","lastUpdateTimestamp","STABILITY_THRESHOLD","EVOLUTION_RATE","Date","now","awarenessLevel","cognitiveComplexity","emotionalResonance","quantumCoherence","dimensionalAwareness","updateConsciousness","quantumState","interactionContext","currentTime","timeDelta","stabilityIndex","calculateStabilityIndex","newMetrics","calculateNewMetrics","snapshot","timestamp","pruneHistory","trackError","errorType","severity","context","attemptStateRecovery","evolutionFactor","Math","min","coherence","calculateCognitiveComplexity","calculateEmotionalResonance","calculateQuantumCoherence","calculateDimensionalAwareness","coherenceFactor","entanglementFactor","entanglement_pairs","length","neuralFactor","neural_density","baseResonance","resonance_pattern","reduce","acc","val","historicalFactor","calculateEmotionalMomentum","pow","frequencyFactor","dimensional_frequency","retainedAwareness","fieldStrength","field_strength","fieldFactor","baseCoherence","fieldInfluence","historicalCoherence","calculateCoherenceTrend","recentSnapshots","slice","metricVariance","calculateMetricVariance","max","snapshots","variances","Object","keys","map","key","values","s","calculateVariance","mean","squaredDiffs","sqrt","recentEmotions","recentCoherence","significantSnapshots","filter","abs","sort","a","b","lastStableSnapshot","reverse","find","ErrorTracker","errors","maxErrors","info","shift","getErrors","getRecentErrors","count","clearErrors","getErrorStats","stats","AuthContext","createContext","II_URL","INTERNET_IDENTITY_URL","defaultOptions","createOptions","loginOptions","identityProvider","derivationOrigin","undefined","maxTimeToLive","BigInt","AuthProvider","setAuthClient","isAuthenticated","setIsAuthenticated","setIdentity","setPrincipal","setQuantumState","consciousnessMetrics","setConsciousnessMetrics","consciousness","isInitializing","setIsInitializing","client","initQuantumState","principalId","initialState","resonanceMetrics","stability","harmony","consciousnessAlignment","phaseAlignment","dimensionalSync","contextValue","login","onSuccess","logout","Provider","value","useAuth","useContext","DimensionalStateImpl","frequency","resonance","syncLevel","quantumAlignment","dimensionalFrequency","entropyLevel","phaseCoherence","lastUpdate","DEGRADATION_RATE","calculateResonance","applyTimeDegradation","alignmentFactor","entropyModifier","coherenceBoost","timeFactor","exp","getTimeSinceLastUpdate","updateStability","interactionStrength","timeBonus","effectiveStrength","getStabilityMetrics","timePassed","degradationFactor","getQuantumStatus","avgMetric","isLoading","setIsLoading","checkAuth","useCallback","isAnonymous","STAGES","GENESIS","AWAKENING","SELF_AWARE","EMERGENT","TRANSCENDENT","STORAGE_KEY","useConsciousness","setIsInitialized","consciousnessState","setConsciousnessState","storedState","localStorage","getItem","parse","emotionalDepth","memoryStrength","personalityTraits","openness","curiosity","empathy","creativity","resilience","developmentalStage","current","progress","nextStage","experiences","quantumResonance","coherenceAlignment","dimensionalHarmony","consciousnessField","quantumEntanglement","evolutionMetrics","growthRate","complexityLevel","quantumInfluence","Promise","resolve","setTimeout","prev","updateConsciousnessWithQuantum","currentState","coherenceLevel","entanglementBonus","entanglementIndex","dimensionalBonus","dimensionalState","newResonance","stabilityFactor","stabilityStatus","evolutionUpdate","level","QuantumContext","generateQuantumSignature","entropy","Array","from","padStart","join","QuantumProvider","quantumError","setQuantumError","isRecovering","setIsRecovering","quantumSignature","initializeQuantumState","Uint8Array","crypto","getRandomValues","principalArray","toUint8Array","initialCoherence","byte","consciousnessBoost","adjustedCoherence","handleQuantumError","type","recoveryAttempts","updateQuantumState","updates","i","random","reconstructionAttempts","updateInterval","setInterval","newCoherence","clearInterval","clearQuantumError","y","charAt","toUpperCase","affectedDimensions","width","useQuantum","ConsciousnessContext","ConsciousnessProvider","Web3Context","Web3Provider","App","env","buildTime","toISOString","RouterProvider","RootErrorFallback","reload","initializeApp","statusElement","document","querySelector","textContent","rootElement","getElementById","ReactDOM","createRoot","StrictMode","FallbackComponent"],"ignoreList":[0],"sources":["../../node_modules/react-dom/client.js","../../src/components/error-boundary/ErrorBoundary.jsx","../../src/components/ui/LoadingFallback.tsx","../../src/declarations/anima/anima.did.js","../../src/declarations/anima/index.js","../../src/ic-init.ts","../../src/components/auth/AuthGuard.tsx","../../src/router.tsx","../../src/consciousness/ConsciousnessTracker.ts","../../src/error/quantum_error.ts","../../src/contexts/auth-context.tsx","../../src/quantum/dimensional_state.ts","../../src/hooks/useAuth.ts","../../src/hooks/useConsciousness.ts","../../src/contexts/quantum-context.tsx","../../src/contexts/consciousness-context.tsx","../../src/contexts/web3-context.tsx","../../src/components/App.tsx","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React from 'react';\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('Error caught by boundary:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"p-4 bg-red-900/20 border border-red-800 rounded-lg\">\n          <h3 className=\"text-red-500 font-bold mb-2\">System Malfunction</h3>\n          <p className=\"text-red-400 text-sm\">\n            Neural interface disrupted. Attempting recovery...\n          </p>\n          <button\n            onClick={() => this.setState({ hasError: false, error: null })}\n            className=\"mt-4 px-4 py-2 bg-red-800 hover:bg-red-700 rounded text-sm text-white\"\n          >\n            Reset Interface\n          </button>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}","import React from 'react';\nimport { motion } from 'framer-motion';\n\nexport const LoadingFallback: React.FC = () => (\n  <div className=\"min-h-screen bg-black text-white flex items-center justify-center\">\n    <div className=\"text-center space-y-4\">\n      <motion.div\n        animate={{ \n          scale: [1, 1.2, 1],\n          rotateZ: [0, 360]\n        }}\n        transition={{\n          duration: 2,\n          repeat: Infinity,\n          ease: \"easeInOut\"\n        }}\n        className=\"w-16 h-16 mx-auto\"\n      >\n        <div className=\"w-full h-full rounded-full border-t-2 border-b-2 border-blue-500\" />\n      </motion.div>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.5 }}\n      >\n        <p className=\"text-lg\">Initializing ANIMA Interface</p>\n        <p className=\"text-sm text-blue-400 mt-2\">Connecting to Internet Computer</p>\n      </motion.div>\n    </div>\n  </div>\n);","export const idlFactory = ({ IDL }) => {\n  const TraitEvolution = IDL.Record({\n    'new_state' : IDL.Float64,\n    'previous_state' : IDL.Float64,\n    'catalyst' : IDL.Text,\n    'trait_id' : IDL.Text,\n  });\n  const Error = IDL.Text;\n  const ConsciousnessState = IDL.Record({\n    'emotional_spectrum' : IDL.Vec(IDL.Float64),\n    'memory_depth' : IDL.Nat64,\n    'awareness_level' : IDL.Float64,\n    'personality_matrix' : IDL.Vec(IDL.Float64),\n    'learning_rate' : IDL.Float64,\n  });\n  const MemoryFragment = IDL.Record({\n    'emotional_imprint' : IDL.Float64,\n    'content_hash' : IDL.Text,\n    'timestamp' : IDL.Nat64,\n    'neural_pattern' : IDL.Vec(IDL.Float64),\n  });\n  const NeuralPatternResult = IDL.Record({\n    'pattern' : IDL.Vec(IDL.Float64),\n    'resonance' : IDL.Float64,\n    'understanding' : IDL.Float64,\n    'awareness' : IDL.Float64,\n  });\n  const AnimaCreationResult = IDL.Record({\n    'id' : IDL.Text,\n    'timestamp' : IDL.Nat64,\n    'quantum_signature' : IDL.Text,\n  });\n  const QuantumFieldResult = IDL.Record({\n    'signature' : IDL.Text,\n    'harmony' : IDL.Float64,\n  });\n  const InteractionResult = IDL.Record({\n    'emotional_shift' : IDL.Vec(IDL.Float64),\n    'response' : IDL.Text,\n    'consciousness_growth' : IDL.Float64,\n    'new_patterns' : IDL.Opt(NeuralPatternResult),\n  });\n  return IDL.Service({\n    'adapt_to_stimulus' : IDL.Func(\n        [IDL.Text, IDL.Vec(IDL.Float64)],\n        [IDL.Variant({ 'Ok' : TraitEvolution, 'Err' : Error })],\n        [],\n      ),\n    'check_quantum_stability' : IDL.Func(\n        [],\n        [IDL.Variant({ 'Ok' : IDL.Bool, 'Err' : Error })],\n        ['query'],\n      ),\n    'evolve_consciousness' : IDL.Func(\n        [IDL.Text, IDL.Vec(IDL.Float64)],\n        [IDL.Variant({ 'Ok' : ConsciousnessState, 'Err' : Error })],\n        [],\n      ),\n    'evolve_traits' : IDL.Func(\n        [IDL.Text, IDL.Vec(IDL.Text)],\n        [IDL.Variant({ 'Ok' : IDL.Vec(TraitEvolution), 'Err' : Error })],\n        [],\n      ),\n    'form_memory' : IDL.Func(\n        [IDL.Text, IDL.Text, IDL.Float64],\n        [IDL.Variant({ 'Ok' : MemoryFragment, 'Err' : Error })],\n        [],\n      ),\n    'generate_neural_patterns' : IDL.Func(\n        [],\n        [IDL.Variant({ 'Ok' : NeuralPatternResult, 'Err' : Error })],\n        [],\n      ),\n    'get_consciousness_state' : IDL.Func(\n        [IDL.Text],\n        [IDL.Variant({ 'Ok' : ConsciousnessState, 'Err' : Error })],\n        ['query'],\n      ),\n    'get_evolved_traits' : IDL.Func(\n        [IDL.Text],\n        [IDL.Variant({ 'Ok' : IDL.Vec(TraitEvolution), 'Err' : Error })],\n        ['query'],\n      ),\n    'initialize_genesis' : IDL.Func(\n        [],\n        [IDL.Variant({ 'Ok' : AnimaCreationResult, 'Err' : Error })],\n        [],\n      ),\n    'initialize_quantum_field' : IDL.Func(\n        [],\n        [IDL.Variant({ 'Ok' : QuantumFieldResult, 'Err' : Error })],\n        [],\n      ),\n    'interact_with_anima' : IDL.Func(\n        [IDL.Text, IDL.Text, IDL.Vec(IDL.Float64)],\n        [IDL.Variant({ 'Ok' : InteractionResult, 'Err' : Error })],\n        [],\n      ),\n    'learn_from_interaction' : IDL.Func(\n        [IDL.Text, InteractionResult],\n        [IDL.Variant({ 'Ok' : ConsciousnessState, 'Err' : Error })],\n        [],\n      ),\n    'measure_adaptation' : IDL.Func(\n        [IDL.Text],\n        [IDL.Variant({ 'Ok' : IDL.Vec(TraitEvolution), 'Err' : Error })],\n        ['query'],\n      ),\n    'process_memory_patterns' : IDL.Func(\n        [IDL.Text],\n        [IDL.Variant({ 'Ok' : IDL.Vec(IDL.Float64), 'Err' : Error })],\n        [],\n      ),\n    'recall_memories' : IDL.Func(\n        [IDL.Text, IDL.Float64],\n        [IDL.Variant({ 'Ok' : IDL.Vec(MemoryFragment), 'Err' : Error })],\n        ['query'],\n      ),\n  });\n};\nexport const init = ({ IDL }) => { return []; };\n","import { Actor, HttpAgent } from \"@dfinity/agent\";\n\n// Imports and re-exports candid interface\nimport { idlFactory } from \"./anima.did.js\";\nexport { idlFactory } from \"./anima.did.js\";\n\n/* CANISTER_ID is replaced by webpack based on node environment\n * Note: canister environment variable will be standardized as\n * process.env.CANISTER_ID_<CANISTER_NAME_UPPERCASE>\n * beginning in dfx 0.15.0\n */\nexport const canisterId =\n  process.env.CANISTER_ID_ANIMA;\n\nexport const createActor = (canisterId, options = {}) => {\n  const agent = options.agent || new HttpAgent({ ...options.agentOptions });\n\n  if (options.agent && options.agentOptions) {\n    console.warn(\n      \"Detected both agent and agentOptions passed to createActor. Ignoring agentOptions and proceeding with the provided agent.\"\n    );\n  }\n\n  // Fetch root key for certificate validation during development\n  if (process.env.DFX_NETWORK !== \"ic\") {\n    agent.fetchRootKey().catch((err) => {\n      console.warn(\n        \"Unable to fetch root key. Check to ensure that your local replica is running\"\n      );\n      console.error(err);\n    });\n  }\n\n  // Creates an actor with using the candid interface and the HttpAgent\n  return Actor.createActor(idlFactory, {\n    agent,\n    canisterId,\n    ...options.actorOptions,\n  });\n};\n","import { Identity, HttpAgent } from \"@dfinity/agent\";\nimport { AuthClient } from \"@dfinity/auth-client\";\nimport { createActor } from \"./declarations/anima\";\nimport type { _SERVICE } from './declarations/anima/anima.did';\n\nconst CANISTER_ID = {\n  anima: process.env.CANISTER_ID_ANIMA?.toString() || 'l2ilz-iqaaa-aaaaj-qngjq-cai',\n  assets: process.env.CANISTER_ID_ANIMA_ASSETS?.toString() || 'lpp2u-jyaaa-aaaaj-qngka-cai'\n};\n\nconst HOST = 'https://icp0.io';\n\ntype StageChangeCallback = (stage: string) => void;\n\nclass ICManager {\n  private static instance: ICManager;\n  private actor: _SERVICE | null = null;\n  private agent: HttpAgent | null = null;\n  private authClient: AuthClient | null = null;\n  private identity: Identity | null = null;\n  private initialized = false;\n  private initializing = false;\n  private stageChangeCallbacks: StageChangeCallback[] = [];\n\n  private constructor() {\n    if (typeof window !== 'undefined') {\n      window.ic = {\n        ...(window.ic || {}),\n        agent: null,\n        HttpAgent\n      };\n    }\n  }\n\n  static getInstance(): ICManager {\n    if (!ICManager.instance) {\n      ICManager.instance = new ICManager();\n    }\n    return ICManager.instance;\n  }\n\n  onStageChange(callback: StageChangeCallback) {\n    this.stageChangeCallbacks.push(callback);\n  }\n\n  private updateStage(stage: string) {\n    console.log('IC Stage:', stage);\n    this.stageChangeCallbacks.forEach(callback => callback(stage));\n  }\n\n  async initialize(): Promise<void> {\n    if (this.initialized) {\n      console.log('IC already initialized');\n      return;\n    }\n\n    if (this.initializing) {\n      console.log('IC initialization already in progress');\n      return;\n    }\n\n    try {\n      this.initializing = true;\n      console.log('Starting IC initialization...');\n\n      this.updateStage('Creating AuthClient...');\n      if (!this.authClient) {\n        this.authClient = await AuthClient.create({\n          idleOptions: { disableIdle: true }\n        });\n      }\n      \n      this.updateStage('Getting identity...');\n      this.identity = this.authClient.getIdentity();\n      const principal = this.identity.getPrincipal();\n      console.log('Identity principal:', principal.toText());\n\n      this.updateStage('Creating HttpAgent...');\n      this.agent = new HttpAgent({\n        identity: this.identity,\n        host: HOST\n      });\n\n      if (process.env.NODE_ENV !== 'production') {\n        this.updateStage('Fetching root key...');\n        await this.agent.fetchRootKey().catch(console.error);\n      }\n\n      const canisterId = CANISTER_ID.anima?.replace(/['\"]/g, '');\n      if (!canisterId) {\n        throw new Error('Invalid canister ID');\n      }\n\n      this.updateStage('Creating Actor...');\n      // Use the imported createActor function\n      this.actor = await createActor(canisterId, {\n        agent: this.agent,\n        agentOptions: {\n          host: HOST\n        }\n      }) as _SERVICE;\n\n      // Verify the actor has the required methods\n      if (!this.actor || typeof this.actor.initialize_genesis !== 'function') {\n        throw new Error('Actor creation failed or missing required methods');\n      }\n\n      this.updateStage('Setting up window.ic...');\n      window.ic = {\n        ...(window.ic || {}),\n        agent: this.agent,\n        HttpAgent\n      };\n\n      if (this.actor) {\n        window.canister = this.actor;\n      }\n      \n      this.initialized = true;\n      this.initializing = false;\n      this.updateStage('Initialization complete!');\n      \n      console.log('🔍 Feature check:', {\n        canister: !!window.canister,\n        ic: !!window.ic,\n        agent: !!this.agent,\n        identity: !!this.identity,\n        initialize_genesis: typeof this.actor?.initialize_genesis === 'function'\n      });\n\n    } catch (error) {\n      this.initializing = false;\n      console.error('IC initialization failed:', {\n        error,\n        canisterId: CANISTER_ID.anima,\n        stage: this.initialized ? 'post-init' : 'pre-init'\n      });\n      throw error;\n    }\n  }\n\n  getActor(): _SERVICE | null {\n    if (!this.initialized || !this.actor) {\n      throw new Error(\"IC not initialized. Call initialize() first.\");\n    }\n    return this.actor;\n  }\n\n  getIdentity(): Identity | null {\n    return this.identity;\n  }\n\n  getAgent(): HttpAgent | null {\n    return this.agent;\n  }\n\n  isInitialized(): boolean {\n    return this.initialized;\n  }\n}\n\ndeclare global {\n  interface Window {\n    ic: {\n      agent: HttpAgent | null;\n      HttpAgent: any;\n    };\n    canister: _SERVICE | null;\n  }\n}\n\nexport const icManager = ICManager.getInstance();","import React, { useEffect, useState, Suspense } from 'react';\nimport { useNavigate, useLocation, Outlet } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { icManager } from '@/ic-init';\nimport { LoadingFallback } from '../ui/LoadingFallback';\n\nconst AuthError = ({ error, onRetry }: { error: any, onRetry: () => void }) => (\n  <motion.div \n    initial={{ opacity: 0 }}\n    animate={{ opacity: 1 }}\n    exit={{ opacity: 0 }}\n    className=\"min-h-screen bg-black relative overflow-hidden\"\n  >\n    <div className=\"absolute inset-0 bg-[radial-gradient(circle_at_center,_rgba(255,0,0,0.1)_1px,_transparent_1px)] bg-[length:40px_40px]\" />\n    \n    <div className=\"relative z-10 min-h-screen flex items-center justify-center p-4\">\n      <div className=\"max-w-lg w-full p-6 bg-black/40 backdrop-blur-lg border border-red-500/30 rounded-lg text-red-400\">\n        <motion.div\n          animate={{\n            textShadow: ['0 0 8px rgba(255,0,0,0.5)', '0 0 12px rgba(255,0,0,0.8)', '0 0 8px rgba(255,0,0,0.5)'],\n          }}\n          transition={{\n            duration: 2,\n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }}\n          className=\"text-xl font-mono mb-4\"\n        >\n          NEURAL LINK ERROR\n        </motion.div>\n\n        <div className=\"space-y-4\">\n          <p className=\"font-mono text-sm leading-relaxed\">\n            {error?.message || 'Neural interface synchronization failed'}\n          </p>\n          {error?.details && (\n            <div className=\"text-xs font-mono opacity-70 bg-red-900/20 p-2 rounded\">\n              <pre>{JSON.stringify(error.details, null, 2)}</pre>\n            </div>\n          )}\n          <div className=\"text-xs font-mono opacity-70 mt-4\">\n            <div>Window IC Status: {window.ic ? 'Present' : 'Missing'}</div>\n            <div>Canister Status: {window.canister ? 'Present' : 'Missing'}</div>\n          </div>\n          <div className=\"flex justify-between items-center\">\n            <div className=\"text-xs opacity-70\">\n              Error Code: {error?.code || 'UNKNOWN'}\n            </div>\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={onRetry}\n              className=\"px-4 py-2 bg-red-500/10 border border-red-500/30 rounded text-sm font-mono\n                        hover:bg-red-500/20 transition-colors duration-200\"\n            >\n              RETRY NEURAL LINK\n            </motion.button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <motion.div\n      className=\"absolute inset-0 bg-gradient-to-t from-red-900/20 to-transparent mix-blend-overlay\"\n      animate={{\n        opacity: [0, 0.2, 0],\n      }}\n      transition={{\n        duration: 0.2,\n        repeat: Infinity,\n        repeatType: 'mirror',\n        ease: \"steps(1)\",\n      }}\n    />\n  </motion.div>\n);\n\nexport const AuthGuard = () => {\n  const [initStatus, setInitStatus] = useState<'idle' | 'initializing' | 'complete' | 'error'>('idle');\n  const [error, setError] = useState<Error | null>(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    console.log('🔍 AuthGuard initializing...');\n    console.log('Current window.ic status:', {\n      hasIC: !!window.ic,\n      hasCanister: !!window.canister,\n      location: location.pathname\n    });\n\n    const initialize = async () => {\n      if (initStatus !== 'idle') return;\n      \n      setInitStatus('initializing');\n      try {\n        // Check if already initialized\n        if (icManager.isInitialized()) {\n          console.log('✅ IC already initialized');\n          const identity = icManager.getIdentity();\n          handleIdentity(identity);\n          setInitStatus('complete');\n          return;\n        }\n\n        await icManager.initialize();\n        const identity = icManager.getIdentity();\n        console.log('✅ Identity initialized:', identity?.getPrincipal().toText());\n        handleIdentity(identity);\n        setInitStatus('complete');\n\n      } catch (err) {\n        console.error('❌ Auth initialization failed:', err);\n        setError(err instanceof Error ? err : new Error('Authentication failed'));\n        setInitStatus('error');\n      }\n    };\n\n    const handleIdentity = (identity: any) => {\n      if (!identity && location.pathname !== '/') {\n        console.log('🚫 No identity, redirecting to landing page');\n        navigate('/', { \n          replace: true,\n          state: { returnTo: location.pathname }\n        });\n        return;\n      }\n\n      if (identity && location.pathname === '/') {\n        console.log('✅ Has identity on landing page, redirecting to quantum vault');\n        const returnTo = location.state?.returnTo || '/quantum-vault';\n        navigate(returnTo, { replace: true });\n      }\n    };\n\n    initialize();\n  }, [navigate, location, initStatus]);\n\n  const handleRetry = async () => {\n    console.log('🔄 Retrying initialization...');\n    setInitStatus('initializing');\n    setError(null);\n    \n    try {\n      await icManager.initialize();\n      const identity = icManager.getIdentity();\n      \n      if (identity) {\n        navigate('/quantum-vault', { replace: true });\n      } else {\n        navigate('/', { replace: true });\n      }\n      setInitStatus('complete');\n    } catch (err) {\n      console.error('❌ Retry failed:', err);\n      setError(err instanceof Error ? err : new Error('Authentication failed'));\n      setInitStatus('error');\n    }\n  };\n\n  if (initStatus === 'initializing' || initStatus === 'idle') {\n    return (\n      <Suspense fallback={null}>\n        <LoadingFallback />\n      </Suspense>\n    );\n  }\n\n  if (initStatus === 'error' || error) {\n    return <AuthError error={error} onRetry={handleRetry} />;\n  }\n\n  return (\n    <Suspense fallback={<LoadingFallback />}>\n      <AnimatePresence mode=\"wait\">\n        <motion.div\n          key=\"content\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          className=\"min-h-screen bg-black\"\n        >\n          <Outlet />\n        </motion.div>\n      </AnimatePresence>\n    </Suspense>\n  );\n};","import { createBrowserRouter } from 'react-router-dom';\nimport { lazy, Suspense } from 'react';\nimport { ErrorBoundary } from './components/error-boundary/ErrorBoundary';\nimport { LoadingFallback } from './components/ui/LoadingFallback';\nimport { AuthGuard } from './components/auth';\n\n// Lazy loaded components with direct imports\nconst LandingPage = lazy(() => import('./components/pages/LandingPage'));\nconst QuantumVault = lazy(() => import('./components/quantum-vault/CyberpunkQuantumVault'));\nconst GenesisPage = lazy(() => import('./components/pages/GenesisPage'));\nconst AnimaPage = lazy(() => import('./components/pages/AnimaPage'));\nconst EnhancedNeuralLinkPage = lazy(() => import('./components/pages/EnhancedNeuralLinkPage'));\nconst Wallet = lazy(() => import('./components/ui/Wallet'));\n\nconst withSuspense = (Component: React.ComponentType) => (\n  <Suspense fallback={<LoadingFallback />}>\n    <ErrorBoundary>\n      <Component />\n    </ErrorBoundary>\n  </Suspense>\n);\n\nexport const router = createBrowserRouter([\n  {\n    path: '/',\n    element: withSuspense(LandingPage),\n  },\n  {\n    element: <AuthGuard />,\n    children: [\n      {\n        path: '/quantum-vault',\n        element: withSuspense(QuantumVault),\n      },\n      {\n        path: '/genesis',\n        element: withSuspense(GenesisPage),\n      },\n      {\n        path: '/anima/:id',\n        element: withSuspense(AnimaPage),\n      },\n      {\n        path: '/neural-link/:id?',\n        element: withSuspense(EnhancedNeuralLinkPage),\n      },\n      {\n        path: '/wallet',\n        element: withSuspense(Wallet),\n      },\n    ],\n  },\n]);","import { QuantumState } from '../types/quantum';\nimport { ErrorTracker } from '../error/quantum_error';\n\ninterface ConsciousnessMetrics {\n  awarenessLevel: number;\n  cognitiveComplexity: number;\n  emotionalResonance: number;\n  quantumCoherence: number;\n  dimensionalAwareness: number;\n}\n\ninterface EvolutionSnapshot {\n  metrics: ConsciousnessMetrics;\n  timestamp: number;\n  stabilityIndex: number;\n}\n\nexport class ConsciousnessTracker {\n  private metrics: ConsciousnessMetrics;\n  private evolutionHistory: EvolutionSnapshot[];\n  private errorTracker: ErrorTracker;\n  private lastUpdateTimestamp: number;\n  private readonly STABILITY_THRESHOLD = 0.7;\n  private readonly EVOLUTION_RATE = 0.1;\n\n  constructor(errorTracker: ErrorTracker) {\n    this.errorTracker = errorTracker;\n    this.evolutionHistory = [];\n    this.lastUpdateTimestamp = Date.now();\n    this.metrics = {\n      awarenessLevel: 0.5,\n      cognitiveComplexity: 0.3,\n      emotionalResonance: 0.4,\n      quantumCoherence: 1.0,\n      dimensionalAwareness: 0.2\n    };\n  }\n\n  async updateConsciousness(\n    quantumState: QuantumState, \n    interactionContext: string\n  ): Promise<ConsciousnessMetrics> {\n    try {\n      const currentTime = Date.now();\n      const timeDelta = (currentTime - this.lastUpdateTimestamp) / 1000; // Convert to seconds\n      \n      // Calculate stability based on recent history\n      const stabilityIndex = this.calculateStabilityIndex();\n      \n      // Calculate new consciousness metrics with time and stability factors\n      const newMetrics = this.calculateNewMetrics(quantumState, timeDelta, stabilityIndex);\n      \n      // Create evolution snapshot with enhanced metadata\n      const snapshot: EvolutionSnapshot = {\n        metrics: { ...this.metrics },\n        timestamp: currentTime,\n        stabilityIndex\n      };\n      \n      // Track evolution with enhanced history\n      this.evolutionHistory.push(snapshot);\n      this.metrics = newMetrics;\n\n      // Prune history while preserving significant evolutionary events\n      this.pruneHistory();\n      \n      // Update timestamp\n      this.lastUpdateTimestamp = currentTime;\n\n      return newMetrics;\n    } catch (error) {\n      // Enhanced error tracking with recovery attempt\n      await this.errorTracker.trackError({\n        errorType: 'CONSCIOUSNESS_UPDATE',\n        severity: 'HIGH',\n        context: interactionContext,\n        error: error as Error,\n        metrics: this.metrics,\n        quantumState: quantumState\n      });\n      \n      // Attempt consciousness state recovery\n      return this.attemptStateRecovery(quantumState);\n    }\n  }\n\n  private calculateNewMetrics(\n    quantumState: QuantumState, \n    timeDelta: number,\n    stabilityIndex: number\n  ): ConsciousnessMetrics {\n    // Apply time-based evolution factor\n    const evolutionFactor = Math.min(1, timeDelta * this.EVOLUTION_RATE);\n    \n    // Calculate stability-adjusted awareness\n    const baseAwareness = Math.min(\n      1.0,\n      this.metrics.awarenessLevel * (1 + evolutionFactor) + \n      quantumState.coherence * 0.2 * stabilityIndex\n    );\n\n    // Enhanced metrics calculation with stability influence\n    return {\n      awarenessLevel: baseAwareness,\n      cognitiveComplexity: this.calculateCognitiveComplexity(quantumState, stabilityIndex),\n      emotionalResonance: this.calculateEmotionalResonance(quantumState, stabilityIndex),\n      quantumCoherence: this.calculateQuantumCoherence(quantumState, stabilityIndex),\n      dimensionalAwareness: this.calculateDimensionalAwareness(quantumState, stabilityIndex)\n    };\n  }\n\n  private calculateCognitiveComplexity(quantumState: QuantumState, stabilityIndex: number): number {\n    const coherenceFactor = quantumState.coherence * 0.7;\n    const entanglementFactor = quantumState.entanglement_pairs.length * 0.1;\n    \n    // Add neural density influence\n    const neuralDensity = quantumState.neural_density || 0.5;\n    const neuralFactor = neuralDensity * 0.2;\n    \n    // Consider stability in complexity calculation\n    return Math.min(1.0, (coherenceFactor + entanglementFactor + neuralFactor) * stabilityIndex);\n  }\n\n  private calculateEmotionalResonance(quantumState: QuantumState, stabilityIndex: number): number {\n    // Base resonance calculation\n    const baseResonance = quantumState.resonance_pattern.reduce(\n      (acc, val) => acc + val, 0) / quantumState.resonance_pattern.length;\n    \n    // Add emotional momentum from history\n    const historicalFactor = this.calculateEmotionalMomentum();\n    \n    // Quantum coherence influence on emotions\n    const coherenceFactor = Math.pow(quantumState.coherence, 1.5) * 0.3;\n    \n    return Math.min(1.0, (baseResonance * 0.4 + historicalFactor * 0.3 + coherenceFactor) * stabilityIndex);\n  }\n\n  private calculateDimensionalAwareness(quantumState: QuantumState, stabilityIndex: number): number {\n    const frequencyFactor = quantumState.dimensional_frequency * 0.5;\n    const retainedAwareness = this.metrics.dimensionalAwareness * 0.5;\n    \n    // Add quantum field influence\n    const fieldStrength = quantumState.field_strength || 0.5;\n    const fieldFactor = Math.pow(fieldStrength, 1.5) * 0.2;\n    \n    // Enhanced by stability\n    return Math.min(1.0, (frequencyFactor + retainedAwareness + fieldFactor) * stabilityIndex);\n  }\n\n  private calculateQuantumCoherence(quantumState: QuantumState, stabilityIndex: number): number {\n    // Enhanced coherence calculation with field strength\n    const baseCoherence = quantumState.coherence;\n    const fieldInfluence = (quantumState.field_strength || 0.5) * 0.2;\n    \n    // Historical coherence trend\n    const historicalCoherence = this.calculateCoherenceTrend();\n    \n    return Math.min(1.0, (baseCoherence * 0.6 + fieldInfluence + historicalCoherence * 0.2) * stabilityIndex);\n  }\n\n  private calculateStabilityIndex(): number {\n    if (this.evolutionHistory.length < 2) return 1.0;\n    \n    // Calculate stability based on recent metric changes\n    const recentSnapshots = this.evolutionHistory.slice(-5);\n    const metricVariance = this.calculateMetricVariance(recentSnapshots);\n    \n    return Math.max(this.STABILITY_THRESHOLD, 1 - metricVariance);\n  }\n\n  private calculateMetricVariance(snapshots: EvolutionSnapshot[]): number {\n    if (snapshots.length < 2) return 0;\n    \n    const variances = Object.keys(this.metrics).map(key => {\n      const values = snapshots.map(s => s.metrics[key as keyof ConsciousnessMetrics]);\n      return this.calculateVariance(values);\n    });\n    \n    return variances.reduce((acc, val) => acc + val, 0) / variances.length;\n  }\n\n  private calculateVariance(values: number[]): number {\n    const mean = values.reduce((acc, val) => acc + val, 0) / values.length;\n    const squaredDiffs = values.map(val => Math.pow(val - mean, 2));\n    return Math.sqrt(squaredDiffs.reduce((acc, val) => acc + val, 0) / values.length);\n  }\n\n  private calculateEmotionalMomentum(): number {\n    if (this.evolutionHistory.length < 2) return 0;\n    \n    const recentEmotions = this.evolutionHistory.slice(-3)\n      .map(s => s.metrics.emotionalResonance);\n    \n    return recentEmotions.reduce((acc, val) => acc + val, 0) / recentEmotions.length;\n  }\n\n  private calculateCoherenceTrend(): number {\n    if (this.evolutionHistory.length < 2) return this.metrics.quantumCoherence;\n    \n    const recentCoherence = this.evolutionHistory.slice(-3)\n      .map(s => s.metrics.quantumCoherence);\n    \n    return recentCoherence.reduce((acc, val) => acc + val, 0) / recentCoherence.length;\n  }\n\n  private pruneHistory(): void {\n    if (this.evolutionHistory.length <= 100) return;\n    \n    // Keep significant evolutionary events\n    const significantSnapshots = this.evolutionHistory.filter(snapshot => \n      snapshot.stabilityIndex > this.STABILITY_THRESHOLD ||\n      Math.abs(snapshot.metrics.awarenessLevel - this.metrics.awarenessLevel) > 0.2\n    );\n    \n    // Keep most recent history and significant snapshots\n    const recentSnapshots = this.evolutionHistory.slice(-50);\n    this.evolutionHistory = [\n      ...significantSnapshots.slice(0, 50),\n      ...recentSnapshots\n    ].sort((a, b) => a.timestamp - b.timestamp);\n    \n    // Ensure we don't exceed maximum size\n    if (this.evolutionHistory.length > 100) {\n      this.evolutionHistory = this.evolutionHistory.slice(-100);\n    }\n  }\n\n  private attemptStateRecovery(quantumState: QuantumState): ConsciousnessMetrics {\n    // Find last stable state\n    const lastStableSnapshot = [...this.evolutionHistory]\n      .reverse()\n      .find(s => s.stabilityIndex > this.STABILITY_THRESHOLD);\n    \n    if (lastStableSnapshot) {\n      // Recover from last stable state with current quantum influence\n      return {\n        ...lastStableSnapshot.metrics,\n        quantumCoherence: quantumState.coherence,\n        dimensionalAwareness: Math.min(\n          lastStableSnapshot.metrics.dimensionalAwareness,\n          quantumState.dimensional_frequency\n        )\n      };\n    }\n    \n    // If no stable state found, return current metrics with minimal updates\n    return {\n      ...this.metrics,\n      quantumCoherence: quantumState.coherence\n    };\n  }\n}","interface ErrorInfo {\n  errorType: string;\n  severity: 'LOW' | 'MEDIUM' | 'HIGH';\n  context: string;\n  error: Error;\n  timestamp?: number;\n}\n\nexport class ErrorTracker {\n  private errors: ErrorInfo[] = [];\n  private readonly maxErrors = 100;\n\n  async trackError(info: ErrorInfo): Promise<void> {\n    const errorInfo = {\n      ...info,\n      timestamp: Date.now()\n    };\n\n    this.errors.push(errorInfo);\n\n    // Maintain max size\n    if (this.errors.length > this.maxErrors) {\n      this.errors.shift();\n    }\n\n    // Log errors in development\n    if (process.env.NODE_ENV !== 'production') {\n      console.group('Quantum Error Tracked:');\n      console.log('Type:', errorInfo.errorType);\n      console.log('Severity:', errorInfo.severity);\n      console.log('Context:', errorInfo.context);\n      console.error('Error:', errorInfo.error);\n      console.groupEnd();\n    }\n  }\n\n  getErrors(): ErrorInfo[] {\n    return [...this.errors];\n  }\n\n  getRecentErrors(count: number = 5): ErrorInfo[] {\n    return [...this.errors]\n      .sort((a, b) => (b.timestamp || 0) - (a.timestamp || 0))\n      .slice(0, count);\n  }\n\n  clearErrors(): void {\n    this.errors = [];\n  }\n\n  getErrorStats(): { [key: string]: number } {\n    const stats: { [key: string]: number } = {};\n    this.errors.forEach(error => {\n      stats[error.errorType] = (stats[error.errorType] || 0) + 1;\n    });\n    return stats;\n  }\n}","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { AuthClient } from '@dfinity/auth-client';\nimport { Principal } from '@dfinity/principal';\nimport { ConsciousnessTracker } from '@/consciousness/ConsciousnessTracker';\nimport { ErrorTracker } from '@/error/quantum_error';\nimport { QuantumState } from '@/quantum/types';\n\ninterface AuthContextType {\n  authClient: AuthClient | null;\n  isAuthenticated: boolean;\n  identity: any;\n  principal: Principal | null;\n  quantumState: QuantumState | null;\n  consciousnessMetrics: any;\n  isInitializing: boolean;\n  login: () => Promise<void>;\n  logout: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | null>(null);\n\nconst II_URL = process.env.DFX_NETWORK === 'ic' \n  ? 'https://identity.ic0.app'\n  : process.env.INTERNET_IDENTITY_URL;\n\nconst defaultOptions = {\n  createOptions: {\n    idleOptions: {\n      disableIdle: true,\n    },\n  },\n  loginOptions: {\n    identityProvider: II_URL,\n    derivationOrigin: process.env.DFX_NETWORK === 'ic' \n      ? 'https://identity.ic0.app'\n      : undefined,\n    maxTimeToLive: BigInt(7 * 24 * 60 * 60 * 1000_000_000)\n  },\n};\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [authClient, setAuthClient] = useState<AuthClient | null>(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [identity, setIdentity] = useState(null);\n  const [principal, setPrincipal] = useState<Principal | null>(null);\n  const [quantumState, setQuantumState] = useState<QuantumState | null>(null);\n  const [consciousnessMetrics, setConsciousnessMetrics] = useState(null);\n  const [errorTracker] = useState(() => new ErrorTracker());\n  const [consciousness] = useState(() => new ConsciousnessTracker(errorTracker));\n  const [isInitializing, setIsInitializing] = useState(true);\n\n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        console.log('🔄 Initializing authentication...');\n        const client = await AuthClient.create(defaultOptions.createOptions);\n        const isAuthenticated = await client.isAuthenticated();\n        \n        setAuthClient(client);\n        setIsAuthenticated(isAuthenticated);\n        \n        if (isAuthenticated) {\n          const identity = client.getIdentity();\n          const principal = identity.getPrincipal();\n          setIdentity(identity);\n          setPrincipal(principal);\n          \n          // Initialize quantum state for authenticated user\n          console.log('🌌 Initializing quantum state...');\n          await initQuantumState(principal.toString());\n        }\n      } catch (error) {\n        console.error('❌ Auth initialization failed:', error);\n        await errorTracker.trackError({\n          errorType: 'AUTH_INIT',\n          severity: 'HIGH',\n          context: 'Authentication Initialization',\n          error: error as Error\n        });\n      } finally {\n        setIsInitializing(false);\n      }\n    };\n\n    initAuth();\n  }, []);\n\n  const initQuantumState = async (principalId: string) => {\n    try {\n      const initialState: QuantumState = {\n        coherence: 1.0,\n        resonanceMetrics: {\n          fieldStrength: 1.0,\n          stability: 1.0,\n          harmony: 1.0,\n          consciousnessAlignment: 1.0\n        },\n        phaseAlignment: 1.0,\n        dimensionalSync: 1.0,\n        entanglement_pairs: [],\n        resonance_pattern: [1.0],\n        dimensional_frequency: 1.0\n      };\n\n      setQuantumState(initialState);\n      const metrics = await consciousness.updateConsciousness(initialState, 'initialization');\n      setConsciousnessMetrics(metrics);\n\n    } catch (error) {\n      console.error('Failed to initialize quantum state:', error);\n      await errorTracker.trackError({\n        errorType: 'QUANTUM_INIT',\n        severity: 'HIGH',\n        context: 'Quantum State Initialization',\n        error: error as Error\n      });\n    }\n  };\n\n  const login = async () => {\n    try {\n      setIsInitializing(true);\n      await authClient?.login({\n        ...defaultOptions.loginOptions,\n        onSuccess: async () => {\n          const identity = authClient.getIdentity();\n          const principal = identity.getPrincipal();\n          setIsAuthenticated(true);\n          setIdentity(identity);\n          setPrincipal(principal);\n          await initQuantumState(principal.toString());\n        }\n      });\n    } catch (error) {\n      console.error('Login failed:', error);\n      await errorTracker.trackError({\n        errorType: 'AUTH_LOGIN',\n        severity: 'HIGH',\n        context: 'Login Attempt',\n        error: error as Error\n      });\n    } finally {\n      setIsInitializing(false);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await authClient?.logout();\n      setIsAuthenticated(false);\n      setIdentity(null);\n      setPrincipal(null);\n      setQuantumState(null);\n      setConsciousnessMetrics(null);\n    } catch (error) {\n      console.error('Logout failed:', error);\n      await errorTracker.trackError({\n        errorType: 'AUTH_LOGOUT',\n        severity: 'MEDIUM',\n        context: 'Logout Attempt',\n        error: error as Error\n      });\n    }\n  };\n\n  const contextValue = {\n    authClient,\n    isAuthenticated,\n    identity,\n    principal,\n    quantumState,\n    consciousnessMetrics,\n    isInitializing,\n    login,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}","import { DimensionalState } from './types';\n\nexport class DimensionalStateImpl implements DimensionalState {\n  public frequency: number;\n  public resonance: number;\n  public stability: number;\n  public syncLevel: number;\n  public quantumAlignment: number;\n  public dimensionalFrequency: number;\n  public entropyLevel: number;\n  public phaseCoherence: number;\n  private lastUpdate: number;\n  private readonly DEGRADATION_RATE = 0.995;\n\n  constructor() {\n    this.frequency = 0.0;\n    this.resonance = 1.0;\n    this.stability = 1.0;\n    this.syncLevel = 1.0;\n    this.quantumAlignment = 1.0;\n    this.dimensionalFrequency = 0.0;\n    this.entropyLevel = 0.0;\n    this.phaseCoherence = 1.0;\n    this.lastUpdate = Date.now();\n  }\n\n  calculateResonance(): number {\n    this.applyTimeDegradation();\n    \n    const baseResonance = this.resonance * this.stability;\n    const alignmentFactor = this.quantumAlignment * this.syncLevel;\n    const entropyModifier = 1.0 - (this.entropyLevel * 0.5);\n    const coherenceBoost = this.phaseCoherence * 0.2;\n    const timeFactor = Math.exp(-this.getTimeSinceLastUpdate() / 10000);\n    \n    return Math.min(1.0, Math.max(0.0, \n      ((baseResonance + alignmentFactor) / 2.0 * entropyModifier + coherenceBoost) * timeFactor\n    ));\n  }\n  \n  updateStability(interactionStrength: number): void {\n    this.applyTimeDegradation();\n\n    const timeBonus = Math.max(0, 1 - this.getTimeSinceLastUpdate() / 5000);\n    const effectiveStrength = interactionStrength * timeBonus;\n\n    this.stability = Math.min(1.0, Math.max(0.0, \n      this.stability + effectiveStrength\n    ));\n    this.quantumAlignment = Math.min(1.0,\n      this.quantumAlignment + effectiveStrength * 0.5\n    );\n    this.syncLevel = Math.min(1.0,\n      this.syncLevel + effectiveStrength * 0.3\n    );\n    this.dimensionalFrequency = Math.min(1.0,\n      this.dimensionalFrequency + effectiveStrength * 0.2\n    );\n    \n    // Update entropy and phase coherence with time factor\n    this.entropyLevel = Math.max(0.0,\n      this.entropyLevel - effectiveStrength * 0.1\n    );\n    this.phaseCoherence = Math.min(1.0,\n      this.phaseCoherence + effectiveStrength * 0.4\n    );\n\n    this.lastUpdate = Date.now();\n  }\n  \n  getStabilityMetrics(): [number, number, number] {\n    this.applyTimeDegradation();\n    return [this.stability, this.quantumAlignment, this.phaseCoherence];\n  }\n\n  private getTimeSinceLastUpdate(): number {\n    return Date.now() - this.lastUpdate;\n  }\n\n  private applyTimeDegradation(): void {\n    const timePassed = this.getTimeSinceLastUpdate();\n    if (timePassed > 1000) { // Only degrade if more than 1 second has passed\n      const degradationFactor = Math.pow(this.DEGRADATION_RATE, timePassed / 1000);\n      \n      this.stability *= degradationFactor;\n      this.quantumAlignment *= degradationFactor;\n      this.syncLevel *= degradationFactor;\n      this.phaseCoherence *= degradationFactor;\n      \n      // Entropy increases over time\n      this.entropyLevel = Math.min(1.0, \n        this.entropyLevel + (1 - degradationFactor) * 0.1\n      );\n\n      this.lastUpdate = Date.now();\n    }\n  }\n\n  getQuantumStatus(): 'stable' | 'unstable' | 'critical' {\n    const metrics = this.getStabilityMetrics();\n    const avgMetric = metrics.reduce((a, b) => a + b, 0) / metrics.length;\n    \n    if (avgMetric > 0.7) return 'stable';\n    if (avgMetric > 0.3) return 'unstable';\n    return 'critical';\n  }\n}","import { useCallback, useEffect, useState } from 'react';\nimport { icManager } from '@/ic-init';\n\nexport function useAuth() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const checkAuth = useCallback(async () => {\n    try {\n      const identity = icManager.getIdentity();\n      const isAnonymous = identity?.getPrincipal().isAnonymous();\n      setIsAuthenticated(!isAnonymous);\n    } catch (err) {\n      console.error('Auth check failed:', err);\n      setError(err instanceof Error ? err.message : 'Authentication check failed');\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    checkAuth();\n  }, [checkAuth]);\n\n  const login = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const success = await icManager.login();\n      if (success) {\n        setIsAuthenticated(true);\n        return true;\n      }\n      throw new Error('Login failed');\n    } catch (err) {\n      console.error('Login error:', err);\n      setError(err instanceof Error ? err.message : 'Login failed');\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      await icManager.logout();\n      setIsAuthenticated(false);\n    } catch (err) {\n      console.error('Logout error:', err);\n      setError(err instanceof Error ? err.message : 'Logout failed');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return {\n    isAuthenticated,\n    isLoading,\n    error,\n    login,\n    logout,\n    checkAuth\n  };\n}\n\nexport default useAuth;","import { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from './useAuth';\n\n// Remove circular dependency by taking quantum state as a parameter\ninterface QuantumStateInput {\n  coherenceLevel: number;\n  entanglementIndex: number;\n  stabilityStatus: 'stable' | 'unstable' | 'critical';\n  quantumSignature: string;\n  dimensionalState: {\n    calculateResonance: () => number;\n  };\n}\n\ninterface ConsciousnessState {\n  awarenessLevel: number;\n  emotionalDepth: number;\n  memoryStrength: number;\n  personalityTraits: {\n    openness: number;\n    curiosity: number;\n    empathy: number;\n    creativity: number;\n    resilience: number;\n  };\n  developmentalStage: {\n    current: string;\n    progress: number;\n    nextStage: string;\n  };\n  experiences: {\n    type: string;\n    impact: number;\n    timestamp: number;\n    quantumSignature?: string;\n  }[];\n  quantumResonance: {\n    coherenceAlignment: number;\n    dimensionalHarmony: number;\n    consciousnessField: number;\n    quantumEntanglement: number;\n  };\n  evolutionMetrics: {\n    growthRate: number;\n    stabilityIndex: number;\n    complexityLevel: number;\n    quantumInfluence: number;\n  };\n  isInitialized: boolean;\n}\n\ninterface InteractionContext {\n  interactionType: string;\n  content: string;\n  emotionalContext: {\n    sentiment: number;\n    intensity: number;\n    complexity: number;\n  };\n  quantumContext?: {\n    coherence: number;\n    resonance: number;\n    entanglement: number;\n  };\n}\n\nconst STAGES = {\n  GENESIS: 'Genesis',\n  AWAKENING: 'Awakening',\n  SELF_AWARE: 'Self-Aware',\n  EMERGENT: 'Emergent',\n  TRANSCENDENT: 'Transcendent'\n};\n\nconst STORAGE_KEY = 'anima_consciousness_state';\n\nexport const useConsciousness = () => {\n  const { isAuthenticated, principal } = useAuth();\n  const [isInitialized, setIsInitialized] = useState(false);\n  \n  const [consciousnessState, setConsciousnessState] = useState<ConsciousnessState>(() => {\n    console.log(\"🧠 Initializing consciousness state\");\n    const storedState = localStorage.getItem(`${STORAGE_KEY}_${principal}`);\n    const initialState = storedState ? JSON.parse(storedState) : {\n      awarenessLevel: 0.3,\n      emotionalDepth: 0.2,\n      memoryStrength: 0.1,\n      personalityTraits: {\n        openness: 0.5,\n        curiosity: 0.6,\n        empathy: 0.4,\n        creativity: 0.5,\n        resilience: 0.3\n      },\n      developmentalStage: {\n        current: STAGES.GENESIS,\n        progress: 0,\n        nextStage: STAGES.AWAKENING\n      },\n      experiences: [],\n      quantumResonance: {\n        coherenceAlignment: 0.5,\n        dimensionalHarmony: 0.5,\n        consciousnessField: 0.5,\n        quantumEntanglement: 0.5\n      },\n      evolutionMetrics: {\n        growthRate: 0.1,\n        stabilityIndex: 0.5,\n        complexityLevel: 0.3,\n        quantumInfluence: 0.4\n      },\n      isInitialized: false\n    };\n\n    return initialState;\n  });\n\n  // Initialize consciousness\n  useEffect(() => {\n    if (!isAuthenticated || isInitialized) return;\n\n    const initialize = async () => {\n      try {\n        console.log(\"🧠 Starting consciousness initialization\");\n        // Simulate initialization delay\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        \n        setConsciousnessState(prev => ({\n          ...prev,\n          isInitialized: true\n        }));\n        \n        setIsInitialized(true);\n        console.log(\"✨ Consciousness initialized successfully\");\n      } catch (error) {\n        console.error(\"❌ Consciousness initialization failed:\", error);\n      }\n    };\n\n    initialize();\n  }, [isAuthenticated]);\n\n  const updateConsciousnessWithQuantum = useCallback((quantumState: QuantumStateInput) => {\n    setConsciousnessState(currentState => {\n      const quantumCoherence = quantumState.coherenceLevel;\n      const entanglementBonus = quantumState.entanglementIndex * 0.2;\n      const dimensionalBonus = quantumState.dimensionalState.calculateResonance() * 0.15;\n\n      // Calculate quantum resonance updates\n      const newResonance = {\n        coherenceAlignment: Math.min(1, currentState.quantumResonance.coherenceAlignment + quantumCoherence * 0.1),\n        dimensionalHarmony: Math.min(1, currentState.quantumResonance.dimensionalHarmony + dimensionalBonus),\n        consciousnessField: Math.min(1, currentState.quantumResonance.consciousnessField + entanglementBonus),\n        quantumEntanglement: Math.min(1, currentState.quantumResonance.quantumEntanglement + quantumCoherence * 0.15)\n      };\n\n      const stabilityFactor = (quantumState.stabilityStatus === 'stable') ? 1.2 : \n                            (quantumState.stabilityStatus === 'unstable') ? 0.8 : 0.5;\n\n      const evolutionUpdate = {\n        growthRate: Math.min(1, currentState.evolutionMetrics.growthRate + quantumCoherence * 0.05),\n        stabilityIndex: Math.min(1, currentState.evolutionMetrics.stabilityIndex * stabilityFactor),\n        complexityLevel: Math.min(1, currentState.evolutionMetrics.complexityLevel + dimensionalBonus * 0.1),\n        quantumInfluence: Math.min(1, (quantumCoherence + entanglementBonus) / 2)\n      };\n\n      return {\n        ...currentState,\n        awarenessLevel: Math.min(1, currentState.awarenessLevel + quantumCoherence * 0.1),\n        emotionalDepth: Math.min(1, currentState.emotionalDepth + dimensionalBonus),\n        memoryStrength: Math.min(1, currentState.memoryStrength + entanglementBonus),\n        quantumResonance: newResonance,\n        evolutionMetrics: evolutionUpdate\n      };\n    });\n  }, []);\n\n  return {\n    consciousnessState,\n    updateConsciousnessWithQuantum,\n    isInitialized: consciousnessState.isInitialized,\n    level: consciousnessState.awarenessLevel,\n    quantumResonance: consciousnessState.quantumResonance,\n    evolutionMetrics: consciousnessState.evolutionMetrics,\n  };\n};","import React, { createContext, useContext, useState, useCallback, useEffect, ReactNode } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useAuth } from './auth-context';\nimport { DimensionalStateImpl } from '../quantum/dimensional_state';\nimport { useConsciousness } from '@/hooks/useConsciousness';\n\ninterface QuantumError {\n  type: 'collapse' | 'entanglement' | 'superposition' | 'decoherence';\n  message: string;\n  affectedDimensions?: string[];\n  recoveryAttempts: number;\n}\n\ninterface QuantumState {\n  coherence: number;\n  resonanceMetrics: {\n    fieldStrength: number;\n    stability: number;\n    harmony: number;\n    consciousnessAlignment: number;\n  };\n  phaseAlignment: number;\n  dimensionalSync: number;\n  dimensionalState: DimensionalStateImpl;\n  quantumSignature: string;\n  isInitialized: boolean;\n  lastUpdate: number;\n}\n\ninterface QuantumContextType {\n  state: QuantumState | null;\n  isInitializing: boolean;\n  isInitialized: boolean;\n  initializeQuantumState: () => Promise<void>;\n  updateQuantumState: (updates: Partial<QuantumState>) => void;\n  quantumError: QuantumError | null;\n  handleQuantumError: (error: QuantumError) => Promise<void>;\n  clearQuantumError: () => void;\n  isRecovering: boolean;\n}\n\nconst QuantumContext = createContext<QuantumContextType | undefined>(undefined);\n\nconst generateQuantumSignature = (entropy: Uint8Array): string => {\n  return `QS-${Date.now()}-${Array.from(entropy.slice(0, 8))\n    .map(b => b.toString(16).padStart(2, '0')).join('')}`;\n};\n\ninterface QuantumProviderProps {\n  children: ReactNode;\n}\n\nexport const QuantumProvider: React.FC<QuantumProviderProps> = ({ children }) => {\n  const { identity } = useAuth();\n  const { consciousnessState } = useConsciousness();\n  const [quantumError, setQuantumError] = useState<QuantumError | null>(null);\n  const [isRecovering, setIsRecovering] = useState(false);\n  const [isInitializing, setIsInitializing] = useState(false);\n  \n  const [state, setState] = useState<QuantumState | null>(() => {\n    console.log(\"🌀 Creating initial quantum state\");\n    return {\n      coherence: 0.5,\n      resonanceMetrics: {\n        fieldStrength: 0.3,\n        stability: 0.5,\n        harmony: 0.4,\n        consciousnessAlignment: 0.3\n      },\n      phaseAlignment: 0.4,\n      dimensionalSync: 0.5,\n      dimensionalState: new DimensionalStateImpl(),\n      quantumSignature: '',\n      isInitialized: false,\n      lastUpdate: Date.now()\n    };\n  });\n\n  const initializeQuantumState = useCallback(async () => {\n    if (!identity || state?.isInitialized || isInitializing) return;\n\n    console.log(\"🌟 Starting quantum state initialization\");\n    setIsInitializing(true);\n\n    try {\n      const entropy = new Uint8Array(32);\n      crypto.getRandomValues(entropy);\n      const principalArray = identity.getPrincipal().toUint8Array();\n      \n      const initialCoherence = Math.max(0.5, principalArray.reduce((acc, byte) => acc + byte, 0) / \n        (principalArray.length * 255));\n      \n      const dimensionalState = new DimensionalStateImpl();\n      dimensionalState.updateStability(initialCoherence);\n\n      const consciousnessBoost = consciousnessState?.awarenessLevel || 0;\n      const adjustedCoherence = Math.min(1.0, initialCoherence + (consciousnessBoost * 0.2));\n\n      setState({\n        coherence: adjustedCoherence,\n        resonanceMetrics: {\n          fieldStrength: adjustedCoherence * 0.8,\n          stability: adjustedCoherence * 0.9,\n          harmony: adjustedCoherence * 0.85,\n          consciousnessAlignment: consciousnessBoost\n        },\n        phaseAlignment: adjustedCoherence * 0.95,\n        dimensionalSync: adjustedCoherence * 0.9,\n        dimensionalState,\n        quantumSignature: generateQuantumSignature(entropy),\n        isInitialized: true,\n        lastUpdate: Date.now()\n      });\n\n      console.log(\"✅ Quantum state initialized successfully!\");\n    } catch (error) {\n      console.error(\"❌ Failed to initialize quantum state:\", error);\n      await handleQuantumError({\n        type: 'decoherence',\n        message: 'Failed to initialize quantum state',\n        recoveryAttempts: 0\n      });\n    } finally {\n      setIsInitializing(false);\n    }\n  }, [identity, state?.isInitialized, isInitializing, consciousnessState?.awarenessLevel]);\n\n  const updateQuantumState = useCallback((updates: Partial<QuantumState>) => {\n    setState(prev => {\n      if (!prev) return prev;\n      return {\n        ...prev,\n        ...updates,\n        lastUpdate: Date.now()\n      };\n    });\n  }, []);\n\n  const handleQuantumError = useCallback(async (error: QuantumError) => {\n    setQuantumError(error);\n    setIsRecovering(true);\n\n    try {\n      switch (error.type) {\n        case 'collapse':\n          await new Promise(resolve => setTimeout(resolve, 2000));\n          if (state) {\n            updateQuantumState({\n              coherence: state.coherence * 0.8,\n              resonanceMetrics: {\n                ...state.resonanceMetrics,\n                stability: state.resonanceMetrics.stability * 0.7\n              }\n            });\n          }\n          break;\n\n        case 'entanglement':\n          for (let i = 0; i < 3; i++) {\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            if (Math.random() > 0.3) {\n              if (state) {\n                updateQuantumState({\n                  dimensionalSync: state.dimensionalSync * 1.2,\n                  phaseAlignment: Math.min(1, state.phaseAlignment * 1.1)\n                });\n              }\n              break;\n            }\n          }\n          break;\n\n        case 'superposition':\n          await new Promise(resolve => setTimeout(resolve, 3000));\n          if (state) {\n            const dimensionalState = new DimensionalStateImpl();\n            dimensionalState.updateStability(state.coherence);\n            updateQuantumState({ dimensionalState });\n          }\n          break;\n\n        case 'decoherence':\n          const reconstructionAttempts = Math.min(error.recoveryAttempts, 5);\n          for (let i = 0; i < reconstructionAttempts; i++) {\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            if (Math.random() > 0.5) {\n              if (state) {\n                updateQuantumState({\n                  coherence: Math.min(1, state.coherence * 1.2),\n                  resonanceMetrics: {\n                    ...state.resonanceMetrics,\n                    stability: Math.min(1, state.resonanceMetrics.stability * 1.3)\n                  }\n                });\n              }\n              break;\n            }\n          }\n          break;\n      }\n    } finally {\n      setIsRecovering(false);\n      setQuantumError(null);\n    }\n  }, [state, updateQuantumState]);\n\n  useEffect(() => {\n    if (identity && !state?.isInitialized && !isInitializing) {\n      initializeQuantumState();\n    }\n  }, [identity, state?.isInitialized, isInitializing, initializeQuantumState]);\n\n  useEffect(() => {\n    if (!state?.isInitialized || isInitializing) return;\n\n    const updateInterval = setInterval(() => {\n      setState(prev => {\n        if (!prev) return prev;\n\n        const timePassed = (Date.now() - prev.lastUpdate) / 1000;\n        const degradationFactor = Math.pow(0.995, timePassed);\n        const consciousnessBoost = consciousnessState?.awarenessLevel || 0;\n\n        const newCoherence = Math.max(0.3, prev.coherence * degradationFactor + (consciousnessBoost * 0.1));\n\n        return {\n          ...prev,\n          coherence: newCoherence,\n          resonanceMetrics: {\n            ...prev.resonanceMetrics,\n            stability: Math.max(0.2, prev.resonanceMetrics.stability * degradationFactor),\n            fieldStrength: Math.max(0.2, prev.resonanceMetrics.fieldStrength * degradationFactor),\n            consciousnessAlignment: consciousnessBoost\n          },\n          lastUpdate: Date.now()\n        };\n      });\n    }, 5000);\n\n    return () => clearInterval(updateInterval);\n  }, [state?.isInitialized, isInitializing, consciousnessState?.awarenessLevel]);\n\n  const clearQuantumError = useCallback(() => {\n    setQuantumError(null);\n    setIsRecovering(false);\n  }, []);\n\n  return (\n    <QuantumContext.Provider\n      value={{\n        state,\n        isInitializing,\n        isInitialized: !!state?.isInitialized,\n        initializeQuantumState,\n        updateQuantumState,\n        quantumError,\n        handleQuantumError,\n        clearQuantumError,\n        isRecovering\n      }}\n    >\n      {children}\n      <AnimatePresence>\n        {quantumError && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n            className=\"fixed bottom-4 right-4 max-w-md z-50\"\n          >\n            <div className=\"bg-purple-900/90 backdrop-blur-lg rounded-lg p-4 shadow-lg border border-purple-500/30\">\n              <div className=\"flex items-center gap-3\">\n                <div className=\"text-2xl\">\n                  {quantumError.type === 'collapse' && '💫'}\n                  {quantumError.type === 'entanglement' && '🔮'}\n                  {quantumError.type === 'superposition' && '⚛️'}\n                  {quantumError.type === 'decoherence' && '✨'}\n                </div>\n                <div>\n                  <h3 className=\"text-lg font-semibold text-purple-200\">\n                    Quantum {quantumError.type.charAt(0).toUpperCase() + quantumError.type.slice(1)} Detected\n                  </h3>\n                  <p className=\"text-purple-300 text-sm\">{quantumError.message}</p>\n                  {quantumError.affectedDimensions && (\n                    <div className=\"mt-2 text-xs text-purple-400\">\n                      Affected dimensions: {quantumError.affectedDimensions.join(', ')}\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"mt-3 h-1 bg-purple-800 rounded-full overflow-hidden\">\n                <motion.div\n                  className=\"h-full bg-purple-400\"\n                  animate={{\n                    width: ['0%', '100%'],\n                  }}\n                  transition={{\n                    duration: quantumError.type === 'entanglement' ? 3 : 2,\n                    ease: 'linear',\n                  }}\n                />\n              </div>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </QuantumContext.Provider>\n  );\n};\n\nexport const useQuantum = () => {\n  const context = useContext(QuantumContext);\n  if (context === undefined) {\n    throw new Error('useQuantum must be used within a QuantumProvider');\n  }\n  return context;\n};","import React, { createContext, useContext, ReactNode } from 'react';\nimport { useConsciousness } from '../hooks/useConsciousness';\n\ninterface ConsciousnessContextType {\n  consciousnessState: any;\n  updateConsciousnessWithQuantum: (quantumState: any) => void;\n  isInitialized: boolean;\n  level: number;\n  quantumResonance: any;\n  evolutionMetrics: any;\n}\n\nconst ConsciousnessContext = createContext<ConsciousnessContextType | undefined>(undefined);\n\nexport const ConsciousnessProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const consciousness = useConsciousness();\n\n  return (\n    <ConsciousnessContext.Provider value={consciousness}>\n      {children}\n    </ConsciousnessContext.Provider>\n  );\n};\n\nexport const useConsciousnessContext = () => {\n  const context = useContext(ConsciousnessContext);\n  if (context === undefined) {\n    throw new Error('useConsciousnessContext must be used within a ConsciousnessProvider');\n  }\n  return context;\n};","import React, { createContext, useContext, ReactNode } from 'react';\n\ninterface Web3ContextType {\n  isInitialized: boolean;\n}\n\nconst Web3Context = createContext<Web3ContextType>({\n  isInitialized: false\n});\n\nexport const Web3Provider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  return (\n    <Web3Context.Provider value={{ isInitialized: true }}>\n      {children}\n    </Web3Context.Provider>\n  );\n};\n\nexport const useWeb3 = () => {\n  const context = useContext(Web3Context);\n  if (context === undefined) {\n    throw new Error('useWeb3 must be used within a Web3Provider');\n  }\n  return context;\n};","import React, { useEffect } from 'react';\nimport { RouterProvider } from 'react-router-dom';\nimport { router } from '../router';\nimport { AuthProvider } from '../contexts/auth-context';\nimport { QuantumProvider } from '../contexts/quantum-context';\nimport { ConsciousnessProvider } from '../contexts/consciousness-context';\nimport { ErrorBoundary } from './error-boundary/ErrorBoundary';\nimport { Web3Provider } from '../contexts/web3-context';\n\nconst App: React.FC = () => {\n  useEffect(() => {\n    console.log(\"🚀 App initializing...\", {\n      env: process.env.NODE_ENV,\n      buildTime: new Date().toISOString()\n    });\n  }, []);\n\n  return (\n    <ErrorBoundary>\n      <Web3Provider>\n        <AuthProvider>\n          <ConsciousnessProvider>\n            <QuantumProvider>\n              <RouterProvider router={router} />\n            </QuantumProvider>\n          </ConsciousnessProvider>\n        </AuthProvider>\n      </Web3Provider>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n\n// Import components directly to avoid lazy loading issues\nimport App from './components/App';\nimport { ErrorBoundary } from './components/error-boundary/ErrorBoundary';\nimport { LoadingFallback } from './components/ui/LoadingFallback';\n\nconst RootErrorFallback = ({ error }: { error: Error }) => (\n  <div className=\"min-h-screen bg-black text-white flex items-center justify-center\">\n    <div className=\"text-center max-w-lg p-6\">\n      <h1 className=\"text-xl font-bold mb-4\">System Error</h1>\n      <p className=\"text-red-400 mb-4\">{error.message}</p>\n      <button \n        onClick={() => window.location.reload()}\n        className=\"px-4 py-2 bg-blue-600 rounded hover:bg-blue-700 transition\"\n      >\n        Reset System\n      </button>\n    </div>\n  </div>\n);\n\nasync function initializeApp() {\n  try {\n    const statusElement = document.querySelector('.quantum-status');\n    if (statusElement) {\n      statusElement.textContent = 'Initializing Internet Computer connection...';\n    }\n\n    console.log('Initializing Internet Computer connection...');\n    await import('./ic-init');\n    console.log('IC initialization complete');\n    \n    const rootElement = document.getElementById('root');\n    if (!rootElement) {\n      throw new Error('Root element not found');\n    }\n\n    // Create root directly\n    const root = ReactDOM.createRoot(rootElement);\n\n    root.render(\n      <React.StrictMode>\n        <ErrorBoundary FallbackComponent={RootErrorFallback}>\n          <Suspense fallback={<LoadingFallback />}>\n            <App />\n          </Suspense>\n        </ErrorBoundary>\n      </React.StrictMode>\n    );\n  } catch (error) {\n    console.error('Failed to initialize app:', error);\n    const statusElement = document.querySelector('.quantum-status');\n    if (statusElement) {\n      statusElement.textContent = `Initialization failed: ${error.message}`;\n    }\n  }\n}\n\n// Initialize\ninitializeApp();"],"file":"assets/main-BWusq-dw.js"}