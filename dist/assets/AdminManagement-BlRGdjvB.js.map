{"version":3,"file":"AdminManagement-BlRGdjvB.js","sources":["../../src/components/admin/AdminManagement.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Principal } from '@dfinity/principal';\nimport { useAuth } from '@/contexts/auth-context';\nimport { ShieldAlert, Trash2, UserPlus, AlertTriangle } from 'lucide-react';\n\ninterface AdminListItem {\n    principal: string;\n    addedAt?: number;\n}\n\nexport const AdminManagement: React.FC = () => {\n    const [newAdminId, setNewAdminId] = useState('');\n    const [error, setError] = useState<string | null>(null);\n    const [success, setSuccess] = useState<string | null>(null);\n    const [admins, setAdmins] = useState<AdminListItem[]>([]);\n    const [isConfirmingRemoval, setIsConfirmingRemoval] = useState<string | null>(null);\n    const { actor, identity } = useAuth();\n    const [currentUserPrincipal, setCurrentUserPrincipal] = useState<string>('');\n\n    useEffect(() => {\n        if (identity) {\n            setCurrentUserPrincipal(identity.getPrincipal().toString());\n        }\n    }, [identity]);\n\n    useEffect(() => {\n        fetchAdmins();\n    }, [actor]);\n\n    const fetchAdmins = async () => {\n        try {\n            // This would need to be implemented in the backend\n            const result = await actor?.list_admins();\n            if ('Ok' in result) {\n                setAdmins(result.Ok.map(principal => ({\n                    principal: principal.toString(),\n                    addedAt: Date.now() // In real implementation, this would come from backend\n                })));\n            }\n        } catch (err) {\n            console.error('Failed to fetch admins:', err);\n        }\n    };\n\n    const validatePrincipal = (id: string): boolean => {\n        try {\n            Principal.fromText(id);\n            // Additional validation rules\n            if (id.length < 10) return false; // Minimum length check\n            if (!/^[a-z0-9-]+$/.test(id)) return false; // Character validation\n            if (admins.some(admin => admin.principal === id)) return false; // Duplicate check\n            return true;\n        } catch {\n            return false;\n        }\n    };\n\n    const handleAddAdmin = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setError(null);\n        setSuccess(null);\n\n        if (!validatePrincipal(newAdminId)) {\n            setError('Invalid or duplicate Principal ID');\n            return;\n        }\n\n        try {\n            const result = await actor?.add_admin(Principal.fromText(newAdminId));\n            if ('Ok' in result) {\n                setSuccess('Admin added successfully');\n                setNewAdminId('');\n                fetchAdmins(); // Refresh list\n            } else if ('Err' in result) {\n                setError(result.Err);\n            }\n        } catch (err) {\n            setError('Failed to add admin');\n            console.error('Add admin error:', err);\n        }\n    };\n\n    const handleRemoveAdmin = async (principalId: string) => {\n        if (principalId === currentUserPrincipal) {\n            setError(\"You can't remove yourself as admin\");\n            return;\n        }\n\n        try {\n            const result = await actor?.remove_admin(Principal.fromText(principalId));\n            if ('Ok' in result) {\n                setSuccess('Admin removed successfully');\n                fetchAdmins(); // Refresh list\n            } else if ('Err' in result) {\n                setError(result.Err);\n            }\n        } catch (err) {\n            setError('Failed to remove admin');\n            console.error('Remove admin error:', err);\n        } finally {\n            setIsConfirmingRemoval(null);\n        }\n    };\n\n    const formatPrincipalId = (id: string): string => {\n        return `${id.slice(0, 5)}...${id.slice(-5)}`;\n    };\n\n    return (\n        <Card className=\"bg-black border border-green-500\">\n            <CardHeader>\n                <CardTitle className=\"text-green-400 flex items-center\">\n                    <ShieldAlert className=\"w-5 h-5 mr-2\" />\n                    {'>'} ADMIN MANAGEMENT\n                </CardTitle>\n            </CardHeader>\n            <CardContent>\n                {/* Add Admin Form */}\n                <form onSubmit={handleAddAdmin} className=\"space-y-4 mb-6\">\n                    <div className=\"relative\">\n                        <input\n                            type=\"text\"\n                            value={newAdminId}\n                            onChange={(e) => {\n                                setNewAdminId(e.target.value);\n                                setError(null);\n                                setSuccess(null);\n                            }}\n                            placeholder=\"Principal ID\"\n                            className=\"w-full bg-black border border-green-500/30 px-4 py-2 text-green-500 \n                                     placeholder-green-500/30 focus:border-green-500 focus:outline-none\n                                     transition-colors pr-10\"\n                        />\n                        <UserPlus className=\"absolute right-3 top-2.5 h-5 w-5 text-green-500/50\" />\n                    </div>\n\n                    <AnimatePresence>\n                        {error && (\n                            <motion.div\n                                initial={{ opacity: 0, y: -10 }}\n                                animate={{ opacity: 1, y: 0 }}\n                                exit={{ opacity: 0, y: -10 }}\n                                className=\"text-red-500 text-sm border border-red-500/30 p-2 flex items-center\"\n                            >\n                                <AlertTriangle className=\"w-4 h-4 mr-2\" />\n                                {'>'} ERROR: {error}\n                            </motion.div>\n                        )}\n\n                        {success && (\n                            <motion.div\n                                initial={{ opacity: 0, y: -10 }}\n                                animate={{ opacity: 1, y: 0 }}\n                                exit={{ opacity: 0, y: -10 }}\n                                className=\"text-green-500 text-sm border border-green-500/30 p-2\"\n                            >\n                                {'>'} {success}\n                            </motion.div>\n                        )}\n                    </AnimatePresence>\n\n                    <button\n                        type=\"submit\"\n                        className=\"w-full px-4 py-2 border border-green-500 hover:bg-green-500 \n                                 hover:text-black transition-colors flex items-center justify-center\"\n                    >\n                        <UserPlus className=\"w-4 h-4 mr-2\" />\n                        ADD ADMIN\n                    </button>\n                </form>\n\n                {/* Admin List */}\n                <div className=\"space-y-2\">\n                    <h3 className=\"text-green-400 text-sm mb-3\">{'>'} CURRENT ADMINS</h3>\n                    <div className=\"space-y-2\">\n                        <AnimatePresence>\n                            {admins.map((admin) => (\n                                <motion.div\n                                    key={admin.principal}\n                                    initial={{ opacity: 0, x: -20 }}\n                                    animate={{ opacity: 1, x: 0 }}\n                                    exit={{ opacity: 0, x: 20 }}\n                                    className=\"flex items-center justify-between p-2 border border-green-500/30 \n                                             hover:border-green-500 transition-colors\"\n                                >\n                                    <div className=\"flex items-center\">\n                                        <ShieldAlert className=\"w-4 h-4 mr-2 text-green-500/50\" />\n                                        <span className=\"font-mono\">\n                                            {formatPrincipalId(admin.principal)}\n                                            {admin.principal === currentUserPrincipal && (\n                                                <span className=\"text-green-500/50 ml-2\">(you)</span>\n                                            )}\n                                        </span>\n                                    </div>\n                                    {isConfirmingRemoval === admin.principal ? (\n                                        <div className=\"flex items-center gap-2\">\n                                            <button\n                                                onClick={() => handleRemoveAdmin(admin.principal)}\n                                                className=\"text-red-500 hover:text-red-400\"\n                                            >\n                                                Confirm\n                                            </button>\n                                            <button\n                                                onClick={() => setIsConfirmingRemoval(null)}\n                                                className=\"text-green-500 hover:text-green-400\"\n                                            >\n                                                Cancel\n                                            </button>\n                                        </div>\n                                    ) : (\n                                        admin.principal !== currentUserPrincipal && (\n                                            <button\n                                                onClick={() => setIsConfirmingRemoval(admin.principal)}\n                                                className=\"text-green-500/50 hover:text-red-500 transition-colors\"\n                                            >\n                                                <Trash2 className=\"w-4 h-4\" />\n                                            </button>\n                                        )\n                                    )}\n                                </motion.div>\n                            ))}\n                        </AnimatePresence>\n                    </div>\n                </div>\n            </CardContent>\n        </Card>\n    );\n};\n"],"names":["AdminManagement","newAdminId","setNewAdminId","useState","error","setError","success","setSuccess","admins","setAdmins","isConfirmingRemoval","setIsConfirmingRemoval","actor","identity","useAuth","currentUserPrincipal","setCurrentUserPrincipal","useEffect","fetchAdmins","result","principal","err","validatePrincipal","id","Principal","admin","handleAddAdmin","e","handleRemoveAdmin","principalId","formatPrincipalId","jsxs","Card","jsx","CardHeader","CardTitle","ShieldAlert","CardContent","UserPlus","AnimatePresence","motion","AlertTriangle","Trash2"],"mappings":"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"}