{"version":3,"file":"ui-components-QvgOnaLu.js","sources":["../../src/components/ui/AnimationSafeGuard.tsx","../../src/lib/utils.ts","../../src/components/ui/button.tsx","../../src/components/ui/input.tsx","../../src/components/ui/card.jsx","../../src/components/ui/alert.jsx","../../src/components/ui/MatrixRain.tsx","../../src/components/ui/NeuralGrid.jsx","../../src/components/ui/GlowOrb.jsx","../../src/components/ui/CircuitLines.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { domAnimation, LazyMotion } from 'framer-motion';\n\ninterface AnimationSafeGuardProps {\n  children: React.ReactNode;\n}\n\nexport const AnimationSafeGuard: React.FC<AnimationSafeGuardProps> = ({ children }) => {\n  const [isMounted, setIsMounted] = useState(false);\n\n  useEffect(() => {\n    // Ensure component is mounted before animations\n    setIsMounted(true);\n    return () => setIsMounted(false);\n  }, []);\n\n  if (!isMounted) {\n    return null; // or a loading placeholder\n  }\n\n  return (\n    <LazyMotion features={domAnimation} strict>\n      {children}\n    </LazyMotion>\n  );\n};","import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}","import * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'default' | 'destructive' | 'outline' | 'ghost' | 'link';\n  size?: 'default' | 'sm' | 'lg' | 'icon';\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant = 'default', size = 'default', ...props }, ref) => {\n    return (\n      <button\n        className={cn(\n          \"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-purple-400 focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background\",\n          {\n            'bg-primary text-primary-foreground hover:bg-primary/90': variant === 'default',\n            'bg-destructive text-destructive-foreground hover:bg-destructive/90': variant === 'destructive',\n            'border border-input hover:bg-accent hover:text-accent-foreground': variant === 'outline',\n            'hover:bg-accent hover:text-accent-foreground': variant === 'ghost',\n            'underline-offset-4 hover:underline text-primary': variant === 'link',\n            'h-10 py-2 px-4': size === 'default',\n            'h-9 px-3': size === 'sm',\n            'h-11 px-8': size === 'lg',\n            'h-10 w-10': size === 'icon',\n          },\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = \"Button\";\n\nexport { Button };","import * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\n\nInput.displayName = \"Input\";\n\nexport { Input };","import * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent };","import * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nconst Alert = React.forwardRef(({ className, variant = \"default\", ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(\n      \"relative w-full rounded-lg border p-4\",\n      {\n        \"bg-background text-foreground\": variant === \"default\",\n        \"bg-destructive/15 text-destructive border-destructive/50\": variant === \"destructive\",\n      },\n      className\n    )}\n    {...props}\n  />\n));\nAlert.displayName = \"Alert\";\n\nconst AlertTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n));\nAlertTitle.displayName = \"AlertTitle\";\n\nconst AlertDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n));\nAlertDescription.displayName = \"AlertDescription\";\n\nexport { Alert, AlertTitle, AlertDescription };","import React, { useEffect, useRef } from 'react';\n\ninterface MatrixRainProps {\n  className?: string;\n  color?: string;\n}\n\nexport const MatrixRain: React.FC<MatrixRainProps> = ({ \n  className = '',\n  color = '#00ff00'\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Set canvas size\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    // Matrix characters (mix of katakana and other symbols)\n    const chars = 'ｦｱｳｴｵｶｷｹｺｻｼｽｾｿﾀﾂﾃﾅﾆﾇﾈﾊﾋﾎﾏﾐﾑﾒﾓﾔﾕﾗﾘﾜ0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    const charArray = chars.split('');\n\n    // Drop settings\n    const fontSize = 16;\n    const columns = canvas.width / fontSize;\n    const drops: number[] = [];\n\n    // Initialize drops\n    for (let i = 0; i < columns; i++) {\n      drops[i] = Math.random() * -100;\n    }\n\n    // Animation settings\n    let lastTime = 0;\n    const fps = 30;\n    const interval = 1000 / fps;\n\n    // Draw function\n    const draw = (timestamp: number) => {\n      if (!ctx) return;\n\n      // Control frame rate\n      if (timestamp - lastTime < interval) {\n        requestAnimationFrame(draw);\n        return;\n      }\n      lastTime = timestamp;\n\n      // Semi-transparent black to create fade effect\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Green text\n      ctx.fillStyle = color;\n      ctx.font = fontSize + 'px monospace';\n\n      // Draw characters\n      for (let i = 0; i < drops.length; i++) {\n        // Random character\n        const char = charArray[Math.floor(Math.random() * charArray.length)];\n        \n        // Calculate position\n        const x = i * fontSize;\n        const y = drops[i] * fontSize;\n\n        // Draw character with varying opacity\n        const alpha = Math.random() * 0.5 + 0.5;\n        ctx.fillStyle = color.replace(')', `,${alpha})`).replace('rgb', 'rgba');\n        ctx.fillText(char, x, y);\n\n        // Reset when off screen or randomly\n        if (y > canvas.height || Math.random() > 0.99) {\n          drops[i] = 0;\n        }\n\n        // Move drop\n        drops[i]++;\n      }\n\n      requestAnimationFrame(draw);\n    };\n\n    // Start animation\n    requestAnimationFrame(draw);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n    };\n  }, [color]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      className={`absolute inset-0 ${className}`}\n      style={{ background: 'transparent' }}\n    />\n  );\n};","import React, { useEffect, useRef } from 'react';\nimport { motion } from 'framer-motion';\n\nexport const NeuralGrid = ({ className = '', intensity = 1.0 }) => {\n  const canvasRef = useRef(null);\n  const nodesRef = useRef([]);\n  const connectionsRef = useRef([]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n\n    // Initialize nodes\n    const initNodes = () => {\n      nodesRef.current = Array(50).fill().map(() => ({\n        x: Math.random() * width,\n        y: Math.random() * height,\n        vx: (Math.random() - 0.5) * 2,\n        vy: (Math.random() - 0.5) * 2,\n        size: Math.random() * 3 + 1,\n        pulsePhase: Math.random() * Math.PI * 2,\n        activity: Math.random()\n      }));\n    };\n\n    // Update node positions and connections\n    const update = () => {\n      const nodes = nodesRef.current;\n      \n      // Update nodes\n      nodes.forEach(node => {\n        node.x += node.vx;\n        node.y += node.vy;\n        node.pulsePhase += 0.05;\n        \n        // Bounce off boundaries\n        if (node.x < 0 || node.x > width) node.vx *= -1;\n        if (node.y < 0 || node.y > height) node.vy *= -1;\n        \n        // Keep within bounds\n        node.x = Math.max(0, Math.min(width, node.x));\n        node.y = Math.max(0, Math.min(height, node.y));\n      });\n\n      // Update connections\n      connectionsRef.current = [];\n      for (let i = 0; i < nodes.length; i++) {\n        for (let j = i + 1; j < nodes.length; j++) {\n          const dx = nodes[j].x - nodes[i].x;\n          const dy = nodes[j].y - nodes[i].y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          \n          if (distance < 100) {\n            connectionsRef.current.push({\n              from: nodes[i],\n              to: nodes[j],\n              strength: 1 - (distance / 100)\n            });\n          }\n        }\n      }\n    };\n\n    // Draw the neural network\n    const draw = () => {\n      ctx.clearRect(0, 0, width, height);\n      \n      // Draw connections\n      connectionsRef.current.forEach(conn => {\n        const gradient = ctx.createLinearGradient(\n          conn.from.x, conn.from.y,\n          conn.to.x, conn.to.y\n        );\n        \n        const alpha = conn.strength * 0.5 * intensity;\n        gradient.addColorStop(0, `rgba(0, 255, 255, ${alpha})`);\n        gradient.addColorStop(1, `rgba(0, 128, 255, ${alpha})`);\n        \n        ctx.beginPath();\n        ctx.moveTo(conn.from.x, conn.from.y);\n        ctx.lineTo(conn.to.x, conn.to.y);\n        ctx.strokeStyle = gradient;\n        ctx.lineWidth = conn.strength * 2;\n        ctx.stroke();\n      });\n\n      // Draw nodes\n      nodesRef.current.forEach(node => {\n        const pulse = Math.sin(node.pulsePhase) * 0.5 + 0.5;\n        const size = node.size * (1 + pulse * 0.5);\n        \n        // Glow effect\n        ctx.shadowColor = 'rgba(0, 255, 255, 0.5)';\n        ctx.shadowBlur = 10;\n        \n        // Node fill\n        ctx.beginPath();\n        ctx.arc(node.x, node.y, size, 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(0, ${155 + pulse * 100}, ${255}, ${0.8 * intensity})`;\n        ctx.fill();\n        \n        // Node ring\n        ctx.beginPath();\n        ctx.arc(node.x, node.y, size * 1.5, 0, Math.PI * 2);\n        ctx.strokeStyle = `rgba(0, 255, 255, ${0.3 * pulse * intensity})`;\n        ctx.lineWidth = 1;\n        ctx.stroke();\n      });\n    };\n\n    // Animation loop\n    let animationFrame;\n    const animate = () => {\n      update();\n      draw();\n      animationFrame = requestAnimationFrame(animate);\n    };\n\n    // Initialize and start animation\n    initNodes();\n    animate();\n\n    // Cleanup\n    return () => {\n      cancelAnimationFrame(animationFrame);\n    };\n  }, [intensity]);\n\n  return (\n    <motion.canvas\n      ref={canvasRef}\n      className={`w-full h-full ${className}`}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    />\n  );\n};","import React from 'react';\nimport { motion } from 'framer-motion';\n\nexport const GlowOrb = ({ phase }) => {\n  const getOrbColors = () => {\n    switch (phase) {\n      case 'initiation':\n        return ['#2081E2', '#1199FA'];\n      case 'consciousness_emergence':\n        return ['#7B61FF', '#2081E2'];\n      case 'trait_manifestation':\n        return ['#2081E2', '#00FF9D'];\n      case 'quantum_alignment':\n        return ['#7B61FF', '#FF61DC'];\n      case 'birth':\n        return ['#2081E2', '#FF61DC', '#00FF9D'];\n      default:\n        return ['#2081E2', '#1199FA'];\n    }\n  };\n\n  const getAnimationVariants = () => {\n    switch (phase) {\n      case 'consciousness_emergence':\n        return {\n          animate: {\n            scale: [1, 1.2, 1],\n            opacity: [0.6, 1, 0.6],\n            transition: {\n              duration: 3,\n              repeat: Infinity,\n              ease: \"easeInOut\"\n            }\n          }\n        };\n      case 'quantum_alignment':\n        return {\n          animate: {\n            rotate: 360,\n            scale: [1, 1.1, 1],\n            transition: {\n              duration: 8,\n              repeat: Infinity,\n              ease: \"linear\"\n            }\n          }\n        };\n      case 'birth':\n        return {\n          animate: {\n            scale: [1, 2, 1],\n            opacity: [0.7, 1, 0.7],\n            transition: {\n              duration: 4,\n              repeat: 1,\n              ease: \"easeInOut\"\n            }\n          }\n        };\n      default:\n        return {\n          animate: {\n            scale: [1, 1.1, 1],\n            opacity: [0.6, 0.8, 0.6],\n            transition: {\n              duration: 4,\n              repeat: Infinity,\n              ease: \"easeInOut\"\n            }\n          }\n        };\n    }\n  };\n\n  const colors = getOrbColors();\n  const variants = getAnimationVariants();\n\n  return (\n    <div className=\"absolute inset-0 flex items-center justify-center pointer-events-none\">\n      <motion.div\n        initial={{ opacity: 0, scale: 0.5 }}\n        animate={variants.animate}\n        className=\"relative\"\n      >\n        {colors.map((color, index) => (\n          <motion.div\n            key={index}\n            className=\"absolute inset-0\"\n            style={{\n              background: `radial-gradient(circle, ${color}20 0%, transparent 70%)`,\n              filter: 'blur(30px)',\n              transform: `scale(${1 + index * 0.2})`,\n              opacity: 0.3,\n            }}\n          />\n        ))}\n        <div\n          className=\"w-96 h-96 rounded-full\"\n          style={{\n            background: `radial-gradient(circle, ${colors[0]}10 0%, transparent 70%)`,\n            filter: 'blur(40px)',\n          }}\n        />\n      </motion.div>\n    </div>\n  );\n};","import React from 'react';\nimport { motion } from 'framer-motion';\n\nexport const CircuitLines = () => {\n  const lines = [\n    'M10,50 L200,50',\n    'M150,10 L150,200',\n    'M50,150 L250,150',\n    'M250,50 C300,50 300,150 250,150',\n  ];\n\n  return (\n    <div className=\"absolute inset-0 overflow-hidden pointer-events-none opacity-20\">\n      {lines.map((path, i) => (\n        <motion.div\n          key={i}\n          className=\"absolute\"\n          initial={{ pathLength: 0 }}\n          animate={{\n            pathLength: [0, 1, 0],\n          }}\n          transition={{\n            duration: 5,\n            delay: i * 0.5,\n            repeat: Infinity,\n            ease: \"linear\"\n          }}\n        >\n          <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 400 300\">\n            <motion.path\n              d={path}\n              stroke=\"#2081E2\"\n              strokeWidth=\"2\"\n              fill=\"none\"\n              initial={{ pathLength: 0 }}\n              animate={{ pathLength: [0, 1, 0] }}\n              transition={{\n                duration: 5,\n                delay: i * 0.5,\n                repeat: Infinity,\n                ease: \"linear\"\n              }}\n            />\n          </svg>\n        </motion.div>\n      ))}\n    </div>\n  );\n};"],"names":["AnimationSafeGuard","children","isMounted","setIsMounted","useState","useEffect","LazyMotion","domAnimation","cn","inputs","twMerge","clsx","Button","React.forwardRef","className","variant","size","props","ref","jsx","Input","type","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","Alert","AlertTitle","AlertDescription","MatrixRain","color","canvasRef","useRef","canvas","ctx","resizeCanvas","charArray","fontSize","columns","drops","i","lastTime","interval","draw","timestamp","char","x","y","alpha","NeuralGrid","intensity","nodesRef","connectionsRef","width","height","initNodes","update","nodes","node","j","dx","dy","distance","conn","gradient","pulse","animationFrame","animate","motion","GlowOrb","phase","getOrbColors","getAnimationVariants","colors","variants","jsxs","index","CircuitLines","lines","path"],"mappings":"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"}