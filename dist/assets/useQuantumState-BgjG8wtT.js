import{r as n}from"./vendor-DMORb-JD.js";import{u as x,c as b,D as v}from"./main-BWusq-dw.js";const q=()=>{const{identity:s}=x(),{consciousness:e,isInitialized:u}=b(),o=n.useRef(!1),[m,y]=n.useState(null),[l,w]=n.useState(!1),d=n.useRef(),[g,h]=n.useState(()=>(console.log("🌀 Creating initial quantum state"),{stabilityStatus:"unstable",coherenceLevel:.5,entanglementIndex:.3,quantumSignature:"",dimensionalState:new v,lastUpdate:Date.now(),isInitialized:!1}));return n.useEffect(()=>()=>{d.current&&clearTimeout(d.current)},[]),n.useEffect(()=>{if(!s||!u||o.current||l){console.log("🔍 Skipping initialization:",{hasIdentity:!!s,consciousnessReady:u,wasAttempted:o.current,isInitializing:l});return}(async()=>{console.log("🌟 Starting quantum state initialization"),w(!0),o.current=!0,d.current=setTimeout(()=>{g.isInitialized||(console.error("⚠️ Quantum state initialization timeout"),y(new Error("Initialization timeout")),h(t=>({...t,isInitialized:!0,stabilityStatus:"critical"})))},15e3);try{const t=s.getPrincipal(),r=t.toUint8Array();console.log("📊 Calculating initial coherence...");const S=Math.max(.5,r.reduce((i,M)=>i+M,0)/(r.length*255)),z=e?.level?e.level*.2:0,a=Math.min(1,S+z);console.log("🔮 Initializing dimensional state...");const c=new v;c.updateStability(a);const f=await P(t,a),p=Array.from({length:4},(i,M)=>({frequency:.5+Math.random()*.5,amplitude:.3+Math.random()*.7,phase:Math.random()*Math.PI*2,coherence:a*(.8+Math.random()*.2)}));console.log("✨ Setting initial state..."),h(i=>({...i,coherenceLevel:a,entanglementIndex:a*.8,dimensionalState:c,quantumSignature:f,resonancePatterns:p,consciousnessAlignment:e?.level?e.level*a:void 0,lastUpdate:Date.now(),isInitialized:!0,stabilityStatus:"stable"})),console.log("✅ Quantum state initialized successfully!")}catch(t){console.error("❌ Failed to initialize quantum state:",t),y(t),h(r=>({...r,isInitialized:!0,stabilityStatus:"critical"}))}finally{w(!1),d.current&&clearTimeout(d.current)}})()},[s,u,e?.level]),n.useEffect(()=>{if(!g.isInitialized||l)return;console.log("⚡ Starting quantum state updates");const I=setInterval(()=>{h(t=>{if(!t.isInitialized)return t;const r=(Date.now()-t.lastUpdate)/1e3,S=Math.pow(.995,r),z=e?.level?e.level*.1:0;t.dimensionalState.updateStability(z-.01),t.dimensionalState.getStabilityMetrics();const c=.1+(e?.level?Math.min(.3,e.level):0),f=Math.max(c,t.coherenceLevel*S),p=t.resonancePatterns?.map(i=>({...i,coherence:Math.max(c,i.coherence*S),phase:(i.phase+.1)%(Math.PI*2)}));return{...t,coherenceLevel:f,entanglementIndex:Math.max(c,t.entanglementIndex*S),stabilityStatus:t.dimensionalState.getQuantumStatus(),consciousnessAlignment:e?.level?e.level*f:void 0,resonancePatterns:p,lastUpdate:Date.now()}})},3e3);return()=>{console.log("🔄 Cleaning up quantum state updates"),clearInterval(I)}},[g.isInitialized,l,e?.level]),{state:g,isInitialized:g.isInitialized&&!l,isInitializing:l,error:m,updateQuantumState:n.useCallback(async I=>{h(t=>({...t,...I,lastUpdate:Date.now()}))},[])}};async function P(s,e){await new Promise(m=>setTimeout(m,1e3));const u=Date.now(),o=new Uint8Array(32);return crypto.getRandomValues(o),`QS-${s.toText()}-${e.toFixed(6)}-${u}-${Array.from(o.slice(0,8)).map(m=>m.toString(16).padStart(2,"0")).join("")}`}export{q as u};
//# sourceMappingURL=useQuantumState-BgjG8wtT.js.map
