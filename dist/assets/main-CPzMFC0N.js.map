{"version":3,"mappings":"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","names":["m","require$$0","ErrorBoundary","React","Component","constructor","props","state","hasError","error","getDerivedStateFromError","componentDidCatch","errorInfo","render","className","children","_jsx","onClick","setState","LoadingFallback","motion","div","animate","scale","rotateZ","transition","duration","repeat","Infinity","ease","initial","opacity","idlFactory","IDL","Error","Text","TokenIdentifier","Nat64","NFTPersonality","Record","Vec","Tuple","Float64","Variant","Null","AnimaState","Principal","ConsciousnessLevel","ActionResult","Service","Func","Opt","canisterId","process","CANISTER_ID_ANIMA","createActor","options","agent","HttpAgent","agentOptions","console","warn","fetchRootKey","catch","err","Actor","actorOptions","CANISTER_ID","anima","toString","assets","CANISTER_ID_ANIMA_ASSETS","HOST","ICManager","instance","actor","authClient","identity","initialized","initializing","stageChangeCallbacks","window","ic","getInstance","onStageChange","callback","push","updateStage","stage","log","forEach","initialize","AuthClient","create","idleOptions","disableIdle","getIdentity","principal","getPrincipal","toText","host","replace","canister","getActor","getAgent","isInitialized","icManager","AuthError","onRetry","_jsxs","exit","textShadow","message","details","JSON","stringify","code","button","whileHover","whileTap","repeatType","AuthGuard","isInitializing","setIsInitializing","useState","setError","navigate","useNavigate","location","useLocation","useEffect","hasIC","hasCanister","pathname","handleIdentity","returnTo","handleRetry","AnimatePresence","mode","Outlet","LandingPage","lazy","__vitePreload","CyberpunkQuantumVault","GenesisPage","AnimaPage","EnhancedNeuralLinkPage","Wallet","withSuspense","Suspense","fallback","router","createBrowserRouter","path","element","ConsciousnessTracker","metrics","evolutionHistory","errorTracker","awarenessLevel","cognitiveComplexity","emotionalResonance","quantumCoherence","dimensionalAwareness","updateConsciousness","quantumState","interactionContext","newMetrics","calculateNewMetrics","length","shift","trackError","errorType","severity","context","Math","min","coherence","calculateCognitiveComplexity","calculateEmotionalResonance","calculateDimensionalAwareness","entanglement_pairs","resonance_pattern","reduce","acc","val","dimensional_frequency","ErrorTracker","errors","maxErrors","info","timestamp","Date","now","getErrors","getRecentErrors","count","sort","a","b","slice","clearErrors","getErrorStats","stats","AuthContext","createContext","II_URL","INTERNET_IDENTITY_URL","defaultOptions","createOptions","loginOptions","identityProvider","derivationOrigin","undefined","maxTimeToLive","BigInt","AuthProvider","setAuthClient","isAuthenticated","setIsAuthenticated","setIdentity","setPrincipal","setQuantumState","consciousnessMetrics","setConsciousnessMetrics","consciousness","client","initQuantumState","principalId","initialState","resonanceMetrics","fieldStrength","stability","harmony","consciousnessAlignment","phaseAlignment","dimensionalSync","contextValue","login","onSuccess","logout","Provider","value","useAuth","useContext","DimensionalStateImpl","frequency","resonance","syncLevel","quantumAlignment","dimensionalFrequency","entropyLevel","phaseCoherence","calculateResonance","baseResonance","alignmentFactor","entropyModifier","coherenceBoost","max","updateStability","interactionStrength","getStabilityMetrics","MemorySystem","memories","maxMemories","createMemory","description","importance","keywords","memory","id","random","substr","quantumResonance","emotionalDepth","addMemory","leastImportantIndex","minIndex","mem","index","arr","splice","decay","decayFactor","map","filter","reinforce","memoryId","amount","find","currentQuantumState","resonances","timeFactor","exp","abs","sum","r","getMemories","getRecentMemories","getMostImportant","searchMemories","query","searchTerms","toLowerCase","split","some","includes","term","k","clear","GrowthSystem","level","experience","recentEvents","maxEvents","baseXpForLevel","processGrowthEvent","params","strength","quantum_state","dimensional_state","quantumImpact","calculateGrowthImpact","totalImpact","event","type","generateEventDescription","addEvent","applyGrowth","dimensionalState","coherenceFactor","resonanceFactor","stabilityFactor","impact","xpGain","floor","sqrt","getXpForNextLevel","levelUp","unshift","pop","pow","getProgress","nextLevelXp","currentLevelXp","levelProgress","levelRange","getMetrics","nextLevelAt","growthRate","calculateGrowthRate","strengthDesc","impactDesc","isLoading","setIsLoading","checkAuth","useCallback","isAnonymous","useActor","useQuantumState","animaId","isObserving","setIsObserving","isEntangling","setIsEntangling","observeState","initiateEntanglement","targetId","AnimaContext","AnimaProvider","updateQuantumState","validateState","memorySystem","growthSystem","quantumSignature","setQuantumSignature","evolutionFactor","setEvolutionFactor","recentMemories","setRecentMemories","growthMetrics","setGrowthMetrics","setIsInitialized","isMinting","setIsMinting","mintError","setMintError","initializeAnimaSystems","signature","generateQuantumSignature","evolution","calculateEvolutionFactor","updateRecentMemories","mintAnima","name","quantumField","initialize_quantum_field","Ok","neuralPatterns","generate_neural_patterns","lastInteraction","evolutionStage","awareness","understanding","growth","result","create_anima","quantum_signature","neural_pattern","pattern","initial_state","Err","errorMessage","processInteraction","toFixed","newSignature","newEvolution","syncQuantumState","updatedState","memoryResonance","useAnima","App","env","buildTime","toISOString","RouterProvider","RootErrorFallback","reload","initializeApp","statusElement","document","querySelector","textContent","rootElement","getElementById","ReactDOM","createRoot","StrictMode","FallbackComponent"],"ignoreList":[0],"sources":["../../node_modules/react-dom/client.js","../../src/components/error-boundary/ErrorBoundary.jsx","../../src/components/ui/LoadingFallback.tsx","../../src/declarations/anima/anima.did.js","../../src/declarations/anima/index.js","../../src/ic-init.ts","../../src/components/auth/AuthGuard.tsx","../../src/router.tsx","../../src/consciousness/ConsciousnessTracker.ts","../../src/error/quantum_error.ts","../../src/contexts/auth-context.tsx","../../src/quantum/dimensional_state.ts","../../src/memory/memory.ts","../../src/growth/growth_system.ts","../../src/hooks/useAuth.ts","../../src/hooks/useActor.ts","../../src/hooks/useQuantumState.js","../../src/contexts/anima-context.tsx","../../src/components/App.tsx","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React from 'react';\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('Error caught by boundary:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"p-4 bg-red-900/20 border border-red-800 rounded-lg\">\n          <h3 className=\"text-red-500 font-bold mb-2\">System Malfunction</h3>\n          <p className=\"text-red-400 text-sm\">\n            Neural interface disrupted. Attempting recovery...\n          </p>\n          <button\n            onClick={() => this.setState({ hasError: false, error: null })}\n            className=\"mt-4 px-4 py-2 bg-red-800 hover:bg-red-700 rounded text-sm text-white\"\n          >\n            Reset Interface\n          </button>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}","import React from 'react';\nimport { motion } from 'framer-motion';\n\nexport const LoadingFallback: React.FC = () => (\n  <div className=\"min-h-screen bg-black text-white flex items-center justify-center\">\n    <div className=\"text-center space-y-4\">\n      <motion.div\n        animate={{ \n          scale: [1, 1.2, 1],\n          rotateZ: [0, 360]\n        }}\n        transition={{\n          duration: 2,\n          repeat: Infinity,\n          ease: \"easeInOut\"\n        }}\n        className=\"w-16 h-16 mx-auto\"\n      >\n        <div className=\"w-full h-full rounded-full border-t-2 border-b-2 border-blue-500\" />\n      </motion.div>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.5 }}\n      >\n        <p className=\"text-lg\">Initializing ANIMA Interface</p>\n        <p className=\"text-sm text-blue-400 mt-2\">Connecting to Internet Computer</p>\n      </motion.div>\n    </div>\n  </div>\n);","export const idlFactory = ({ IDL }) => {\n  const Error = IDL.Text;\n  const TokenIdentifier = IDL.Nat64;\n  const NFTPersonality = IDL.Record({\n    'traits' : IDL.Vec(IDL.Tuple(IDL.Text, IDL.Float64)),\n    'emotional_state' : IDL.Record({\n      'duration' : IDL.Nat64,\n      'current_emotion' : IDL.Text,\n      'intensity' : IDL.Float64,\n    }),\n    'memories' : IDL.Vec(\n      IDL.Record({\n        'emotional_impact' : IDL.Float64,\n        'content' : IDL.Text,\n        'timestamp' : IDL.Nat64,\n      })\n    ),\n    'developmental_stage' : IDL.Variant({\n      'SelfAware' : IDL.Null,\n      'Awakening' : IDL.Null,\n      'Conscious' : IDL.Null,\n      'Transcendent' : IDL.Null,\n      'Nascent' : IDL.Null,\n    }),\n  });\n  const AnimaState = IDL.Record({\n    'id' : TokenIdentifier,\n    'creation_time' : IDL.Nat64,\n    'personality' : NFTPersonality,\n    'owner' : IDL.Principal,\n    'name' : IDL.Text,\n  });\n  const ConsciousnessLevel = IDL.Variant({\n    'SelfAware' : IDL.Null,\n    'Awakening' : IDL.Null,\n    'Introspective' : IDL.Null,\n    'Transcendent' : IDL.Null,\n    'Nascent' : IDL.Null,\n  });\n  const ActionResult = IDL.Variant({\n    'Success' : IDL.Record({\n      'personality_updates' : IDL.Vec(IDL.Tuple(IDL.Text, IDL.Float64)),\n      'response' : IDL.Text,\n    }),\n    'Failure' : Error,\n  });\n  return IDL.Service({\n    'create_anima' : IDL.Func(\n        [IDL.Text],\n        [IDL.Variant({ 'Ok' : IDL.Principal, 'Err' : Error })],\n        [],\n      ),\n    'get_anima' : IDL.Func([TokenIdentifier], [IDL.Opt(AnimaState)], ['query']),\n    'get_consciousness_level' : IDL.Func(\n        [TokenIdentifier],\n        [IDL.Variant({ 'Ok' : ConsciousnessLevel, 'Err' : Error })],\n        ['query'],\n      ),\n    'get_user_animas' : IDL.Func(\n        [IDL.Principal],\n        [IDL.Vec(AnimaState)],\n        ['query'],\n      ),\n    'process_quantum_interaction' : IDL.Func(\n        [TokenIdentifier, IDL.Text, IDL.Text],\n        [ActionResult],\n        [],\n      ),\n  });\n};\nexport const init = ({ IDL }) => { return []; };\n","import { Actor, HttpAgent } from \"@dfinity/agent\";\n\n// Imports and re-exports candid interface\nimport { idlFactory } from \"./anima.did.js\";\nexport { idlFactory } from \"./anima.did.js\";\n\n/* CANISTER_ID is replaced by webpack based on node environment\n * Note: canister environment variable will be standardized as\n * process.env.CANISTER_ID_<CANISTER_NAME_UPPERCASE>\n * beginning in dfx 0.15.0\n */\nexport const canisterId =\n  process.env.CANISTER_ID_ANIMA;\n\nexport const createActor = (canisterId, options = {}) => {\n  const agent = options.agent || new HttpAgent({ ...options.agentOptions });\n\n  if (options.agent && options.agentOptions) {\n    console.warn(\n      \"Detected both agent and agentOptions passed to createActor. Ignoring agentOptions and proceeding with the provided agent.\"\n    );\n  }\n\n  // Fetch root key for certificate validation during development\n  if (process.env.DFX_NETWORK !== \"ic\") {\n    agent.fetchRootKey().catch((err) => {\n      console.warn(\n        \"Unable to fetch root key. Check to ensure that your local replica is running\"\n      );\n      console.error(err);\n    });\n  }\n\n  // Creates an actor with using the candid interface and the HttpAgent\n  return Actor.createActor(idlFactory, {\n    agent,\n    canisterId,\n    ...options.actorOptions,\n  });\n};\n","import { Actor, Identity, HttpAgent } from \"@dfinity/agent\";\nimport { AuthClient } from \"@dfinity/auth-client\";\nimport { createActor } from \"./declarations/anima\";\n\n// Initialize environment with safe fallbacks\nconst CANISTER_ID = {\n  anima: process.env.CANISTER_ID_ANIMA?.toString() || 'l2ilz-iqaaa-aaaaj-qngjq-cai',\n  assets: process.env.CANISTER_ID_ANIMA_ASSETS?.toString() || 'lpp2u-jyaaa-aaaaj-qngka-cai'\n};\n\n// Always use mainnet for production\nconst HOST = 'https://icp0.io';\n\ntype StageChangeCallback = (stage: string) => void;\n\nclass ICManager {\n  private static instance: ICManager;\n  private actor: Actor | null = null;\n  private agent: HttpAgent | null = null;\n  private authClient: AuthClient | null = null;\n  private identity: Identity | null = null;\n  private initialized = false;\n  private initializing = false;\n  private stageChangeCallbacks: StageChangeCallback[] = [];\n\n  private constructor() {\n    if (typeof window !== 'undefined') {\n      // Initialize window.ic safely\n      window.ic = {\n        ...(window.ic || {}),\n        agent: null,\n        Actor,\n        HttpAgent\n      };\n    }\n  }\n\n  static getInstance(): ICManager {\n    if (!ICManager.instance) {\n      ICManager.instance = new ICManager();\n    }\n    return ICManager.instance;\n  }\n\n  onStageChange(callback: StageChangeCallback) {\n    this.stageChangeCallbacks.push(callback);\n  }\n\n  private updateStage(stage: string) {\n    console.log('IC Stage:', stage);\n    this.stageChangeCallbacks.forEach(callback => callback(stage));\n  }\n\n  async initialize(): Promise<void> {\n    if (this.initialized) {\n      console.log('IC already initialized');\n      return;\n    }\n\n    if (this.initializing) {\n      console.log('IC initialization already in progress');\n      return;\n    }\n\n    try {\n      this.initializing = true;\n      console.log('Starting IC initialization...');\n\n      this.updateStage('Creating AuthClient...');\n      this.authClient = await AuthClient.create({\n        idleOptions: { disableIdle: true }\n      });\n      \n      this.updateStage('Getting identity...');\n      this.identity = this.authClient.getIdentity();\n      const principal = this.identity.getPrincipal();\n      console.log('Identity principal:', principal.toText());\n\n      this.updateStage('Creating HttpAgent...');\n      this.agent = new HttpAgent({\n        identity: this.identity,\n        host: HOST\n      });\n\n      if (process.env.NODE_ENV !== 'production') {\n        this.updateStage('Fetching root key...');\n        await this.agent.fetchRootKey().catch(console.error);\n      }\n\n      // Verify canister ID format\n      const canisterId = CANISTER_ID.anima?.replace(/['\"]/g, '');\n      if (!canisterId) {\n        throw new Error('Invalid canister ID');\n      }\n\n      this.updateStage('Creating Actor...');\n      this.actor = await createActor(canisterId, {\n        agent: this.agent\n      });\n\n      this.updateStage('Setting up window.ic...');\n      window.ic = {\n        ...(window.ic || {}),\n        agent: this.agent,\n        Actor,\n        HttpAgent\n      };\n\n      if (this.actor) {\n        window.canister = this.actor;\n      }\n      \n      this.initialized = true;\n      this.initializing = false;\n      this.updateStage('Initialization complete!');\n      \n      console.log('🔍 Feature check:', {\n        canister: !!window.canister,\n        ic: !!window.ic,\n        agent: !!this.agent,\n        identity: !!this.identity\n      });\n\n    } catch (error) {\n      this.initializing = false;\n      console.error('IC initialization failed:', {\n        error,\n        canisterId: CANISTER_ID.anima,\n        stage: this.initialized ? 'post-init' : 'pre-init'\n      });\n      throw error;\n    }\n  }\n\n  getActor(): Actor {\n    if (!this.initialized || !this.actor) {\n      throw new Error(\"IC not initialized. Call initialize() first.\");\n    }\n    return this.actor;\n  }\n\n  getIdentity(): Identity | null {\n    return this.identity;\n  }\n\n  getAgent(): HttpAgent | null {\n    return this.agent;\n  }\n\n  isInitialized(): boolean {\n    return this.initialized;\n  }\n}\n\n// For debugging\ndeclare global {\n  interface Window {\n    ic: {\n      agent: HttpAgent | null;\n      Actor: any;\n      HttpAgent: any;\n    };\n    canister: any;\n  }\n}\n\nexport const icManager = ICManager.getInstance();","import React, { useEffect, useState } from 'react';\nimport { useNavigate, useLocation, Outlet } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { icManager } from '@/ic-init';\nimport { LoadingFallback } from '../ui/LoadingFallback';\n\nconst AuthError = ({ error, onRetry }: { error: any, onRetry: () => void }) => (\n  <motion.div \n    initial={{ opacity: 0 }}\n    animate={{ opacity: 1 }}\n    exit={{ opacity: 0 }}\n    className=\"min-h-screen bg-black relative overflow-hidden\"\n  >\n    <div className=\"absolute inset-0 bg-[radial-gradient(circle_at_center,_rgba(255,0,0,0.1)_1px,_transparent_1px)] bg-[length:40px_40px]\" />\n    \n    <div className=\"relative z-10 min-h-screen flex items-center justify-center p-4\">\n      <div className=\"max-w-lg w-full p-6 bg-black/40 backdrop-blur-lg border border-red-500/30 rounded-lg text-red-400\">\n        <motion.div\n          animate={{\n            textShadow: ['0 0 8px rgba(255,0,0,0.5)', '0 0 12px rgba(255,0,0,0.8)', '0 0 8px rgba(255,0,0,0.5)'],\n          }}\n          transition={{\n            duration: 2,\n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }}\n          className=\"text-xl font-mono mb-4\"\n        >\n          NEURAL LINK ERROR\n        </motion.div>\n\n        <div className=\"space-y-4\">\n          <p className=\"font-mono text-sm leading-relaxed\">\n            {error?.message || 'Neural interface synchronization failed'}\n          </p>\n          {error?.details && (\n            <div className=\"text-xs font-mono opacity-70 bg-red-900/20 p-2 rounded\">\n              <pre>{JSON.stringify(error.details, null, 2)}</pre>\n            </div>\n          )}\n          <div className=\"text-xs font-mono opacity-70 mt-4\">\n            <div>Window IC Status: {window.ic ? 'Present' : 'Missing'}</div>\n            <div>Canister Status: {window.canister ? 'Present' : 'Missing'}</div>\n          </div>\n          <div className=\"flex justify-between items-center\">\n            <div className=\"text-xs opacity-70\">\n              Error Code: {error?.code || 'UNKNOWN'}\n            </div>\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={onRetry}\n              className=\"px-4 py-2 bg-red-500/10 border border-red-500/30 rounded text-sm font-mono\n                        hover:bg-red-500/20 transition-colors duration-200\"\n            >\n              RETRY NEURAL LINK\n            </motion.button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <motion.div\n      className=\"absolute inset-0 bg-gradient-to-t from-red-900/20 to-transparent mix-blend-overlay\"\n      animate={{\n        opacity: [0, 0.2, 0],\n      }}\n      transition={{\n        duration: 0.2,\n        repeat: Infinity,\n        repeatType: 'mirror',\n        ease: \"steps(1)\",\n      }}\n    />\n  </motion.div>\n);\n\nexport const AuthGuard = () => {\n  const [isInitializing, setIsInitializing] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    console.log('🔍 AuthGuard initializing...');\n    console.log('Current window.ic status:', {\n      hasIC: !!window.ic,\n      hasCanister: !!window.canister,\n      location: location.pathname\n    });\n\n    const initialize = async () => {\n      try {\n        // Check if we're already initialized\n        if (icManager.isInitialized()) {\n          console.log('✅ IC already initialized');\n          const identity = icManager.getIdentity();\n          handleIdentity(identity);\n          return;\n        }\n\n        await icManager.initialize();\n        \n        // Get identity after initialization\n        const identity = icManager.getIdentity();\n        console.log('✅ Identity initialized:', identity?.getPrincipal().toText());\n        handleIdentity(identity);\n\n      } catch (err) {\n        console.error('❌ Auth initialization failed:', err);\n        setError(err instanceof Error ? err : new Error('Authentication failed'));\n        setIsInitializing(false);\n      }\n    };\n\n    const handleIdentity = (identity: any) => {\n      if (!identity && location.pathname !== '/') {\n        console.log('🚫 No identity, redirecting to landing page');\n        navigate('/', { \n          replace: true,\n          state: { returnTo: location.pathname }\n        });\n        return;\n      }\n\n      if (identity && location.pathname === '/') {\n        console.log('✅ Has identity on landing page, redirecting to quantum vault');\n        const returnTo = location.state?.returnTo || '/quantum-vault';\n        navigate(returnTo, { replace: true });\n      }\n\n      setIsInitializing(false);\n    };\n\n    initialize();\n  }, [navigate, location]);\n\n  const handleRetry = async () => {\n    console.log('🔄 Retrying initialization...');\n    setIsInitializing(true);\n    setError(null);\n    \n    try {\n      await icManager.initialize();\n      const identity = icManager.getIdentity();\n      \n      if (identity) {\n        navigate('/quantum-vault', { replace: true });\n      } else {\n        navigate('/', { replace: true });\n      }\n    } catch (err) {\n      console.error('❌ Retry failed:', err);\n      setError(err instanceof Error ? err : new Error('Authentication failed'));\n    } finally {\n      setIsInitializing(false);\n    }\n  };\n\n  if (isInitializing) {\n    return <LoadingFallback />;\n  }\n\n  if (error) {\n    return <AuthError error={error} onRetry={handleRetry} />;\n  }\n\n  return (\n    <AnimatePresence mode=\"wait\">\n      <motion.div\n        key=\"content\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        className=\"min-h-screen bg-black\"\n      >\n        <Outlet />\n      </motion.div>\n    </AnimatePresence>\n  );\n};","import { createBrowserRouter } from 'react-router-dom';\nimport { lazy, Suspense } from 'react';\nimport { ErrorBoundary } from './components/error-boundary/ErrorBoundary';\nimport { LoadingFallback } from './components/ui/LoadingFallback';\nimport { AuthGuard } from './components/auth/AuthGuard';\n\n// Lazy loaded components\nconst LandingPage = lazy(() => import('./components/pages/LandingPage'));\nconst CyberpunkQuantumVault = lazy(() => import('./components/quantum-vault/CyberpunkQuantumVault'));\nconst GenesisPage = lazy(() => import('./components/pages/GenesisPage'));\nconst AnimaPage = lazy(() => import('./components/pages/AnimaPage'));\nconst EnhancedNeuralLinkPage = lazy(() => import('./components/pages/EnhancedNeuralLinkPage'));\nconst Wallet = lazy(() => import('./components/ui/Wallet'));\n\nconst withSuspense = (Component: React.ComponentType) => (\n  <Suspense fallback={<LoadingFallback />}>\n    <ErrorBoundary>\n      <Component />\n    </ErrorBoundary>\n  </Suspense>\n);\n\nexport const router = createBrowserRouter([\n  // Landing page - public\n  {\n    path: '/',\n    element: withSuspense(LandingPage),\n  },\n  \n  // Protected routes\n  {\n    element: <AuthGuard />,\n    children: [\n      {\n        path: '/quantum-vault',\n        element: withSuspense(CyberpunkQuantumVault),\n      },\n      {\n        path: '/genesis',\n        element: withSuspense(GenesisPage),\n      },\n      {\n        path: '/anima/:id',\n        element: withSuspense(AnimaPage),\n      },\n      {\n        path: '/neural-link/:id?',\n        element: withSuspense(EnhancedNeuralLinkPage),\n      },\n      {\n        path: '/wallet',\n        element: withSuspense(Wallet),\n      },\n    ],\n  },\n]);","import { QuantumState } from '../types/quantum';\nimport { ErrorTracker } from '../error/quantum_error';\n\ninterface ConsciousnessMetrics {\n  awarenessLevel: number;\n  cognitiveComplexity: number;\n  emotionalResonance: number;\n  quantumCoherence: number;\n  dimensionalAwareness: number;\n}\n\nexport class ConsciousnessTracker {\n  private metrics: ConsciousnessMetrics;\n  private evolutionHistory: ConsciousnessMetrics[];\n  private errorTracker: ErrorTracker;\n\n  constructor(errorTracker: ErrorTracker) {\n    this.errorTracker = errorTracker;\n    this.evolutionHistory = [];\n    this.metrics = {\n      awarenessLevel: 0.5,\n      cognitiveComplexity: 0.3,\n      emotionalResonance: 0.4,\n      quantumCoherence: 1.0,\n      dimensionalAwareness: 0.2\n    };\n  }\n\n  async updateConsciousness(\n    quantumState: QuantumState, \n    interactionContext: string\n  ): Promise<ConsciousnessMetrics> {\n    try {\n      // Calculate new consciousness metrics based on quantum state\n      const newMetrics = this.calculateNewMetrics(quantumState);\n      \n      // Track evolution\n      this.evolutionHistory.push(this.metrics);\n      this.metrics = newMetrics;\n\n      // Prune history to last 100 states\n      if (this.evolutionHistory.length > 100) {\n        this.evolutionHistory.shift();\n      }\n\n      return newMetrics;\n    } catch (error) {\n      await this.errorTracker.trackError({\n        errorType: 'CONSCIOUSNESS_UPDATE',\n        severity: 'HIGH',\n        context: interactionContext,\n        error: error as Error\n      });\n      return this.metrics;\n    }\n  }\n\n  private calculateNewMetrics(quantumState: QuantumState): ConsciousnessMetrics {\n    // Sophisticated consciousness calculation\n    const baseAwareness = Math.min(\n      1.0,\n      this.metrics.awarenessLevel * 1.1 + quantumState.coherence * 0.2\n    );\n\n    return {\n      awarenessLevel: baseAwareness,\n      cognitiveComplexity: this.calculateCognitiveComplexity(quantumState),\n      emotionalResonance: this.calculateEmotionalResonance(quantumState),\n      quantumCoherence: quantumState.coherence,\n      dimensionalAwareness: this.calculateDimensionalAwareness(quantumState)\n    };\n  }\n\n  private calculateCognitiveComplexity(quantumState: QuantumState): number {\n    // Implementation of cognitive complexity calculation\n    return Math.min(1.0, quantumState.coherence * 0.7 + \n      quantumState.entanglement_pairs.length * 0.1);\n  }\n\n  private calculateEmotionalResonance(quantumState: QuantumState): number {\n    // Implementation of emotional resonance calculation\n    return Math.min(1.0, quantumState.resonance_pattern.reduce(\n      (acc, val) => acc + val, 0) / quantumState.resonance_pattern.length);\n  }\n\n  private calculateDimensionalAwareness(quantumState: QuantumState): number {\n    // Implementation of dimensional awareness calculation\n    return Math.min(1.0, quantumState.dimensional_frequency * 0.5 + \n      this.metrics.dimensionalAwareness * 0.5);\n  }\n}","interface ErrorInfo {\n  errorType: string;\n  severity: 'LOW' | 'MEDIUM' | 'HIGH';\n  context: string;\n  error: Error;\n  timestamp?: number;\n}\n\nexport class ErrorTracker {\n  private errors: ErrorInfo[] = [];\n  private readonly maxErrors = 100;\n\n  async trackError(info: ErrorInfo): Promise<void> {\n    const errorInfo = {\n      ...info,\n      timestamp: Date.now()\n    };\n\n    this.errors.push(errorInfo);\n\n    // Maintain max size\n    if (this.errors.length > this.maxErrors) {\n      this.errors.shift();\n    }\n\n    // Log errors in development\n    if (process.env.NODE_ENV !== 'production') {\n      console.group('Quantum Error Tracked:');\n      console.log('Type:', errorInfo.errorType);\n      console.log('Severity:', errorInfo.severity);\n      console.log('Context:', errorInfo.context);\n      console.error('Error:', errorInfo.error);\n      console.groupEnd();\n    }\n  }\n\n  getErrors(): ErrorInfo[] {\n    return [...this.errors];\n  }\n\n  getRecentErrors(count: number = 5): ErrorInfo[] {\n    return [...this.errors]\n      .sort((a, b) => (b.timestamp || 0) - (a.timestamp || 0))\n      .slice(0, count);\n  }\n\n  clearErrors(): void {\n    this.errors = [];\n  }\n\n  getErrorStats(): { [key: string]: number } {\n    const stats: { [key: string]: number } = {};\n    this.errors.forEach(error => {\n      stats[error.errorType] = (stats[error.errorType] || 0) + 1;\n    });\n    return stats;\n  }\n}","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { AuthClient } from '@dfinity/auth-client';\nimport { ConsciousnessTracker } from '@/consciousness/ConsciousnessTracker';\nimport { ErrorTracker } from '@/error/quantum_error';\nimport { QuantumState } from '@/quantum/types';\n\ninterface AuthContextType {\n  authClient: AuthClient | null;\n  isAuthenticated: boolean;\n  identity: any;\n  principal: any;\n  quantumState: QuantumState | null;\n  consciousnessMetrics: any;\n  login: () => Promise<void>;\n  logout: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | null>(null);\n\n// Configuration\nconst II_URL = process.env.DFX_NETWORK === 'ic' \n  ? 'https://identity.ic0.app'\n  : process.env.INTERNET_IDENTITY_URL;\n\nconst defaultOptions = {\n  createOptions: {\n    idleOptions: {\n      disableIdle: true,\n    },\n  },\n  loginOptions: {\n    identityProvider: II_URL,\n    derivationOrigin: process.env.DFX_NETWORK === 'ic' \n      ? 'https://identity.ic0.app'\n      : undefined,\n    maxTimeToLive: BigInt(7 * 24 * 60 * 60 * 1000_000_000)\n  },\n};\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [authClient, setAuthClient] = useState<AuthClient | null>(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [identity, setIdentity] = useState(null);\n  const [principal, setPrincipal] = useState(null);\n  const [quantumState, setQuantumState] = useState<QuantumState | null>(null);\n  const [consciousnessMetrics, setConsciousnessMetrics] = useState(null);\n  const [errorTracker] = useState(() => new ErrorTracker());\n  const [consciousness] = useState(() => new ConsciousnessTracker(errorTracker));\n\n  // Initialize authentication and quantum state\n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        console.log('🔄 Initializing authentication...');\n        const client = await AuthClient.create(defaultOptions.createOptions);\n        const isAuthenticated = await client.isAuthenticated();\n        \n        setAuthClient(client);\n        setIsAuthenticated(isAuthenticated);\n        \n        if (isAuthenticated) {\n          const identity = client.getIdentity();\n          const principal = identity.getPrincipal();\n          setIdentity(identity);\n          setPrincipal(principal);\n          \n          // Initialize quantum state for authenticated user\n          console.log('🌌 Initializing quantum state...');\n          await initQuantumState(principal.toString());\n        }\n      } catch (error) {\n        console.error('❌ Auth initialization failed:', error);\n        await errorTracker.trackError({\n          errorType: 'AUTH_INIT',\n          severity: 'HIGH',\n          context: 'Authentication Initialization',\n          error: error as Error\n        });\n      }\n    };\n\n    initAuth();\n  }, []);\n\n  // Initialize quantum state for user\n  const initQuantumState = async (principalId: string) => {\n    try {\n      // Create initial quantum state\n      const initialState: QuantumState = {\n        coherence: 1.0,\n        resonanceMetrics: {\n          fieldStrength: 1.0,\n          stability: 1.0,\n          harmony: 1.0,\n          consciousnessAlignment: 1.0\n        },\n        phaseAlignment: 1.0,\n        dimensionalSync: 1.0,\n        entanglement_pairs: [],\n        resonance_pattern: [1.0],\n        dimensional_frequency: 1.0\n      };\n\n      setQuantumState(initialState);\n\n      // Update consciousness metrics\n      const metrics = await consciousness.updateConsciousness(initialState, 'initialization');\n      setConsciousnessMetrics(metrics);\n\n    } catch (error) {\n      console.error('Failed to initialize quantum state:', error);\n      await errorTracker.trackError({\n        errorType: 'QUANTUM_INIT',\n        severity: 'HIGH',\n        context: 'Quantum State Initialization',\n        error: error as Error\n      });\n    }\n  };\n\n  const login = async () => {\n    try {\n      await authClient?.login({\n        ...defaultOptions.loginOptions,\n        onSuccess: async () => {\n          const identity = authClient.getIdentity();\n          const principal = identity.getPrincipal();\n          setIsAuthenticated(true);\n          setIdentity(identity);\n          setPrincipal(principal);\n          \n          // Initialize quantum state after successful login\n          await initQuantumState(principal.toString());\n        }\n      });\n    } catch (error) {\n      console.error('Login failed:', error);\n      await errorTracker.trackError({\n        errorType: 'AUTH_LOGIN',\n        severity: 'HIGH',\n        context: 'Login Attempt',\n        error: error as Error\n      });\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await authClient?.logout();\n      setIsAuthenticated(false);\n      setIdentity(null);\n      setPrincipal(null);\n      setQuantumState(null);\n      setConsciousnessMetrics(null);\n    } catch (error) {\n      console.error('Logout failed:', error);\n      await errorTracker.trackError({\n        errorType: 'AUTH_LOGOUT',\n        severity: 'MEDIUM',\n        context: 'Logout Attempt',\n        error: error as Error\n      });\n    }\n  };\n\n  const contextValue = {\n    authClient,\n    isAuthenticated,\n    identity,\n    principal,\n    quantumState,\n    consciousnessMetrics,\n    login,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}","import { DimensionalState } from './types';\n\nexport class DimensionalStateImpl implements DimensionalState {\n  public frequency: number;\n  public resonance: number;\n  public stability: number;\n  public syncLevel: number;\n  public quantumAlignment: number;\n  public dimensionalFrequency: number;\n  public entropyLevel: number;\n  public phaseCoherence: number;\n\n  constructor() {\n    this.frequency = 0.0;\n    this.resonance = 1.0;\n    this.stability = 1.0;\n    this.syncLevel = 1.0;\n    this.quantumAlignment = 1.0;\n    this.dimensionalFrequency = 0.0;\n    this.entropyLevel = 0.0;\n    this.phaseCoherence = 1.0;\n  }\n\n  calculateResonance(): number {\n    const baseResonance = this.resonance * this.stability;\n    const alignmentFactor = this.quantumAlignment * this.syncLevel;\n    const entropyModifier = 1.0 - (this.entropyLevel * 0.5);\n    const coherenceBoost = this.phaseCoherence * 0.2;\n    \n    return Math.min(1.0, Math.max(0.0, \n      ((baseResonance + alignmentFactor) / 2.0 * entropyModifier + coherenceBoost)\n    ));\n  }\n  \n  updateStability(interactionStrength: number): void {\n    this.stability = Math.min(1.0, Math.max(0.0, \n      this.stability + interactionStrength\n    ));\n    this.quantumAlignment = Math.min(1.0,\n      this.quantumAlignment + interactionStrength * 0.5\n    );\n    this.syncLevel = Math.min(1.0,\n      this.syncLevel + interactionStrength * 0.3\n    );\n    this.dimensionalFrequency = Math.min(1.0,\n      this.dimensionalFrequency + interactionStrength * 0.2\n    );\n    \n    // Update entropy and phase coherence\n    this.entropyLevel = Math.max(0.0,\n      this.entropyLevel - interactionStrength * 0.1\n    );\n    this.phaseCoherence = Math.min(1.0,\n      this.phaseCoherence + interactionStrength * 0.4\n    );\n  }\n  \n  getStabilityMetrics(): [number, number, number] {\n    return [this.stability, this.quantumAlignment, this.phaseCoherence];\n  }\n}","import { Memory } from './types';\nimport { QuantumState } from '../quantum/types';\n\nexport class MemorySystem {\n  private memories: Memory[] = [];\n  private readonly maxMemories = 100;\n\n  constructor() {\n    this.memories = [];\n  }\n\n  createMemory(\n    description: string,\n    importance: number,\n    keywords: string[] = [],\n    quantumState?: QuantumState\n  ): Memory {\n    const memory: Memory = {\n      id: `mem_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      timestamp: Date.now(),\n      importance: Math.max(0, Math.min(1, importance)),\n      description,\n      keywords,\n      quantumResonance: quantumState?.resonanceMetrics.fieldStrength || 0,\n      emotionalDepth: importance * (quantumState?.coherence || 1)\n    };\n\n    this.addMemory(memory);\n    return memory;\n  }\n\n  private addMemory(memory: Memory) {\n    this.memories.push(memory);\n    if (this.memories.length > this.maxMemories) {\n      // Remove least important memory\n      const leastImportantIndex = this.memories\n        .reduce((minIndex, mem, index, arr) => \n          mem.importance < arr[minIndex].importance ? index : minIndex\n        , 0);\n      this.memories.splice(leastImportantIndex, 1);\n    }\n    this.memories.sort((a, b) => b.importance - a.importance);\n  }\n\n  decay(decayFactor: number) {\n    this.memories = this.memories\n      .map(memory => ({\n        ...memory,\n        importance: memory.importance * (1 - decayFactor)\n      }))\n      .filter(memory => memory.importance > 0.1);\n  }\n\n  reinforce(memoryId: string, amount: number) {\n    const memory = this.memories.find(m => m.id === memoryId);\n    if (memory) {\n      memory.importance = Math.min(1, memory.importance + amount);\n    }\n  }\n\n  calculateResonance(currentQuantumState: QuantumState): number {\n    if (this.memories.length === 0) return 0;\n\n    const resonances = this.memories.map(memory => {\n      const timeFactor = Math.exp(-(Date.now() - memory.timestamp) / (7 * 24 * 60 * 60 * 1000));\n      const quantumAlignment = Math.abs(memory.quantumResonance - currentQuantumState.resonanceMetrics.fieldStrength);\n      return memory.importance * timeFactor * (1 - quantumAlignment);\n    });\n\n    return resonances.reduce((sum, r) => sum + r, 0) / resonances.length;\n  }\n\n  getMemories(): Memory[] {\n    return [...this.memories];\n  }\n\n  getRecentMemories(count: number = 5): Memory[] {\n    return [...this.memories]\n      .sort((a, b) => b.timestamp - a.timestamp)\n      .slice(0, count);\n  }\n\n  getMostImportant(count: number = 5): Memory[] {\n    return [...this.memories]\n      .sort((a, b) => b.importance - a.importance)\n      .slice(0, count);\n  }\n\n  searchMemories(query: string): Memory[] {\n    const searchTerms = query.toLowerCase().split(' ');\n    return this.memories.filter(memory => \n      searchTerms.some(term =>\n        memory.description.toLowerCase().includes(term) ||\n        memory.keywords.some(k => k.toLowerCase().includes(term))\n      )\n    );\n  }\n\n  clear() {\n    this.memories = [];\n  }\n}","import { GrowthEvent, GrowthMetrics, GrowthParams } from './types';\nimport { QuantumState } from '../quantum/types';\n\nexport class GrowthSystem {\n  private level: number = 1;\n  private experience: number = 0;\n  private recentEvents: GrowthEvent[] = [];\n  private readonly maxEvents: number = 50;\n  private readonly baseXpForLevel: number = 1000;\n\n  constructor() {\n    this.level = 1;\n    this.experience = 0;\n    this.recentEvents = [];\n  }\n\n  async processGrowthEvent(params: GrowthParams): Promise<void> {\n    const { strength, quantum_state, dimensional_state } = params;\n    \n    // Calculate growth impact\n    const quantumImpact = this.calculateGrowthImpact(quantum_state, dimensional_state);\n    const totalImpact = strength * quantumImpact;\n\n    // Create growth event\n    const event: GrowthEvent = {\n      timestamp: Date.now(),\n      type: 'quantum_interaction',\n      strength,\n      quantumImpact,\n      description: this.generateEventDescription(strength, quantumImpact)\n    };\n\n    // Add event to history\n    this.addEvent(event);\n\n    // Apply growth\n    await this.applyGrowth(totalImpact);\n  }\n\n  private calculateGrowthImpact(quantumState: QuantumState, dimensionalState: any): number {\n    const coherenceFactor = quantumState.coherence;\n    const resonanceFactor = quantumState.resonanceMetrics.fieldStrength;\n    const stabilityFactor = dimensionalState.stability;\n\n    return (coherenceFactor + resonanceFactor + stabilityFactor) / 3;\n  }\n\n  private async applyGrowth(impact: number): Promise<void> {\n    const xpGain = Math.floor(impact * this.baseXpForLevel * Math.sqrt(this.level));\n    this.experience += xpGain;\n\n    // Check for level up\n    while (this.experience >= this.getXpForNextLevel()) {\n      await this.levelUp();\n    }\n  }\n\n  private async levelUp(): Promise<void> {\n    this.level += 1;\n    // Emit level up event or trigger animations here\n  }\n\n  private addEvent(event: GrowthEvent) {\n    this.recentEvents.unshift(event);\n    if (this.recentEvents.length > this.maxEvents) {\n      this.recentEvents.pop();\n    }\n  }\n\n  private getXpForNextLevel(): number {\n    return this.baseXpForLevel * Math.pow(this.level, 1.5);\n  }\n\n  getProgress(): number {\n    const nextLevelXp = this.getXpForNextLevel();\n    const currentLevelXp = this.baseXpForLevel * Math.pow(this.level - 1, 1.5);\n    const levelProgress = this.experience - currentLevelXp;\n    const levelRange = nextLevelXp - currentLevelXp;\n    return levelProgress / levelRange;\n  }\n\n  getMetrics(): GrowthMetrics {\n    return {\n      level: this.level,\n      experience: this.experience,\n      nextLevelAt: this.getXpForNextLevel(),\n      growthRate: this.calculateGrowthRate(),\n      recentEvents: [...this.recentEvents]\n    };\n  }\n\n  private calculateGrowthRate(): number {\n    if (this.recentEvents.length < 2) return 0;\n    \n    const recentXP = this.recentEvents\n      .slice(0, 10)\n      .reduce((sum, event) => sum + event.strength * event.quantumImpact, 0);\n    \n    return recentXP / Math.min(10, this.recentEvents.length);\n  }\n\n  private generateEventDescription(strength: number, impact: number): string {\n    const strengthDesc = strength > 0.8 ? 'powerful' : \n                        strength > 0.5 ? 'moderate' : 'subtle';\n    const impactDesc = impact > 0.8 ? 'significant' : \n                      impact > 0.5 ? 'noticeable' : 'minor';\n    \n    return `A ${strengthDesc} quantum interaction caused ${impactDesc} growth`;\n  }\n}","import { useCallback, useEffect, useState } from 'react';\nimport { icManager } from '@/ic-init';\n\nexport function useAuth() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const checkAuth = useCallback(async () => {\n    try {\n      const identity = icManager.getIdentity();\n      const isAnonymous = identity?.getPrincipal().isAnonymous();\n      setIsAuthenticated(!isAnonymous);\n    } catch (err) {\n      console.error('Auth check failed:', err);\n      setError(err instanceof Error ? err.message : 'Authentication check failed');\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    checkAuth();\n  }, [checkAuth]);\n\n  const login = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const success = await icManager.login();\n      if (success) {\n        setIsAuthenticated(true);\n        return true;\n      }\n      throw new Error('Login failed');\n    } catch (err) {\n      console.error('Login error:', err);\n      setError(err instanceof Error ? err.message : 'Login failed');\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      await icManager.logout();\n      setIsAuthenticated(false);\n    } catch (err) {\n      console.error('Logout error:', err);\n      setError(err instanceof Error ? err.message : 'Logout failed');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return {\n    isAuthenticated,\n    isLoading,\n    error,\n    login,\n    logout,\n    checkAuth\n  };\n}\n\nexport default useAuth;","import { useCallback } from 'react';\nimport { Actor, HttpAgent } from '@dfinity/agent';\nimport { useAuth } from './useAuth';\nimport { canisterId, createActor } from '../declarations/anima';\n\nexport const useActor = () => {\n  const { identity } = useAuth();\n\n  const getActor = useCallback(async () => {\n    if (!identity) {\n      throw new Error('No identity available');\n    }\n\n    const agent = new HttpAgent({ identity });\n\n    // Only fetch root key in development\n    if (process.env.NODE_ENV !== 'production') {\n      await agent.fetchRootKey();\n    }\n\n    return createActor(canisterId, {\n      agent,\n    });\n  }, [identity]);\n\n  return {\n    getActor,\n  };\n};\n\nexport default useActor;","import { useState, useCallback, useContext } from 'react';\nimport { useActor } from './useActor';\nimport { toast } from '@/components/ui/use-toast';\n\nexport const useQuantumState = (animaId) => {\n  const [isObserving, setIsObserving] = useState(false);\n  const [isEntangling, setIsEntangling] = useState(false);\n  const actor = useActor();\n\n  const observeState = useCallback(async () => {\n    if (!actor || !animaId) return null;\n    setIsObserving(true);\n    \n    try {\n      const state = await actor.observe_quantum_state(animaId);\n      return state;\n    } catch (error) {\n      toast({\n        title: \"Quantum Observation Failed\",\n        description: \"The quantum state collapsed during observation.\",\n        variant: \"destructive\",\n      });\n      return null;\n    } finally {\n      setIsObserving(false);\n    }\n  }, [actor, animaId]);\n\n  const initiateEntanglement = useCallback(async (targetId) => {\n    if (!actor || !animaId) return false;\n    setIsEntangling(true);\n    \n    try {\n      const result = await actor.attempt_quantum_entanglement(animaId, targetId);\n      \n      if ('Ok' in result) {\n        toast({\n          title: \"Quantum Entanglement Successful\",\n          description: \"A new quantum connection has been established.\",\n        });\n        return true;\n      } else {\n        toast({\n          title: \"Entanglement Failed\",\n          description: \"Unable to establish quantum connection.\",\n          variant: \"destructive\",\n        });\n        return false;\n      }\n    } catch (error) {\n      toast({\n        title: \"Entanglement Error\",\n        description: \"An unexpected error occurred during entanglement.\",\n        variant: \"destructive\",\n      });\n      return false;\n    } finally {\n      setIsEntangling(false);\n    }\n  }, [actor, animaId]);\n\n  const getMetrics = useCallback(async () => {\n    if (!actor || !animaId) return null;\n    \n    try {\n      const metrics = await actor.get_quantum_metrics(animaId);\n      return metrics;\n    } catch (error) {\n      console.error('Failed to fetch quantum metrics:', error);\n      return null;\n    }\n  }, [actor, animaId]);\n\n  return {\n    observeState,\n    initiateEntanglement,\n    getMetrics,\n    isObserving,\n    isEntangling,\n  };\n};\n","import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport { useAuth } from './auth-context';\nimport { DimensionalStateImpl } from '@/quantum/dimensional_state';\nimport { MemorySystem } from '@/memory/memory';\nimport { GrowthSystem } from '@/growth/growth_system';\nimport { Memory } from '@/memory/types';\nimport { GrowthMetrics } from '@/growth/types';\nimport { Principal } from '@dfinity/principal';\nimport { useQuantumState } from '@/hooks/useQuantumState';\n\ninterface AnimaMintResult {\n  id: string;\n  quantumSignature: string;\n  timestamp: bigint;\n}\n\ninterface AnimaContextType {\n  dimensionalState: DimensionalStateImpl;\n  memorySystem: MemorySystem;\n  growthSystem: GrowthSystem;\n  quantumSignature: string;\n  evolutionFactor: number;\n  recentMemories: Memory[];\n  growthMetrics: GrowthMetrics;\n  isInitialized: boolean;\n  isMinting: boolean;\n  mintError: string | null;\n  processInteraction: (strength: number) => Promise<void>;\n  syncQuantumState: () => Promise<void>;\n  createMemory: (description: string, importance: number, keywords?: string[]) => void;\n  mintAnima: (name: string) => Promise<AnimaMintResult>;\n  createActor: () => any;\n}\n\nconst AnimaContext = createContext<AnimaContextType | null>(null);\n\nexport function AnimaProvider({ children }: { children: React.ReactNode }) {\n  const { principal, actor } = useAuth();\n  const { quantumState, updateQuantumState, validateState } = useQuantumState();\n  const [dimensionalState] = useState(() => new DimensionalStateImpl());\n  const [memorySystem] = useState(() => new MemorySystem());\n  const [growthSystem] = useState(() => new GrowthSystem());\n  const [quantumSignature, setQuantumSignature] = useState('');\n  const [evolutionFactor, setEvolutionFactor] = useState(0);\n  const [recentMemories, setRecentMemories] = useState<Memory[]>([]);\n  const [growthMetrics, setGrowthMetrics] = useState<GrowthMetrics>(() => growthSystem.getMetrics());\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [isMinting, setIsMinting] = useState(false);\n  const [mintError, setMintError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (quantumState && principal) {\n      initializeAnimaSystems();\n    }\n  }, [quantumState, principal]);\n\n  const initializeAnimaSystems = async () => {\n    try {\n      console.log('🧬 Initializing ANIMA systems...');\n      \n      dimensionalState.quantumAlignment = quantumState?.coherence || 1.0;\n      const signature = generateQuantumSignature();\n      setQuantumSignature(signature);\n      const evolution = calculateEvolutionFactor();\n      setEvolutionFactor(evolution);\n      updateRecentMemories();\n      \n      setIsInitialized(true);\n      console.log('✨ ANIMA systems initialized');\n    } catch (error) {\n      console.error('Failed to initialize ANIMA systems:', error);\n      setIsInitialized(false);\n    }\n  };\n\n  const mintAnima = async (name: string): Promise<AnimaMintResult> => {\n    if (!actor || !isInitialized) {\n      throw new Error('System not ready for minting');\n    }\n\n    setIsMinting(true);\n    setMintError(null);\n\n    try {\n      // Initialize quantum field\n      const quantumField = await actor.initialize_quantum_field();\n      if (!quantumField.Ok) throw new Error('Quantum field initialization failed');\n\n      // Generate neural patterns\n      const neuralPatterns = await actor.generate_neural_patterns();\n      if (!neuralPatterns.Ok) throw new Error('Neural pattern generation failed');\n\n      // Calculate initial quantum state\n      const initialState = {\n        resonance: neuralPatterns.Ok.resonance,\n        harmony: quantumField.Ok.harmony,\n        coherence: (neuralPatterns.Ok.resonance + quantumField.Ok.harmony) / 2,\n        lastInteraction: new Date(),\n        evolutionStage: 1,\n        consciousness: {\n          awareness: neuralPatterns.Ok.awareness,\n          understanding: quantumField.Ok.understanding,\n          growth: 0.1\n        }\n      };\n\n      if (!validateState(initialState)) {\n        throw new Error('Invalid initial quantum state');\n      }\n\n      // Create the Anima\n      const result = await actor.create_anima({\n        name,\n        quantum_signature: quantumField.Ok.signature,\n        neural_pattern: neuralPatterns.Ok.pattern,\n        initial_state: initialState\n      });\n\n      if (!result.Ok) {\n        throw new Error(result.Err || 'Anima creation failed');\n      }\n\n      // Update quantum state with initial values\n      await updateQuantumState(initialState);\n\n      // Create initial memory\n      createMemory(\n        'Genesis quantum crystallization complete',\n        1.0,\n        ['genesis', 'quantum', 'initialization']\n      );\n\n      return {\n        id: result.Ok.id,\n        quantumSignature: result.Ok.quantum_signature,\n        timestamp: result.Ok.timestamp\n      };\n\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Minting failed';\n      setMintError(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setIsMinting(false);\n    }\n  };\n\n  const processInteraction = async (strength: number) => {\n    try {\n      dimensionalState.updateStability(strength);\n\n      await growthSystem.processGrowthEvent({\n        strength,\n        quantum_state: quantumState!,\n        dimensional_state: dimensionalState\n      });\n\n      if (strength > 0.5) {\n        createMemory(\n          `Significant quantum interaction (${strength.toFixed(2)})`,\n          strength,\n          ['quantum', 'interaction']\n        );\n      }\n\n      setGrowthMetrics(growthSystem.getMetrics());\n      updateRecentMemories();\n      \n      const newSignature = generateQuantumSignature();\n      setQuantumSignature(newSignature);\n\n      const newEvolution = calculateEvolutionFactor();\n      setEvolutionFactor(newEvolution);\n\n    } catch (error) {\n      console.error('Failed to process interaction:', error);\n    }\n  };\n\n  const syncQuantumState = async () => {\n    try {\n      const resonance = dimensionalState.calculateResonance();\n      const stability = dimensionalState.getStabilityMetrics();\n      \n      if (quantumState) {\n        const updatedState = {\n          ...quantumState,\n          resonanceMetrics: {\n            ...quantumState.resonanceMetrics,\n            fieldStrength: resonance\n          },\n          coherence: stability[0],\n          phaseAlignment: stability[1]\n        };\n\n        if (validateState(updatedState)) {\n          await updateQuantumState(updatedState);\n        }\n      }\n    } catch (error) {\n      console.error('Failed to sync quantum state:', error);\n    }\n  };\n\n  const createMemory = (description: string, importance: number, keywords: string[] = []) => {\n    const memory = memorySystem.createMemory(description, importance, keywords, quantumState);\n    updateRecentMemories();\n    return memory;\n  };\n\n  const updateRecentMemories = () => {\n    setRecentMemories(memorySystem.getRecentMemories(5));\n  };\n\n  const generateQuantumSignature = (): string => {\n    const timestamp = Date.now();\n    const resonance = dimensionalState.resonance.toFixed(4);\n    const coherence = dimensionalState.phaseCoherence.toFixed(4);\n    return `QS-${resonance}-${coherence}-${timestamp}`;\n  };\n\n  const calculateEvolutionFactor = (): number => {\n    const resonance = dimensionalState.resonance;\n    const coherence = dimensionalState.phaseCoherence;\n    const stability = dimensionalState.stability;\n    const memoryResonance = memorySystem.calculateResonance(quantumState!);\n    \n    return (resonance + coherence + stability + memoryResonance) / 4;\n  };\n\n  const createActor = useCallback(() => {\n    if (!actor) {\n      throw new Error('Actor not initialized');\n    }\n    return actor;\n  }, [actor]);\n\n  const contextValue = {\n    dimensionalState,\n    memorySystem,\n    growthSystem,\n    quantumSignature,\n    evolutionFactor,\n    recentMemories,\n    growthMetrics,\n    isInitialized,\n    isMinting,\n    mintError,\n    processInteraction,\n    syncQuantumState,\n    createMemory,\n    mintAnima,\n    createActor\n  };\n\n  return (\n    <AnimaContext.Provider value={contextValue}>\n      {children}\n    </AnimaContext.Provider>\n  );\n}\n\nexport function useAnima() {\n  const context = useContext(AnimaContext);\n  if (!context) {\n    throw new Error('useAnima must be used within an AnimaProvider');\n  }\n  return context;\n}","import React from 'react';\nimport { RouterProvider } from 'react-router-dom';\nimport { router } from '../router';\nimport { AuthProvider } from '@/contexts/auth-context';\nimport { AnimaProvider } from '@/contexts/anima-context';\nimport { ErrorBoundary } from './error-boundary/ErrorBoundary';\n\nconst App = () => {\n  console.log('🚀 App initializing...', {\n    env: process.env.NODE_ENV,\n    buildTime: new Date().toISOString()\n  });\n\n  return (\n    <ErrorBoundary>\n      <AuthProvider>\n        <AnimaProvider>\n          <RouterProvider router={router} />\n        </AnimaProvider>\n      </AuthProvider>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n\n// Import components directly to avoid lazy loading issues\nimport App from './components/App';\nimport { ErrorBoundary } from './components/error-boundary/ErrorBoundary';\nimport { LoadingFallback } from './components/ui/LoadingFallback';\n\nconst RootErrorFallback = ({ error }: { error: Error }) => (\n  <div className=\"min-h-screen bg-black text-white flex items-center justify-center\">\n    <div className=\"text-center max-w-lg p-6\">\n      <h1 className=\"text-xl font-bold mb-4\">System Error</h1>\n      <p className=\"text-red-400 mb-4\">{error.message}</p>\n      <button \n        onClick={() => window.location.reload()}\n        className=\"px-4 py-2 bg-blue-600 rounded hover:bg-blue-700 transition\"\n      >\n        Reset System\n      </button>\n    </div>\n  </div>\n);\n\nasync function initializeApp() {\n  try {\n    const statusElement = document.querySelector('.quantum-status');\n    if (statusElement) {\n      statusElement.textContent = 'Initializing Internet Computer connection...';\n    }\n\n    console.log('Initializing Internet Computer connection...');\n    await import('./ic-init');\n    console.log('IC initialization complete');\n    \n    const rootElement = document.getElementById('root');\n    if (!rootElement) {\n      throw new Error('Root element not found');\n    }\n\n    // Create root directly\n    const root = ReactDOM.createRoot(rootElement);\n\n    root.render(\n      <React.StrictMode>\n        <ErrorBoundary FallbackComponent={RootErrorFallback}>\n          <Suspense fallback={<LoadingFallback />}>\n            <App />\n          </Suspense>\n        </ErrorBoundary>\n      </React.StrictMode>\n    );\n  } catch (error) {\n    console.error('Failed to initialize app:', error);\n    const statusElement = document.querySelector('.quantum-status');\n    if (statusElement) {\n      statusElement.textContent = `Initialization failed: ${error.message}`;\n    }\n  }\n}\n\n// Initialize\ninitializeApp();"],"file":"assets/main-CPzMFC0N.js"}