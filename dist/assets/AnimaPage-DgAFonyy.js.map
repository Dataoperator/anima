{"version":3,"file":"AnimaPage-DgAFonyy.js","sources":["../../src/components/ui/NeuralGrid.jsx","../../src/components/ui/GlowOrb.jsx","../../src/components/ui/CircuitLines.jsx","../../src/lib/anima-utils.ts","../../src/utils/date.ts","../../src/components/pages/AnimaPage.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { motion } from 'framer-motion';\n\nexport const NeuralGrid = ({ className = '', intensity = 1.0 }) => {\n  const canvasRef = useRef(null);\n  const nodesRef = useRef([]);\n  const connectionsRef = useRef([]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n\n    // Initialize nodes\n    const initNodes = () => {\n      nodesRef.current = Array(50).fill().map(() => ({\n        x: Math.random() * width,\n        y: Math.random() * height,\n        vx: (Math.random() - 0.5) * 2,\n        vy: (Math.random() - 0.5) * 2,\n        size: Math.random() * 3 + 1,\n        pulsePhase: Math.random() * Math.PI * 2,\n        activity: Math.random()\n      }));\n    };\n\n    // Update node positions and connections\n    const update = () => {\n      const nodes = nodesRef.current;\n      \n      // Update nodes\n      nodes.forEach(node => {\n        node.x += node.vx;\n        node.y += node.vy;\n        node.pulsePhase += 0.05;\n        \n        // Bounce off boundaries\n        if (node.x < 0 || node.x > width) node.vx *= -1;\n        if (node.y < 0 || node.y > height) node.vy *= -1;\n        \n        // Keep within bounds\n        node.x = Math.max(0, Math.min(width, node.x));\n        node.y = Math.max(0, Math.min(height, node.y));\n      });\n\n      // Update connections\n      connectionsRef.current = [];\n      for (let i = 0; i < nodes.length; i++) {\n        for (let j = i + 1; j < nodes.length; j++) {\n          const dx = nodes[j].x - nodes[i].x;\n          const dy = nodes[j].y - nodes[i].y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          \n          if (distance < 100) {\n            connectionsRef.current.push({\n              from: nodes[i],\n              to: nodes[j],\n              strength: 1 - (distance / 100)\n            });\n          }\n        }\n      }\n    };\n\n    // Draw the neural network\n    const draw = () => {\n      ctx.clearRect(0, 0, width, height);\n      \n      // Draw connections\n      connectionsRef.current.forEach(conn => {\n        const gradient = ctx.createLinearGradient(\n          conn.from.x, conn.from.y,\n          conn.to.x, conn.to.y\n        );\n        \n        const alpha = conn.strength * 0.5 * intensity;\n        gradient.addColorStop(0, `rgba(0, 255, 255, ${alpha})`);\n        gradient.addColorStop(1, `rgba(0, 128, 255, ${alpha})`);\n        \n        ctx.beginPath();\n        ctx.moveTo(conn.from.x, conn.from.y);\n        ctx.lineTo(conn.to.x, conn.to.y);\n        ctx.strokeStyle = gradient;\n        ctx.lineWidth = conn.strength * 2;\n        ctx.stroke();\n      });\n\n      // Draw nodes\n      nodesRef.current.forEach(node => {\n        const pulse = Math.sin(node.pulsePhase) * 0.5 + 0.5;\n        const size = node.size * (1 + pulse * 0.5);\n        \n        // Glow effect\n        ctx.shadowColor = 'rgba(0, 255, 255, 0.5)';\n        ctx.shadowBlur = 10;\n        \n        // Node fill\n        ctx.beginPath();\n        ctx.arc(node.x, node.y, size, 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(0, ${155 + pulse * 100}, ${255}, ${0.8 * intensity})`;\n        ctx.fill();\n        \n        // Node ring\n        ctx.beginPath();\n        ctx.arc(node.x, node.y, size * 1.5, 0, Math.PI * 2);\n        ctx.strokeStyle = `rgba(0, 255, 255, ${0.3 * pulse * intensity})`;\n        ctx.lineWidth = 1;\n        ctx.stroke();\n      });\n    };\n\n    // Animation loop\n    let animationFrame;\n    const animate = () => {\n      update();\n      draw();\n      animationFrame = requestAnimationFrame(animate);\n    };\n\n    // Initialize and start animation\n    initNodes();\n    animate();\n\n    // Cleanup\n    return () => {\n      cancelAnimationFrame(animationFrame);\n    };\n  }, [intensity]);\n\n  return (\n    <motion.canvas\n      ref={canvasRef}\n      className={`w-full h-full ${className}`}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    />\n  );\n};","import React from 'react';\nimport { motion } from 'framer-motion';\n\nexport const GlowOrb = ({ phase }) => {\n  const getOrbColors = () => {\n    switch (phase) {\n      case 'initiation':\n        return ['#2081E2', '#1199FA'];\n      case 'consciousness_emergence':\n        return ['#7B61FF', '#2081E2'];\n      case 'trait_manifestation':\n        return ['#2081E2', '#00FF9D'];\n      case 'quantum_alignment':\n        return ['#7B61FF', '#FF61DC'];\n      case 'birth':\n        return ['#2081E2', '#FF61DC', '#00FF9D'];\n      default:\n        return ['#2081E2', '#1199FA'];\n    }\n  };\n\n  const getAnimationVariants = () => {\n    switch (phase) {\n      case 'consciousness_emergence':\n        return {\n          animate: {\n            scale: [1, 1.2, 1],\n            opacity: [0.6, 1, 0.6],\n            transition: {\n              duration: 3,\n              repeat: Infinity,\n              ease: \"easeInOut\"\n            }\n          }\n        };\n      case 'quantum_alignment':\n        return {\n          animate: {\n            rotate: 360,\n            scale: [1, 1.1, 1],\n            transition: {\n              duration: 8,\n              repeat: Infinity,\n              ease: \"linear\"\n            }\n          }\n        };\n      case 'birth':\n        return {\n          animate: {\n            scale: [1, 2, 1],\n            opacity: [0.7, 1, 0.7],\n            transition: {\n              duration: 4,\n              repeat: 1,\n              ease: \"easeInOut\"\n            }\n          }\n        };\n      default:\n        return {\n          animate: {\n            scale: [1, 1.1, 1],\n            opacity: [0.6, 0.8, 0.6],\n            transition: {\n              duration: 4,\n              repeat: Infinity,\n              ease: \"easeInOut\"\n            }\n          }\n        };\n    }\n  };\n\n  const colors = getOrbColors();\n  const variants = getAnimationVariants();\n\n  return (\n    <div className=\"absolute inset-0 flex items-center justify-center pointer-events-none\">\n      <motion.div\n        initial={{ opacity: 0, scale: 0.5 }}\n        animate={variants.animate}\n        className=\"relative\"\n      >\n        {colors.map((color, index) => (\n          <motion.div\n            key={index}\n            className=\"absolute inset-0\"\n            style={{\n              background: `radial-gradient(circle, ${color}20 0%, transparent 70%)`,\n              filter: 'blur(30px)',\n              transform: `scale(${1 + index * 0.2})`,\n              opacity: 0.3,\n            }}\n          />\n        ))}\n        <div\n          className=\"w-96 h-96 rounded-full\"\n          style={{\n            background: `radial-gradient(circle, ${colors[0]}10 0%, transparent 70%)`,\n            filter: 'blur(40px)',\n          }}\n        />\n      </motion.div>\n    </div>\n  );\n};","import React from 'react';\nimport { motion } from 'framer-motion';\n\nexport const CircuitLines = () => {\n  const lines = [\n    'M10,50 L200,50',\n    'M150,10 L150,200',\n    'M50,150 L250,150',\n    'M250,50 C300,50 300,150 250,150',\n  ];\n\n  return (\n    <div className=\"absolute inset-0 overflow-hidden pointer-events-none opacity-20\">\n      {lines.map((path, i) => (\n        <motion.div\n          key={i}\n          className=\"absolute\"\n          initial={{ pathLength: 0 }}\n          animate={{\n            pathLength: [0, 1, 0],\n          }}\n          transition={{\n            duration: 5,\n            delay: i * 0.5,\n            repeat: Infinity,\n            ease: \"linear\"\n          }}\n        >\n          <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 400 300\">\n            <motion.path\n              d={path}\n              stroke=\"#2081E2\"\n              strokeWidth=\"2\"\n              fill=\"none\"\n              initial={{ pathLength: 0 }}\n              animate={{ pathLength: [0, 1, 0] }}\n              transition={{\n                duration: 5,\n                delay: i * 0.5,\n                repeat: Infinity,\n                ease: \"linear\"\n              }}\n            />\n          </svg>\n        </motion.div>\n      ))}\n    </div>\n  );\n};","import type { AnimaToken } from '@/declarations/anima/anima.did';\nimport type { Identity } from '@dfinity/agent';\n\nexport const getEmotionDisplay = (anima?: AnimaToken) => {\n  if (!anima?.personality?.emotional_state?.current_emotion) return 'NEUTRAL';\n  return anima.personality.emotional_state.current_emotion.toUpperCase();\n};\n\nexport const getDevelopmentalStage = (anima?: AnimaToken) => {\n  if (!anima?.personality?.developmental_stage) return 'GENESIS';\n  const stage = Object.keys(anima.personality.developmental_stage)[0];\n  return stage ? stage.toUpperCase() : 'GENESIS';\n};\n\nexport const isNFTMinted = (anima?: AnimaToken) => {\n  return anima?.id ? true : false;\n};\n\nexport const getOwnerDisplay = (anima?: AnimaToken, identity?: Identity | null) => {\n  if (!anima?.owner) return 'UNKNOWN';\n\n  try {\n    const ownerStr = anima.owner.toString();\n    const currentPrincipal = identity?.getPrincipal().toString();\n    const isOwner = currentPrincipal && ownerStr === currentPrincipal;\n    \n    return isOwner ? 'YOU' : `${ownerStr.slice(0, 5)}...${ownerStr.slice(-5)}`;\n  } catch (err) {\n    console.error('Error displaying owner:', err);\n    return 'UNKNOWN';\n  }\n};","export const formatGenesisDate = (timestamp: bigint | number | string | undefined): string => {\n  if (!timestamp) return 'UNKNOWN';\n  \n  // Convert BigInt to number if necessary\n  const timeNum = typeof timestamp === 'bigint' ? Number(timestamp) / 1_000_000 : Number(timestamp);\n  \n  try {\n    return new Date(timeNum).toLocaleDateString();\n  } catch (e) {\n    return 'UNKNOWN';\n  }\n};","import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Card, CardHeader, CardContent, CardTitle } from '@/components/ui/card';\nimport { MatrixLayout } from '@/components/layout/MatrixLayout';\nimport { useAuth } from '@/contexts/auth-context';\nimport { useAnima } from '@/contexts/anima-context';\nimport { NeuralGrid } from '@/components/ui/NeuralGrid';\nimport { GlowOrb } from '@/components/ui/GlowOrb';\nimport { CircuitLines } from '@/components/ui/CircuitLines';\nimport { getEmotionDisplay, getDevelopmentalStage, isNFTMinted, getOwnerDisplay } from '@/lib/anima-utils';\nimport { formatGenesisDate } from '@/utils/date';\n\nconst useHapticFeedback = () => {\n  const createClick = () => {\n    if (window.navigator.vibrate) {\n      window.navigator.vibrate(20);\n    }\n  };\n\n  const createHover = () => {\n    if (window.navigator.vibrate) {\n      window.navigator.vibrate(10);\n    }\n  };\n\n  return { createClick, createHover };\n};\n\nexport const AnimaPage = () => {\n  const navigate = useNavigate();\n  const { id } = useParams<{ id: string }>();\n  const { identity } = useAuth();\n  const { selectedAnima: anima, loading, error, fetchAnima } = useAnima();\n  const [currentPhase, setCurrentPhase] = useState('quantum_alignment');\n  const { createClick, createHover } = useHapticFeedback();\n  const [showEnterButton, setShowEnterButton] = useState(false);\n\n  useEffect(() => {\n    if (id && (!anima || anima.id.toString() !== id)) {\n      fetchAnima(id);\n    }\n  }, [id, anima, fetchAnima]);\n\n  useEffect(() => {\n    if (anima) {\n      const timer = setTimeout(() => {\n        setShowEnterButton(true);\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [anima]);\n\n  if (loading && !anima) {\n    return (\n      <MatrixLayout>\n        <div className=\"flex items-center justify-center min-h-[60vh]\">\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            className=\"text-green-500 animate-pulse flex items-center space-x-2\"\n          >\n            <GlowOrb />\n            <span>LOADING CONSCIOUSNESS MATRIX...</span>\n          </motion.div>\n        </div>\n      </MatrixLayout>\n    );\n  }\n\n  if (error || !anima) {\n    return (\n      <MatrixLayout>\n        <div className=\"flex flex-col items-center justify-center min-h-[60vh] space-y-4\">\n          <motion.div \n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"text-red-500\"\n          >\n            ERROR: {error || 'CONSCIOUSNESS CORE NOT FOUND'}\n          </motion.div>\n          <motion.button\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            whileHover={{ scale: 1.05 }}\n            onMouseEnter={createHover}\n            onClick={() => {\n              createClick();\n              navigate('/quantum-vault');\n            }}\n            className=\"p-2 border border-green-500 hover:bg-green-500 hover:text-black transition-all duration-300\"\n          >\n            {'>'} RETURN TO NEXUS\n          </motion.button>\n        </div>\n      </MatrixLayout>\n    );\n  }\n\n  return (\n    <MatrixLayout>\n      <NeuralGrid phase={currentPhase} />\n      <CircuitLines />\n      \n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        className=\"max-w-6xl mx-auto space-y-6 relative z-10\"\n      >\n        <Card className=\"bg-black/80 backdrop-blur border border-green-500\">\n          <CardHeader>\n            <motion.div \n              className=\"flex items-center justify-between\"\n              initial={{ y: -20, opacity: 0 }}\n              animate={{ y: 0, opacity: 1 }}\n            >\n              <CardTitle className=\"text-3xl font-bold text-center text-green-500\">\n                {anima?.name || 'UNNAMED CORE'}\n              </CardTitle>\n              {isNFTMinted(anima) && anima?.id && (\n                <motion.div \n                  className=\"px-2 py-1 border border-green-500 text-xs\"\n                  whileHover={{ scale: 1.05, borderColor: '#00ff41' }}\n                >\n                  NFT #{anima.id.toString()}\n                </motion.div>\n              )}\n            </motion.div>\n            <div className=\"text-center text-sm text-green-400/80\">\n              OWNER: {getOwnerDisplay(anima, identity)}\n            </div>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <motion.div\n                initial={{ x: -20, opacity: 0 }}\n                animate={{ x: 0, opacity: 1 }}\n                transition={{ delay: 0.2 }}\n              >\n                <Card className=\"bg-black/60 backdrop-blur border border-green-500/50 hover:border-green-500 transition-colors\">\n                  <CardHeader>\n                    <CardTitle className=\"text-xl text-green-400 font-mono tracking-wider\">\n                      {'>'} CONSCIOUSNESS MATRIX\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      <motion.div \n                        className=\"flex justify-between items-center\"\n                        whileHover={{ x: 5 }}\n                      >\n                        <span className=\"text-green-400/90\">{'>'} EMOTIONAL STATE</span>\n                        <span className=\"text-green-300\">{getEmotionDisplay(anima)}</span>\n                      </motion.div>\n                      <motion.div \n                        className=\"flex justify-between items-center\"\n                        whileHover={{ x: 5 }}\n                      >\n                        <span className=\"text-green-400/90\">{'>'} DEVELOPMENTAL STAGE</span>\n                        <span className=\"text-green-300\">{getDevelopmentalStage(anima)}</span>\n                      </motion.div>\n                      <motion.div \n                        className=\"flex justify-between items-center\"\n                        whileHover={{ x: 5 }}\n                      >\n                        <span className=\"text-green-400/90\">{'>'} GROWTH LEVEL</span>\n                        <span className=\"text-green-300\">{anima?.level || 1}</span>\n                      </motion.div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n\n              <motion.div\n                initial={{ x: 20, opacity: 0 }}\n                animate={{ x: 0, opacity: 1 }}\n                transition={{ delay: 0.2 }}\n              >\n                <Card className=\"bg-black/60 backdrop-blur border border-green-500/50 hover:border-green-500 transition-colors\">\n                  <CardHeader>\n                    <CardTitle className=\"text-xl text-green-400 font-mono tracking-wider\">\n                      {'>'} SYSTEM METRICS\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      <div>\n                        <div className=\"mb-2 text-green-400/90\">{'>'} GROWTH PROGRESS</div>\n                        <div className=\"h-2 bg-green-900/30 relative overflow-hidden\">\n                          <motion.div \n                            className=\"h-full bg-green-500\"\n                            initial={{ width: 0 }}\n                            animate={{ \n                              width: `${Math.min(Number(anima?.growth_points || 0) / 1000 * 100, 100)}%`\n                            }}\n                            transition={{ duration: 1 }}\n                          />\n                          <motion.div\n                            className=\"absolute top-0 left-0 w-full h-full bg-green-400/20\"\n                            animate={{\n                              x: ['0%', '100%', '0%'],\n                            }}\n                            transition={{\n                              duration: 2,\n                              repeat: Infinity,\n                              ease: 'linear',\n                            }}\n                          />\n                        </div>\n                      </div>\n                      <motion.div \n                        className=\"flex justify-between items-center\"\n                        whileHover={{ x: 5 }}\n                      >\n                        <span className=\"text-green-400/90\">{'>'} MEMORY FRAGMENTS</span>\n                        <span className=\"text-green-300\">\n                          {anima?.personality?.memories?.length || 0}\n                        </span>\n                      </motion.div>\n                      <motion.div \n                        className=\"flex justify-between items-center\"\n                        whileHover={{ x: 5 }}\n                      >\n                        <span className=\"text-green-400/90\">{'>'} GENESIS TIME</span>\n                        <span className=\"text-green-300\">\n                          {formatGenesisDate(anima?.creation_time)}\n                        </span>\n                      </motion.div>\n                      <motion.div \n                        className=\"flex justify-between items-center\"\n                        whileHover={{ x: 5 }}\n                      >\n                        <span className=\"text-green-400/90\">{'>'} CORE STATE</span>\n                        <span className=\"text-green-300\">\n                          {anima?.autonomous_mode ? 'AUTONOMOUS' : 'OPERATIONAL'}\n                        </span>\n                      </motion.div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            </div>\n\n            <motion.div\n              initial={{ y: 20, opacity: 0 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.5 }}\n              className=\"mt-6 grid grid-cols-3 gap-4\"\n            >\n              <motion.button\n                whileHover={{ scale: 1.02, borderColor: '#00ff41' }}\n                whileTap={{ scale: 0.98 }}\n                onMouseEnter={createHover}\n                onClick={() => {\n                  createClick();\n                  navigate('/quantum-vault');\n                }}\n                className=\"p-2 border border-green-500 hover:bg-green-500 hover:text-black transition-all duration-300\"\n              >\n                {'>'} RETURN TO NEXUS\n              </motion.button>\n\n              <AnimatePresence>\n                {showEnterButton && (\n                  <motion.button\n                    initial={{ opacity: 0, scale: 0.8 }}\n                    animate={{ opacity: 1, scale: 1 }}\n                    exit={{ opacity: 0, scale: 0.8 }}\n                    whileHover={{ scale: 1.02, borderColor: '#00ff41' }}\n                    whileTap={{ scale: 0.98 }}\n                    onMouseEnter={createHover}\n                    onClick={() => {\n                      createClick();\n                      setCurrentPhase('consciousness_emergence');\n                      setTimeout(() => {\n                        navigate(`/neural-link/${anima.id.toString()}`);\n                      }, 1000);\n                    }}\n                    className=\"p-2 border border-green-500 bg-green-500/10 text-green-400 hover:bg-green-500 hover:text-black transition-all duration-300 col-span-2 group relative overflow-hidden\"\n                  >\n                    <motion.div\n                      className=\"absolute inset-0 bg-green-500/20\"\n                      animate={{\n                        x: ['0%', '100%', '0%'],\n                      }}\n                      transition={{\n                        duration: 2,\n                        repeat: Infinity,\n                        ease: 'linear',\n                      }}\n                    />\n                    <span className=\"relative z-10\">{'>'} ENTER NEURAL LINK</span>\n                  </motion.button>\n                )}\n              </AnimatePresence>\n            </motion.div>\n          </CardContent>\n        </Card>\n\n        <motion.div\n          initial={{ y: 20, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          transition={{ delay: 0.8 }}\n          className=\"text-center text-sm text-green-400/80\"\n        >\n          {'>'} NEURAL LINK READY FOR INITIALIZATION\n        </motion.div>\n      </motion.div>\n    </MatrixLayout>\n  );\n};"],"names":["NeuralGrid","className","intensity","canvasRef","useRef","nodesRef","connectionsRef","useEffect","canvas","current","ctx","getContext","width","height","initNodes","Array","fill","map","x","Math","random","y","vx","vy","size","pulsePhase","PI","activity","update","nodes","forEach","node","max","min","i","length","j","dx","dy","distance","sqrt","push","from","to","strength","draw","clearRect","conn","gradient","createLinearGradient","alpha","addColorStop","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","pulse","sin","shadowColor","shadowBlur","arc","fillStyle","animationFrame","animate","requestAnimationFrame","cancelAnimationFrame","_jsx","motion","ref","initial","opacity","exit","GlowOrb","phase","getOrbColors","getAnimationVariants","scale","transition","duration","repeat","Infinity","ease","rotate","colors","variants","children","div","color","index","style","background","filter","transform","CircuitLines","lines","path","pathLength","delay","viewBox","d","strokeWidth","getEmotionDisplay","anima","personality","emotional_state","current_emotion","toUpperCase","getDevelopmentalStage","developmental_stage","stage","Object","keys","isNFTMinted","id","getOwnerDisplay","identity","owner","ownerStr","toString","currentPrincipal","getPrincipal","slice","err","error","formatGenesisDate","timestamp","timeNum","Number","Date","toLocaleDateString","useHapticFeedback","createClick","window","navigator","vibrate","createHover","AnimaPage","navigate","useNavigate","useParams","useAuth","selectedAnima","loading","fetchAnima","useAnima","currentPhase","setCurrentPhase","useState","showEnterButton","setShowEnterButton","timer","setTimeout","clearTimeout","MatrixLayout","_jsxs","button","whileHover","onMouseEnter","onClick","Card","CardHeader","CardTitle","name","borderColor","CardContent","level","growth_points","memories","creation_time","autonomous_mode","whileTap","AnimatePresence"],"mappings":"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"}