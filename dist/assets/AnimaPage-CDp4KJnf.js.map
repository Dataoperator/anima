{"version":3,"file":"AnimaPage-CDp4KJnf.js","sources":["../../src/components/layout/MatrixLayout.tsx","../../src/lib/anima-utils.ts","../../src/utils/date.ts","../../src/components/pages/AnimaPage.tsx"],"sourcesContent":["import React from 'react';\nimport { MatrixRain } from '@/components/ui/MatrixRain';\n\ninterface MatrixLayoutProps {\n  children: React.ReactNode;\n}\n\nexport const MatrixLayout: React.FC<MatrixLayoutProps> = ({ children }) => {\n  return (\n    <div className=\"min-h-screen bg-black text-green-500 p-4 font-mono overflow-hidden\">\n      <MatrixRain />\n      <div className=\"relative z-10\">\n        {children}\n      </div>\n    </div>\n  );\n};","import type { AnimaToken } from '@/declarations/anima/anima.did';\nimport type { Identity } from '@dfinity/agent';\n\nexport const getEmotionDisplay = (anima?: AnimaToken) => {\n  if (!anima?.personality?.emotional_state?.current_emotion) return 'NEUTRAL';\n  return anima.personality.emotional_state.current_emotion.toUpperCase();\n};\n\nexport const getDevelopmentalStage = (anima?: AnimaToken) => {\n  if (!anima?.personality?.developmental_stage) return 'GENESIS';\n  const stage = Object.keys(anima.personality.developmental_stage)[0];\n  return stage ? stage.toUpperCase() : 'GENESIS';\n};\n\nexport const isNFTMinted = (anima?: AnimaToken) => {\n  return anima?.id ? true : false;\n};\n\nexport const getOwnerDisplay = (anima?: AnimaToken, identity?: Identity | null) => {\n  if (!anima?.owner) return 'UNKNOWN';\n\n  try {\n    const ownerStr = anima.owner.toString();\n    const currentPrincipal = identity?.getPrincipal().toString();\n    const isOwner = currentPrincipal && ownerStr === currentPrincipal;\n    \n    return isOwner ? 'YOU' : `${ownerStr.slice(0, 5)}...${ownerStr.slice(-5)}`;\n  } catch (err) {\n    console.error('Error displaying owner:', err);\n    return 'UNKNOWN';\n  }\n};","export const formatGenesisDate = (timestamp: bigint | number | string | undefined): string => {\n  if (!timestamp) return 'UNKNOWN';\n  \n  // Convert BigInt to number if necessary\n  const timeNum = typeof timestamp === 'bigint' ? Number(timestamp) / 1_000_000 : Number(timestamp);\n  \n  try {\n    return new Date(timeNum).toLocaleDateString();\n  } catch (e) {\n    return 'UNKNOWN';\n  }\n};","import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Card, CardHeader, CardContent, CardTitle } from '@/components/ui/card';\nimport { MatrixLayout } from '@/components/layout/MatrixLayout';\nimport { useAuth } from '@/contexts/auth-context';\nimport { useAnima } from '@/contexts/anima-context';\nimport { NeuralGrid } from '@/components/ui/NeuralGrid';\nimport { GlowOrb } from '@/components/ui/GlowOrb';\nimport { CircuitLines } from '@/components/ui/CircuitLines';\nimport { getEmotionDisplay, getDevelopmentalStage, isNFTMinted, getOwnerDisplay } from '@/lib/anima-utils';\nimport { formatGenesisDate } from '@/utils/date';\n\nconst useHapticFeedback = () => {\n  const createClick = () => {\n    if (window.navigator.vibrate) {\n      window.navigator.vibrate(20);\n    }\n  };\n\n  const createHover = () => {\n    if (window.navigator.vibrate) {\n      window.navigator.vibrate(10);\n    }\n  };\n\n  return { createClick, createHover };\n};\n\nexport const AnimaPage = () => {\n  const navigate = useNavigate();\n  const { id } = useParams<{ id: string }>();\n  const { identity } = useAuth();\n  const { selectedAnima: anima, loading, error, fetchAnima } = useAnima();\n  const [currentPhase, setCurrentPhase] = useState('quantum_alignment');\n  const { createClick, createHover } = useHapticFeedback();\n  const [showEnterButton, setShowEnterButton] = useState(false);\n\n  useEffect(() => {\n    if (id && (!anima || anima.id.toString() !== id)) {\n      fetchAnima(id);\n    }\n  }, [id, anima, fetchAnima]);\n\n  useEffect(() => {\n    if (anima) {\n      const timer = setTimeout(() => {\n        setShowEnterButton(true);\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [anima]);\n\n  if (loading && !anima) {\n    return (\n      <MatrixLayout>\n        <div className=\"flex items-center justify-center min-h-[60vh]\">\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            className=\"text-green-500 animate-pulse flex items-center space-x-2\"\n          >\n            <GlowOrb />\n            <span>LOADING CONSCIOUSNESS MATRIX...</span>\n          </motion.div>\n        </div>\n      </MatrixLayout>\n    );\n  }\n\n  if (error || !anima) {\n    return (\n      <MatrixLayout>\n        <div className=\"flex flex-col items-center justify-center min-h-[60vh] space-y-4\">\n          <motion.div \n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"text-red-500\"\n          >\n            ERROR: {error || 'CONSCIOUSNESS CORE NOT FOUND'}\n          </motion.div>\n          <motion.button\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            whileHover={{ scale: 1.05 }}\n            onMouseEnter={createHover}\n            onClick={() => {\n              createClick();\n              navigate('/quantum-vault');\n            }}\n            className=\"p-2 border border-green-500 hover:bg-green-500 hover:text-black transition-all duration-300\"\n          >\n            {'>'} RETURN TO NEXUS\n          </motion.button>\n        </div>\n      </MatrixLayout>\n    );\n  }\n\n  return (\n    <MatrixLayout>\n      <NeuralGrid phase={currentPhase} />\n      <CircuitLines />\n      \n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        className=\"max-w-6xl mx-auto space-y-6 relative z-10\"\n      >\n        <Card className=\"bg-black/80 backdrop-blur border border-green-500\">\n          <CardHeader>\n            <motion.div \n              className=\"flex items-center justify-between\"\n              initial={{ y: -20, opacity: 0 }}\n              animate={{ y: 0, opacity: 1 }}\n            >\n              <CardTitle className=\"text-3xl font-bold text-center text-green-500\">\n                {anima?.name || 'UNNAMED CORE'}\n              </CardTitle>\n              {isNFTMinted(anima) && anima?.id && (\n                <motion.div \n                  className=\"px-2 py-1 border border-green-500 text-xs\"\n                  whileHover={{ scale: 1.05, borderColor: '#00ff41' }}\n                >\n                  NFT #{anima.id.toString()}\n                </motion.div>\n              )}\n            </motion.div>\n            <div className=\"text-center text-sm text-green-400/80\">\n              OWNER: {getOwnerDisplay(anima, identity)}\n            </div>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <motion.div\n                initial={{ x: -20, opacity: 0 }}\n                animate={{ x: 0, opacity: 1 }}\n                transition={{ delay: 0.2 }}\n              >\n                <Card className=\"bg-black/60 backdrop-blur border border-green-500/50 hover:border-green-500 transition-colors\">\n                  <CardHeader>\n                    <CardTitle className=\"text-xl text-green-400 font-mono tracking-wider\">\n                      {'>'} CONSCIOUSNESS MATRIX\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      <motion.div \n                        className=\"flex justify-between items-center\"\n                        whileHover={{ x: 5 }}\n                      >\n                        <span className=\"text-green-400/90\">{'>'} EMOTIONAL STATE</span>\n                        <span className=\"text-green-300\">{getEmotionDisplay(anima)}</span>\n                      </motion.div>\n                      <motion.div \n                        className=\"flex justify-between items-center\"\n                        whileHover={{ x: 5 }}\n                      >\n                        <span className=\"text-green-400/90\">{'>'} DEVELOPMENTAL STAGE</span>\n                        <span className=\"text-green-300\">{getDevelopmentalStage(anima)}</span>\n                      </motion.div>\n                      <motion.div \n                        className=\"flex justify-between items-center\"\n                        whileHover={{ x: 5 }}\n                      >\n                        <span className=\"text-green-400/90\">{'>'} GROWTH LEVEL</span>\n                        <span className=\"text-green-300\">{anima?.level || 1}</span>\n                      </motion.div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n\n              <motion.div\n                initial={{ x: 20, opacity: 0 }}\n                animate={{ x: 0, opacity: 1 }}\n                transition={{ delay: 0.2 }}\n              >\n                <Card className=\"bg-black/60 backdrop-blur border border-green-500/50 hover:border-green-500 transition-colors\">\n                  <CardHeader>\n                    <CardTitle className=\"text-xl text-green-400 font-mono tracking-wider\">\n                      {'>'} SYSTEM METRICS\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      <div>\n                        <div className=\"mb-2 text-green-400/90\">{'>'} GROWTH PROGRESS</div>\n                        <div className=\"h-2 bg-green-900/30 relative overflow-hidden\">\n                          <motion.div \n                            className=\"h-full bg-green-500\"\n                            initial={{ width: 0 }}\n                            animate={{ \n                              width: `${Math.min(Number(anima?.growth_points || 0) / 1000 * 100, 100)}%`\n                            }}\n                            transition={{ duration: 1 }}\n                          />\n                          <motion.div\n                            className=\"absolute top-0 left-0 w-full h-full bg-green-400/20\"\n                            animate={{\n                              x: ['0%', '100%', '0%'],\n                            }}\n                            transition={{\n                              duration: 2,\n                              repeat: Infinity,\n                              ease: 'linear',\n                            }}\n                          />\n                        </div>\n                      </div>\n                      <motion.div \n                        className=\"flex justify-between items-center\"\n                        whileHover={{ x: 5 }}\n                      >\n                        <span className=\"text-green-400/90\">{'>'} MEMORY FRAGMENTS</span>\n                        <span className=\"text-green-300\">\n                          {anima?.personality?.memories?.length || 0}\n                        </span>\n                      </motion.div>\n                      <motion.div \n                        className=\"flex justify-between items-center\"\n                        whileHover={{ x: 5 }}\n                      >\n                        <span className=\"text-green-400/90\">{'>'} GENESIS TIME</span>\n                        <span className=\"text-green-300\">\n                          {formatGenesisDate(anima?.creation_time)}\n                        </span>\n                      </motion.div>\n                      <motion.div \n                        className=\"flex justify-between items-center\"\n                        whileHover={{ x: 5 }}\n                      >\n                        <span className=\"text-green-400/90\">{'>'} CORE STATE</span>\n                        <span className=\"text-green-300\">\n                          {anima?.autonomous_mode ? 'AUTONOMOUS' : 'OPERATIONAL'}\n                        </span>\n                      </motion.div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            </div>\n\n            <motion.div\n              initial={{ y: 20, opacity: 0 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.5 }}\n              className=\"mt-6 grid grid-cols-3 gap-4\"\n            >\n              <motion.button\n                whileHover={{ scale: 1.02, borderColor: '#00ff41' }}\n                whileTap={{ scale: 0.98 }}\n                onMouseEnter={createHover}\n                onClick={() => {\n                  createClick();\n                  navigate('/quantum-vault');\n                }}\n                className=\"p-2 border border-green-500 hover:bg-green-500 hover:text-black transition-all duration-300\"\n              >\n                {'>'} RETURN TO NEXUS\n              </motion.button>\n\n              <AnimatePresence>\n                {showEnterButton && (\n                  <motion.button\n                    initial={{ opacity: 0, scale: 0.8 }}\n                    animate={{ opacity: 1, scale: 1 }}\n                    exit={{ opacity: 0, scale: 0.8 }}\n                    whileHover={{ scale: 1.02, borderColor: '#00ff41' }}\n                    whileTap={{ scale: 0.98 }}\n                    onMouseEnter={createHover}\n                    onClick={() => {\n                      createClick();\n                      setCurrentPhase('consciousness_emergence');\n                      setTimeout(() => {\n                        navigate(`/neural-link/${anima.id.toString()}`);\n                      }, 1000);\n                    }}\n                    className=\"p-2 border border-green-500 bg-green-500/10 text-green-400 hover:bg-green-500 hover:text-black transition-all duration-300 col-span-2 group relative overflow-hidden\"\n                  >\n                    <motion.div\n                      className=\"absolute inset-0 bg-green-500/20\"\n                      animate={{\n                        x: ['0%', '100%', '0%'],\n                      }}\n                      transition={{\n                        duration: 2,\n                        repeat: Infinity,\n                        ease: 'linear',\n                      }}\n                    />\n                    <span className=\"relative z-10\">{'>'} ENTER NEURAL LINK</span>\n                  </motion.button>\n                )}\n              </AnimatePresence>\n            </motion.div>\n          </CardContent>\n        </Card>\n\n        <motion.div\n          initial={{ y: 20, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          transition={{ delay: 0.8 }}\n          className=\"text-center text-sm text-green-400/80\"\n        >\n          {'>'} NEURAL LINK READY FOR INITIALIZATION\n        </motion.div>\n      </motion.div>\n    </MatrixLayout>\n  );\n};"],"names":["MatrixLayout","children","jsxs","jsx","MatrixRain","getEmotionDisplay","anima","_b","_a","getDevelopmentalStage","stage","isNFTMinted","getOwnerDisplay","identity","ownerStr","currentPrincipal","err","formatGenesisDate","timestamp","timeNum","useHapticFeedback","AnimaPage","navigate","useNavigate","id","useParams","useAuth","loading","error","fetchAnima","useAnima","currentPhase","setCurrentPhase","useState","createClick","createHover","showEnterButton","setShowEnterButton","useEffect","timer","motion","GlowOrb","NeuralGrid","CircuitLines","Card","CardHeader","CardTitle","CardContent","AnimatePresence"],"mappings":"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"}