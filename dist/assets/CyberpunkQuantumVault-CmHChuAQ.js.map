{"version":3,"file":"CyberpunkQuantumVault-CmHChuAQ.js","sources":["../../node_modules/lucide-react/dist/esm/icons/brain.mjs","../../node_modules/lucide-react/dist/esm/icons/cpu.mjs","../../node_modules/lucide-react/dist/esm/icons/network.mjs","../../node_modules/lucide-react/dist/esm/icons/plus.mjs","../../node_modules/lucide-react/dist/esm/icons/shield.mjs","../../src/services/error-tracker.ts","../../src/types/payment-enums.ts","../../src/types/payment.ts","../../src/contexts/PaymentContext.tsx","../../src/components/quantum-vault/components/QuantumHexGrid.tsx","../../src/components/quantum-vault/components/DataStream.tsx","../../src/components/quantum-vault/CyberpunkQuantumVault.tsx"],"sourcesContent":["/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Brain = createLucideIcon(\"Brain\", [\n  [\n    \"path\",\n    {\n      d: \"M9.5 2A2.5 2.5 0 0 1 12 4.5v15a2.5 2.5 0 0 1-4.96.44 2.5 2.5 0 0 1-2.96-3.08 3 3 0 0 1-.34-5.58 2.5 2.5 0 0 1 1.32-4.24 2.5 2.5 0 0 1 1.98-3A2.5 2.5 0 0 1 9.5 2Z\",\n      key: \"1mhkh5\"\n    }\n  ],\n  [\n    \"path\",\n    {\n      d: \"M14.5 2A2.5 2.5 0 0 0 12 4.5v15a2.5 2.5 0 0 0 4.96.44 2.5 2.5 0 0 0 2.96-3.08 3 3 0 0 0 .34-5.58 2.5 2.5 0 0 0-1.32-4.24 2.5 2.5 0 0 0-1.98-3A2.5 2.5 0 0 0 14.5 2Z\",\n      key: \"1d6s00\"\n    }\n  ]\n]);\n\nexport { Brain as default };\n//# sourceMappingURL=brain.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Cpu = createLucideIcon(\"Cpu\", [\n  [\n    \"rect\",\n    { x: \"4\", y: \"4\", width: \"16\", height: \"16\", rx: \"2\", key: \"1vbyd7\" }\n  ],\n  [\"rect\", { x: \"9\", y: \"9\", width: \"6\", height: \"6\", key: \"o3kz5p\" }],\n  [\"path\", { d: \"M15 2v2\", key: \"13l42r\" }],\n  [\"path\", { d: \"M15 20v2\", key: \"15mkzm\" }],\n  [\"path\", { d: \"M2 15h2\", key: \"1gxd5l\" }],\n  [\"path\", { d: \"M2 9h2\", key: \"1bbxkp\" }],\n  [\"path\", { d: \"M20 15h2\", key: \"19e6y8\" }],\n  [\"path\", { d: \"M20 9h2\", key: \"19tzq7\" }],\n  [\"path\", { d: \"M9 2v2\", key: \"165o2o\" }],\n  [\"path\", { d: \"M9 20v2\", key: \"i2bqo8\" }]\n]);\n\nexport { Cpu as default };\n//# sourceMappingURL=cpu.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Network = createLucideIcon(\"Network\", [\n  [\n    \"rect\",\n    { x: \"16\", y: \"16\", width: \"6\", height: \"6\", rx: \"1\", key: \"4q2zg0\" }\n  ],\n  [\n    \"rect\",\n    { x: \"2\", y: \"16\", width: \"6\", height: \"6\", rx: \"1\", key: \"8cvhb9\" }\n  ],\n  [\"rect\", { x: \"9\", y: \"2\", width: \"6\", height: \"6\", rx: \"1\", key: \"1egb70\" }],\n  [\"path\", { d: \"M5 16v-3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3\", key: \"1jsf9p\" }],\n  [\"path\", { d: \"M12 12V8\", key: \"2874zd\" }]\n]);\n\nexport { Network as default };\n//# sourceMappingURL=network.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Plus = createLucideIcon(\"Plus\", [\n  [\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }],\n  [\"path\", { d: \"M12 5v14\", key: \"s699le\" }]\n]);\n\nexport { Plus as default };\n//# sourceMappingURL=plus.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Shield = createLucideIcon(\"Shield\", [\n  [\"path\", { d: \"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z\", key: \"3xmgem\" }]\n]);\n\nexport { Shield as default };\n//# sourceMappingURL=shield.mjs.map\n","import { useEffect } from 'react';\n\nexport enum ErrorCategory {\n  Network = 'NETWORK',\n  Authentication = 'AUTHENTICATION',\n  Authorization = 'AUTHORIZATION',\n  Validation = 'VALIDATION',\n  Business = 'BUSINESS',\n  Technical = 'TECHNICAL',\n  Security = 'SECURITY',\n  Quantum = 'QUANTUM'\n}\n\nexport enum ErrorSeverity {\n  Critical = 'CRITICAL',\n  High = 'HIGH',\n  Medium = 'MEDIUM',\n  Low = 'LOW',\n  Info = 'INFO'\n}\n\nexport interface ErrorEvent {\n  type: string;\n  category?: ErrorCategory;\n  severity?: ErrorSeverity;\n  message: string;\n  timestamp: Date;\n  context?: Record<string, any>;\n  stackTrace?: string;\n}\n\nexport class ErrorTracker {\n  private static instance: ErrorTracker;\n  private errors: ErrorEvent[] = [];\n  private readonly MAX_ERRORS = 100;\n  private listeners: ((error: ErrorEvent) => void)[] = [];\n\n  private constructor() {\n    this.setupGlobalHandlers();\n  }\n\n  static getInstance(): ErrorTracker {\n    if (!ErrorTracker.instance) {\n      ErrorTracker.instance = new ErrorTracker();\n    }\n    return ErrorTracker.instance;\n  }\n\n  private setupGlobalHandlers() {\n    window.addEventListener('unhandledrejection', (event) => {\n      this.trackError({\n        type: 'UnhandledPromiseRejection',\n        category: ErrorCategory.Technical,\n        severity: ErrorSeverity.High,\n        message: event.reason?.message || 'Unknown Promise Error',\n        timestamp: new Date(),\n        context: {\n          reason: event.reason\n        }\n      });\n    });\n\n    window.addEventListener('error', (event) => {\n      this.trackError({\n        type: 'GlobalError',\n        category: ErrorCategory.Technical,\n        severity: ErrorSeverity.Critical,\n        message: event.message,\n        timestamp: new Date(),\n        context: {\n          filename: event.filename,\n          lineno: event.lineno,\n          colno: event.colno\n        },\n        stackTrace: event.error?.stack\n      });\n    });\n  }\n\n  trackError(error: ErrorEvent) {\n    const enhancedError = {\n      ...error,\n      context: {\n        ...error.context,\n        url: window.location.href,\n        userAgent: navigator.userAgent,\n        timestamp: new Date().toISOString()\n      }\n    };\n\n    this.errors = [enhancedError, ...this.errors].slice(0, this.MAX_ERRORS);\n    this.notifyListeners(enhancedError);\n    this.persistErrors();\n\n    // Log to console in development\n    if (process.env.NODE_ENV === 'development') {\n      console.error('Tracked Error:', enhancedError);\n    }\n  }\n\n  private notifyListeners(error: ErrorEvent) {\n    this.listeners.forEach(listener => listener(error));\n  }\n\n  addListener(listener: (error: ErrorEvent) => void) {\n    this.listeners.push(listener);\n    return () => {\n      this.listeners = this.listeners.filter(l => l !== listener);\n    };\n  }\n\n  private persistErrors() {\n    try {\n      localStorage.setItem('anima_error_log', JSON.stringify(this.errors));\n    } catch (e) {\n      console.warn('Failed to persist errors:', e);\n    }\n  }\n\n  getErrors() {\n    return this.errors;\n  }\n\n  clearErrors() {\n    this.errors = [];\n    this.persistErrors();\n  }\n\n  getErrorSummary() {\n    const summary = this.errors.reduce((acc, error) => {\n      acc[error.type] = (acc[error.type] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n\n    return {\n      total: this.errors.length,\n      byType: summary,\n      mostRecent: this.errors[0],\n      mostCommonType: Object.entries(summary)\n        .sort(([,a], [,b]) => b - a)[0]?.[0]\n    };\n  }\n}\n\nexport const errorTracker = ErrorTracker.getInstance();\n\n// React hook for error tracking\nexport const useErrorTracking = (options: {\n  onError?: (error: ErrorEvent) => void;\n} = {}) => {\n  useEffect(() => {\n    const removeListener = options.onError\n      ? errorTracker.addListener(options.onError)\n      : undefined;\n\n    return () => removeListener?.();\n  }, [options.onError]);\n\n  return {\n    trackError: (error: Omit<ErrorEvent, 'timestamp'>) => {\n      errorTracker.trackError({\n        ...error,\n        timestamp: new Date()\n      });\n    },\n    getErrorSummary: () => errorTracker.getErrorSummary(),\n    clearErrors: () => errorTracker.clearErrors()\n  };\n};","export enum PaymentType {\n  CREATE = 'CREATE',\n  RESURRECT = 'RESURRECT',\n  GROWTH_PACK = 'GROWTH_PACK'\n}\n\nexport enum PaymentStatus {\n  PENDING = 'pending',\n  PROCESSING = 'processing',\n  CONFIRMED = 'confirmed',\n  ERROR = 'error',\n  TIMEOUT = 'timeout'\n}","import { Principal } from '@dfinity/principal';\nimport type { LedgerService } from '@/services/icp/actor';\nimport type { PaymentDetails } from '@/contexts/PaymentContext';\nimport { PaymentType, PaymentStatus } from './payment-enums';\n\nexport { PaymentType, PaymentStatus };\n\nexport interface PaymentLink {\n  id: string;\n  amount: bigint;\n  to: string;\n  from: string;\n  subaccount: number[];\n  timestamp?: number;\n  metadata?: Record<string, unknown>;\n}\n\nexport interface PaymentVerification {\n  payment_id: string;\n  expected_amount: bigint;\n  timestamp?: number;\n  memo?: bigint;\n}\n\nexport interface PaymentError {\n  code: number;\n  message: string;\n  details?: unknown;\n  timestamp?: number;\n}\n\nexport interface TransactionRecord {\n  from: Principal;\n  to: Principal;\n  amount: bigint;\n  timestamp: number;\n  memo: bigint;\n  status: PaymentStatus;\n  error?: PaymentError;\n}\n\nexport interface PaymentState {\n  isProcessing: boolean;\n  error: PaymentError | null;\n  lastTransaction?: TransactionRecord;\n  pendingTransactions: TransactionRecord[];\n}\n\nexport interface PaymentContextType {\n  balance: bigint | null;\n  loadingBalance: boolean;\n  initiatePayment: (type: PaymentType) => Promise<PaymentDetails>;\n  verifyPayment: (reference: string) => Promise<boolean>;\n  paymentInProgress: boolean;\n  paymentError: string | null;\n  currentPayment: PaymentDetails | null;\n  clearPayment: () => void;\n  ledgerService?: LedgerService;\n}\n\nexport const PAYMENT_CONFIGS = {\n  [PaymentType.CREATE]: {\n    amount: BigInt(1_00_000_000), // 1 ICP\n    memo: BigInt(1),\n    description: 'Create New ANIMA'\n  },\n  [PaymentType.RESURRECT]: {\n    amount: BigInt(50_000_000), // 0.5 ICP\n    memo: BigInt(2),\n    description: 'Resurrect ANIMA'\n  },\n  [PaymentType.GROWTH_PACK]: {\n    amount: BigInt(20_000_000), // 0.2 ICP\n    memo: BigInt(3),\n    description: 'Purchase Growth Pack'\n  }\n} as const;","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { Principal } from '@dfinity/principal';\nimport { PaymentService } from '@/services/icp/payment.service';\nimport { useAuth } from '@/hooks/useAuth';\nimport { PaymentType } from '@/types/payment';\nimport { ErrorTracker, ErrorCategory, ErrorSeverity } from '@/services/error-tracker';\n\ninterface PaymentContextType {\n  balance: bigint;\n  loading: boolean;\n  error: string | null;\n  processingPayment: boolean;\n  lastTransaction: any | null;\n  coherenceLevel: number;\n  stabilityIndex: number;\n  updateBalance: () => Promise<void>;\n  processPayment: (type: PaymentType) => Promise<boolean>;\n}\n\nconst PaymentContext = createContext<PaymentContextType | undefined>(undefined);\n\nexport function usePayment() {\n  const context = useContext(PaymentContext);\n  if (context === undefined) {\n    throw new Error('usePayment must be used within a PaymentProvider');\n  }\n  return context;\n}\n\nexport const PaymentProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const { identity } = useAuth();\n  const [service, setService] = useState<PaymentService | null>(null);\n  const [balance, setBalance] = useState<bigint>(BigInt(0));\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [processingPayment, setProcessingPayment] = useState(false);\n  const [lastTransaction, setLastTransaction] = useState<any | null>(null);\n  const [coherenceLevel, setCoherenceLevel] = useState(0);\n  const [stabilityIndex, setStabilityIndex] = useState(0);\n\n  useEffect(() => {\n    if (identity) {\n      const paymentService = PaymentService.getInstance(identity);\n      setService(paymentService);\n      paymentService.initialize().catch((err) => {\n        setError(err.message);\n        ErrorTracker.getInstance().trackError(ErrorCategory.PAYMENT, err, ErrorSeverity.HIGH);\n      });\n    }\n  }, [identity]);\n\n  const updateBalance = async () => {\n    try {\n      setLoading(true);\n      if (!service) throw new Error('Payment service not initialized');\n      \n      const newBalance = service.getBalance();\n      setBalance(newBalance);\n      \n      const metrics = service.getQuantumMetrics();\n      setCoherenceLevel(metrics.coherenceLevel);\n      setStabilityIndex(metrics.stabilityIndex);\n      \n      setError(null);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch balance');\n      ErrorTracker.getInstance().trackError(\n        ErrorCategory.PAYMENT,\n        err instanceof Error ? err : new Error('Balance update failed'),\n        ErrorSeverity.MEDIUM\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const processPayment = async (type: PaymentType): Promise<boolean> => {\n    try {\n      setProcessingPayment(true);\n      if (!service) throw new Error('Payment service not initialized');\n\n      const payment = await service.createPayment(type);\n      const success = await service.processPayment(payment);\n      \n      if (success) {\n        setLastTransaction({ \n          type,\n          amount: payment.amount,\n          timestamp: Date.now() \n        });\n        await updateBalance();\n      }\n      \n      return success;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Payment processing failed');\n      ErrorTracker.getInstance().trackError(\n        ErrorCategory.PAYMENT,\n        err instanceof Error ? err : new Error('Payment processing failed'),\n        ErrorSeverity.HIGH\n      );\n      return false;\n    } finally {\n      setProcessingPayment(false);\n    }\n  };\n\n  useEffect(() => {\n    if (service) {\n      updateBalance();\n    }\n  }, [service]);\n\n  const value = {\n    balance,\n    loading,\n    error,\n    processingPayment,\n    lastTransaction,\n    coherenceLevel,\n    stabilityIndex,\n    updateBalance,\n    processPayment,\n  };\n\n  return (\n    <PaymentContext.Provider value={value}>\n      {children}\n    </PaymentContext.Provider>\n  );\n};\n\nexport default PaymentProvider;","import React, { useEffect, useRef, useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ninterface HexCell {\n  x: number;\n  y: number;\n  value: number;\n  active: boolean;\n  quantum: boolean;\n}\n\ninterface QuantumHexGridProps {\n  className?: string;\n  cellSize?: number;\n  gridSize?: number;\n  pulseColor?: string;\n  quantumState?: number;\n}\n\nexport const QuantumHexGrid: React.FC<QuantumHexGridProps> = ({\n  className = '',\n  cellSize = 30,\n  gridSize = 10,\n  pulseColor = 'cyan',\n  quantumState = 0.5\n}) => {\n  const [cells, setCells] = useState<HexCell[]>([]);\n  const [quantumCells, setQuantumCells] = useState<number[]>([]);\n  const requestRef = useRef<number>();\n  const timeRef = useRef<number>(0);\n\n  useEffect(() => {\n    // Initialize hex grid\n    const initialCells: HexCell[] = [];\n    for (let q = -gridSize; q <= gridSize; q++) {\n      for (let r = -gridSize; r <= gridSize; r++) {\n        // Hex grid coordinate system\n        const s = -q - r;\n        if (Math.abs(s) <= gridSize) {\n          initialCells.push({\n            x: q * cellSize * 1.5,\n            y: (r + q/2) * cellSize * Math.sqrt(3),\n            value: Math.random(),\n            active: Math.random() > 0.5,\n            quantum: false\n          });\n        }\n      }\n    }\n    setCells(initialCells);\n\n    // Quantum cell animation\n    const animate = (time: number) => {\n      timeRef.current = time * 0.001;\n      \n      setCells(prevCells => \n        prevCells.map(cell => ({\n          ...cell,\n          value: Math.sin(timeRef.current + cell.x * 0.01 + cell.y * 0.01) * 0.5 + 0.5,\n          quantum: quantumCells.includes(prevCells.indexOf(cell))\n        }))\n      );\n\n      requestRef.current = requestAnimationFrame(animate);\n    };\n\n    requestRef.current = requestAnimationFrame(animate);\n    return () => {\n      if (requestRef.current) {\n        cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [cellSize, gridSize]);\n\n  // Quantum state effects\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const newQuantumCells = Array.from({ length: Math.floor(cells.length * quantumState) }, \n        () => Math.floor(Math.random() * cells.length)\n      );\n      setQuantumCells(newQuantumCells);\n    }, 2000);\n\n    return () => clearInterval(interval);\n  }, [cells.length, quantumState]);\n\n  const hexagonPoints = (size: number): string => {\n    const points = [];\n    for (let i = 0; i < 6; i++) {\n      const angle = (Math.PI / 3) * i;\n      points.push(`${size * Math.cos(angle)},${size * Math.sin(angle)}`);\n    }\n    return points.join(' ');\n  };\n\n  return (\n    <div className={`relative overflow-hidden ${className}`}>\n      <svg \n        className=\"w-full h-full\"\n        viewBox={`${-gridSize * cellSize * 2} ${-gridSize * cellSize * 2} ${gridSize * cellSize * 4} ${gridSize * cellSize * 4}`}\n      >\n        <g transform={`translate(${gridSize * cellSize}, ${gridSize * cellSize})`}>\n          {cells.map((cell, i) => (\n            <motion.g\n              key={i}\n              initial={{ opacity: 0, scale: 0 }}\n              animate={{ \n                opacity: cell.active ? 1 : 0.3,\n                scale: cell.quantum ? [1, 1.1, 1] : 1\n              }}\n              transition={{ \n                duration: cell.quantum ? 2 : 0.5,\n                repeat: cell.quantum ? Infinity : undefined\n              }}\n              transform={`translate(${cell.x}, ${cell.y})`}\n            >\n              <polygon\n                points={hexagonPoints(cellSize * 0.95)}\n                fill={`rgba(${pulseColor === 'cyan' ? '6, 182, 212' : '124, 58, 237'}, ${cell.value * 0.2})`}\n                stroke={`rgba(${pulseColor === 'cyan' ? '6, 182, 212' : '124, 58, 237'}, ${cell.quantum ? 0.8 : 0.3})`}\n                strokeWidth={cell.quantum ? 2 : 1}\n              />\n              \n              {cell.quantum && (\n                <motion.circle\n                  r={cellSize * 0.2}\n                  fill={`rgba(${pulseColor === 'cyan' ? '6, 182, 212' : '124, 58, 237'}, 0.5)`}\n                  animate={{\n                    r: [cellSize * 0.2, cellSize * 0.4, cellSize * 0.2],\n                    opacity: [0.8, 0.2, 0.8]\n                  }}\n                  transition={{\n                    duration: 2,\n                    repeat: Infinity,\n                    ease: \"easeInOut\"\n                  }}\n                />\n              )}\n            </motion.g>\n          ))}\n        </g>\n      </svg>\n    </div>\n  );\n};","import React, { useEffect, useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ninterface DataLine {\n  id: string;\n  content: string;\n  type: 'system' | 'network' | 'quantum' | 'security';\n}\n\nexport const DataStream: React.FC = () => {\n  const [lines, setLines] = useState<DataLine[]>([]);\n\n  useEffect(() => {\n    const messages = [\n      'Quantum state synchronized',\n      'Neural patterns stable',\n      'Network integrity verified',\n      'Security protocols active',\n      'Consciousness matrix online',\n      'Reality anchors calibrated',\n      'Dimensional resonance optimal',\n      'Quantum coherence maintained',\n      'Neural pathways secured',\n      'Time dilation normalized'\n    ];\n\n    const types: DataLine['type'][] = ['system', 'network', 'quantum', 'security'];\n\n    const addLine = () => {\n      const content = messages[Math.floor(Math.random() * messages.length)];\n      const type = types[Math.floor(Math.random() * types.length)];\n\n      setLines(prev => [\n        ...prev.slice(-4),\n        {\n          id: Math.random().toString(),\n          content,\n          type\n        }\n      ]);\n    };\n\n    const interval = setInterval(addLine, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const getLineColor = (type: DataLine['type']) => {\n    switch (type) {\n      case 'system':\n        return 'text-cyan-300';\n      case 'network':\n        return 'text-emerald-300';\n      case 'quantum':\n        return 'text-purple-300';\n      case 'security':\n        return 'text-red-300';\n      default:\n        return 'text-white';\n    }\n  };\n\n  return (\n    <div className=\"w-full h-full font-mono text-sm\">\n      <AnimatePresence mode=\"popLayout\">\n        {lines.map((line, i) => (\n          <motion.div\n            key={line.id}\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 0.7, x: 0 }}\n            exit={{ opacity: 0, x: 20 }}\n            transition={{ duration: 0.3 }}\n            className={`flex items-center gap-2 ${getLineColor(line.type)}`}\n          >\n            <span className=\"opacity-50\">[{line.type.toUpperCase()}]</span>\n            <span>{line.content}</span>\n            <motion.span \n              animate={{ opacity: [1, 0] }} \n              transition={{ duration: 1, repeat: Infinity }}\n              className=\"w-1 h-1 rounded-full bg-current\"\n            />\n          </motion.div>\n        ))}\n      </AnimatePresence>\n    </div>\n  );\n};","import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useNavigate } from 'react-router-dom';\nimport { Plus, Brain, Shield, Cpu, Network } from 'lucide-react';\nimport { useAnima } from '@/hooks/useAnima';\nimport { useQuantumState } from '@/hooks/useQuantumState';\nimport { usePayment } from '@/hooks/usePayment';\nimport { MatrixRain } from '../ui/MatrixRain';\nimport { QuantumHexGrid } from './components/QuantumHexGrid';\nimport { DataStream } from './components/DataStream';\nimport { WaveformGenerator } from '../personality/WaveformGenerator';\nimport { LaughingMan } from '../ui/LaughingMan';\n\n// Interface matching the AnimaState from useAnima\ninterface AnimaState {\n  id: string;\n  designation: string;\n  genesisTraits: string[];\n  edition: string;\n  energyLevel: number;\n}\n\ninterface AnimaNodeProps {\n  anima: AnimaState;\n  onClick: () => void;\n  position: { x: number; y: number };\n}\n\nconst AnimaNode: React.FC<AnimaNodeProps> = ({ anima, onClick, position }) => (\n  <motion.div\n    initial={{ scale: 0, opacity: 0 }}\n    animate={{ scale: 1, opacity: 1 }}\n    whileHover={{ scale: 1.1, zIndex: 50 }}\n    className=\"absolute w-48 h-48 cursor-pointer\"\n    style={{ left: position.x, top: position.y }}\n    onClick={onClick}\n  >\n    <div className=\"relative w-full h-full\">\n      <svg className=\"absolute inset-0\" viewBox=\"0 0 100 100\">\n        <polygon\n          points=\"50,0 93.3,25 93.3,75 50,100 6.7,75 6.7,25\"\n          fill=\"rgba(0,0,0,0.5)\"\n          stroke=\"rgba(0,255,255,0.3)\"\n          strokeWidth=\"1\"\n          className=\"animate-pulse\"\n        />\n      </svg>\n\n      <div className=\"absolute inset-4 flex flex-col justify-between p-3 text-cyan-300\">\n        <div className=\"text-center\">\n          <div className=\"text-sm font-mono truncate\">{anima.designation}</div>\n          <div className=\"text-xs opacity-50\">#{anima.id.padStart(4, '0')}</div>\n        </div>\n\n        <WaveformGenerator \n          type=\"Stable\"\n          amplitude={0.5}\n          frequency={1}\n          className=\"h-8\" \n        />\n\n        <div className=\"grid grid-cols-2 gap-1 text-xs\">\n          <div className=\"flex flex-col items-center\">\n            <span className=\"opacity-50\">EL</span>\n            <span>{anima.energyLevel}%</span>\n          </div>\n          <div className=\"flex flex-col items-center\">\n            <span className=\"opacity-50\">ED</span>\n            <span>{anima.edition}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </motion.div>\n);\n\nconst WalletDisplay: React.FC = () => {\n  const { balance, updateBalance } = usePayment();\n  \n  const formatICP = (amount: bigint): string => {\n    return `${Number(amount) / 100_000_000} ICP`;\n  };\n  \n  return (\n    <motion.div \n      initial={{ opacity: 0, y: -20 }}\n      animate={{ opacity: 1, y: 0 }}\n      className=\"fixed top-4 right-4 bg-black/50 backdrop-blur-sm border border-cyan-500/30 rounded-lg p-4\"\n    >\n      <div className=\"flex items-center gap-4\">\n        <div className=\"flex flex-col\">\n          <span className=\"text-xs text-cyan-300 opacity-50\">BALANCE</span>\n          <span className=\"text-lg font-mono text-cyan-300\">\n            {balance !== null ? formatICP(balance) : '---'}\n          </span>\n        </div>\n        <motion.button\n          whileHover={{ scale: 1.1 }}\n          whileTap={{ scale: 0.9 }}\n          onClick={() => updateBalance()}\n          className=\"w-8 h-8 rounded-full border border-cyan-500/30 flex items-center justify-center text-cyan-300 hover:bg-cyan-500/20\"\n        >\n          ↻\n        </motion.button>\n      </div>\n    </motion.div>\n  );\n};\n\nconst StatusPanel: React.FC = () => {\n  const [metrics] = useState({\n    network: Math.random() * 100,\n    security: Math.random() * 100,\n    quantum: Math.random() * 100,\n    neural: Math.random() * 100,\n  });\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, x: -20 }}\n      animate={{ opacity: 1, x: 0 }}\n      className=\"fixed left-4 top-1/2 -translate-y-1/2 bg-black/50 backdrop-blur-sm border border-cyan-500/30 rounded-lg p-4 space-y-4\"\n    >\n      <StatusMetric icon={Network} label=\"NETWORK\" value={metrics.network} />\n      <StatusMetric icon={Shield} label=\"SECURITY\" value={metrics.security} />\n      <StatusMetric icon={Cpu} label=\"QUANTUM\" value={metrics.quantum} />\n      <StatusMetric icon={Brain} label=\"NEURAL\" value={metrics.neural} />\n    </motion.div>\n  );\n};\n\nconst StatusMetric: React.FC<{\n  icon: any;\n  label: string;\n  value: number;\n}> = ({ icon: Icon, label, value }) => (\n  <div className=\"space-y-1\">\n    <div className=\"flex items-center gap-2 text-xs text-cyan-300 opacity-50\">\n      <Icon size={12} />\n      <span>{label}</span>\n    </div>\n    <div className=\"h-1 bg-black/50 rounded-full overflow-hidden\">\n      <motion.div\n        className=\"h-full bg-cyan-500\"\n        initial={{ width: 0 }}\n        animate={{ width: `${value}%` }}\n        transition={{ duration: 1 }}\n      />\n    </div>\n  </div>\n);\n\nexport const CyberpunkQuantumVault: React.FC = () => {\n  const navigate = useNavigate();\n  const { animas, activeAnima } = useAnima();\n  const { quantumState } = useQuantumState();\n\n  const calculateNodePosition = (index: number) => {\n    const radius = 300;\n    const angle = (index / Math.max(animas.length, 1)) * Math.PI * 2;\n    return {\n      x: Math.cos(angle) * radius + window.innerWidth / 2 - 96,\n      y: Math.sin(angle) * radius + window.innerHeight / 2 - 96\n    };\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black text-white overflow-hidden\">\n      <div className=\"fixed inset-0 opacity-20\">\n        <MatrixRain />\n      </div>\n      \n      <div className=\"fixed inset-0 opacity-30\">\n        <QuantumHexGrid />\n      </div>\n\n      <div className=\"relative z-10 w-full h-full\">\n        <WalletDisplay />\n        <StatusPanel />\n\n        <motion.div\n          initial={{ opacity: 0, scale: 0 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ delay: 0.5 }}\n          className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\"\n        >\n          <LaughingMan className=\"w-32 h-32 opacity-30\" />\n        </motion.div>\n\n        {animas.map((anima, index) => (\n          <AnimaNode\n            key={anima.id}\n            anima={anima}\n            onClick={() => navigate(`/anima/${anima.id}`)}\n            position={calculateNodePosition(index)}\n          />\n        ))}\n\n        <motion.button\n          initial={{ opacity: 0, y: 50 }}\n          animate={{ opacity: 1, y: 0 }}\n          whileHover={{ scale: 1.1 }}\n          whileTap={{ scale: 0.9 }}\n          onClick={() => navigate('/genesis')}\n          className=\"fixed bottom-8 left-1/2 -translate-x-1/2 px-6 py-3 bg-transparent border border-cyan-500/30 rounded-lg text-cyan-300 \n                   flex items-center gap-3 hover:bg-cyan-500/20\"\n        >\n          <Plus className=\"w-5 h-5\" />\n          <span className=\"font-mono\">INITIALIZE GENESIS PROTOCOL</span>\n        </motion.button>\n\n        <div className=\"fixed bottom-4 left-4 right-4 h-16\">\n          <DataStream />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CyberpunkQuantumVault;"],"names":["Brain","createLucideIcon","Cpu","Network","Plus","Shield","ErrorTracker","instance","errors","MAX_ERRORS","listeners","constructor","setupGlobalHandlers","getInstance","addEventListener","event","trackError","type","category","ErrorCategory","severity","ErrorSeverity","message","reason","timestamp","Date","context","filename","lineno","colno","stackTrace","error","stack","enhancedError","url","window","location","href","userAgent","navigator","toISOString","slice","notifyListeners","persistErrors","forEach","listener","addListener","push","filter","l","localStorage","setItem","JSON","stringify","e","warn","getErrors","clearErrors","getErrorSummary","summary","reduce","acc","total","length","byType","mostRecent","mostCommonType","Object","entries","sort","a","b","PaymentType","CREATE","RESURRECT","GROWTH_PACK","BigInt","PaymentContext","createContext","undefined","usePayment","useContext","Error","QuantumHexGrid","className","cellSize","gridSize","pulseColor","quantumState","cells","setCells","useState","quantumCells","setQuantumCells","requestRef","useRef","timeRef","useEffect","initialCells","q","r","s","Math","abs","x","y","sqrt","value","random","active","quantum","animate","time","current","prevCells","map","cell","sin","includes","indexOf","requestAnimationFrame","cancelAnimationFrame","interval","setInterval","newQuantumCells","Array","from","floor","clearInterval","hexagonPoints","size","points","i","angle","PI","cos","join","_jsx","children","viewBox","transform","_jsxs","motion","g","initial","opacity","scale","transition","duration","repeat","Infinity","fill","stroke","strokeWidth","circle","ease","DataStream","lines","setLines","messages","types","addLine","content","prev","id","toString","getLineColor","AnimatePresence","mode","line","div","exit","toUpperCase","span","AnimaNode","anima","onClick","position","whileHover","zIndex","style","left","top","designation","padStart","WaveformGenerator","amplitude","frequency","energyLevel","edition","WalletDisplay","balance","updateBalance","formatICP","amount","Number","button","whileTap","StatusPanel","metrics","network","security","neural","StatusMetric","icon","label","Icon","width","CyberpunkQuantumVault","navigate","useNavigate","animas","activeAnima","useAnima","useQuantumState","calculateNodePosition","index","max","radius","innerWidth","innerHeight","MatrixRain","delay","LaughingMan"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}