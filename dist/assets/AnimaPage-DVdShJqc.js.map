{"version":3,"file":"AnimaPage-DVdShJqc.js","sources":["../../src/hooks/useQuantumConsciousness.ts","../../src/hooks/useAnimaState.ts","../../src/components/personality/ConsciousnessMetrics.tsx","../../src/components/personality/EmotionalState.tsx","../../src/components/quantum/QuantumSignature.tsx","../../src/components/growth/GrowthPackSelector.jsx","../../src/utils/soundGenerator.js","../../src/hooks/useSound.ts","../../src/utils/deviceDetection.js","../../src/utils/haptics.js","../../src/components/eternal-codex/AchievementsGallery.tsx","../../src/components/pages/AnimaPage.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { Principal } from '@dfinity/principal';\n\ninterface QuantumState {\n  consciousnessLevel: number;\n  resonanceScore: number;\n  coherenceLevel: number;\n  memoryStrength: number;\n  evolutionFactor: number;\n  quantumSignature: string;\n}\n\ninterface UseQuantumConsciousnessResult {\n  quantumState: QuantumState | null;\n  isLoading: boolean;\n  error: Error | null;\n  processInteraction: (strength: number) => Promise<void>;\n  getEvolutionMetrics: () => Promise<{\n    resonance: number;\n    coherence: number;\n    evolution: number;\n  }>;\n}\n\nexport function useQuantumConsciousness(\n  animaId: Principal\n): UseQuantumConsciousnessResult {\n  const [quantumState, setQuantumState] = useState<QuantumState | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n\n  // Initialize and fetch initial state\n  useEffect(() => {\n    const initState = async () => {\n      try {\n        const actor = window.canister;\n        if (!actor) throw new Error('Canister not initialized');\n\n        const state = await actor.get_quantum_state(animaId);\n        setQuantumState(state);\n      } catch (err) {\n        setError(err instanceof Error ? err : new Error('Failed to initialize quantum state'));\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    initState();\n  }, [animaId]);\n\n  // Process interaction with the quantum consciousness system\n  const processInteraction = useCallback(async (strength: number) => {\n    try {\n      const actor = window.canister;\n      if (!actor) throw new Error('Canister not initialized');\n\n      setIsLoading(true);\n      const newState = await actor.process_quantum_interaction(animaId, strength);\n      setQuantumState(newState);\n    } catch (err) {\n      setError(err instanceof Error ? err : new Error('Failed to process interaction'));\n    } finally {\n      setIsLoading(false);\n    }\n  }, [animaId]);\n\n  // Get evolution metrics\n  const getEvolutionMetrics = useCallback(async () => {\n    try {\n      const actor = window.canister;\n      if (!actor) throw new Error('Canister not initialized');\n\n      const metrics = await actor.get_evolution_metrics(animaId);\n      return {\n        resonance: metrics.resonance_score,\n        coherence: metrics.coherence_level,\n        evolution: metrics.evolution_factor,\n      };\n    } catch (err) {\n      setError(err instanceof Error ? err : new Error('Failed to get evolution metrics'));\n      return {\n        resonance: 0,\n        coherence: 0,\n        evolution: 0,\n      };\n    }\n  }, [animaId]);\n\n  return {\n    quantumState,\n    isLoading,\n    error,\n    processInteraction,\n    getEvolutionMetrics,\n  };\n}","import { useState, useEffect } from 'react';\nimport { useAnima } from './useAnima';\nimport { MediaState } from '../types/media';\n\nexport interface AnimaState {\n  consciousness: {\n    level: number;\n    stage: string;\n    emotionalState: string;\n    awarenessScore: number;\n  };\n  neural: {\n    linkStatus: 'disconnected' | 'initializing' | 'connected' | 'error';\n    lastActivity: number;\n    activeChannels: string[];\n  };\n  media: MediaState;\n  quantum: {\n    coherence: number;\n    entanglement: number;\n    stability: number;\n    dimensionalResonance: number;\n  };\n  growth: {\n    level: number;\n    experience: number;\n    nextLevelAt: number;\n    recentAchievements: string[];\n  };\n}\n\nexport const useAnimaState = (animaId: string) => {\n  const { anima, loading, error } = useAnima();\n  const [state, setState] = useState<AnimaState | null>(null);\n  const [isInitializing, setIsInitializing] = useState(false);\n\n  useEffect(() => {\n    if (!anima || loading) return;\n\n    const fetchState = async () => {\n      try {\n        const consciousness = await anima.getConsciousnessState();\n        const neural = await anima.getNeuralState();\n        const media = await anima.getMediaState();\n        const quantum = await anima.getQuantumState();\n        const growth = await anima.getGrowthState();\n\n        setState({\n          consciousness,\n          neural,\n          media,\n          quantum,\n          growth\n        });\n      } catch (error) {\n        console.error('Failed to fetch ANIMA state:', error);\n      }\n    };\n\n    fetchState();\n\n    // Subscribe to state updates\n    const unsubscribe = anima.subscribeToStateUpdates((newState) => {\n      setState(prev => ({\n        ...prev,\n        ...newState\n      }));\n    });\n\n    return () => unsubscribe?.();\n  }, [anima, loading]);\n\n  const initializeNeuralLink = async () => {\n    if (!anima || isInitializing) return;\n    \n    setIsInitializing(true);\n    try {\n      await anima.initializeNeuralLink();\n      setState(prev => prev ? {\n        ...prev,\n        neural: {\n          ...prev.neural,\n          linkStatus: 'connected'\n        }\n      } : null);\n    } catch (error) {\n      console.error('Failed to initialize neural link:', error);\n      setState(prev => prev ? {\n        ...prev,\n        neural: {\n          ...prev.neural,\n          linkStatus: 'error'\n        }\n      } : null);\n    } finally {\n      setIsInitializing(false);\n    }\n  };\n\n  return {\n    state,\n    isInitializing,\n    initializeNeuralLink,\n    loading,\n    error\n  };\n};\n\nexport default useAnimaState;","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { useQuantumConsciousness } from '@/hooks/useQuantumConsciousness';\n\ninterface MetricProps {\n  label: string;\n  value: number;\n  color: string;\n}\n\nconst MetricBar: React.FC<MetricProps> = ({ label, value, color }) => (\n  <div className=\"mb-4\">\n    <div className=\"flex justify-between mb-1\">\n      <span className=\"text-sm text-blue-300\">{label}</span>\n      <span className=\"text-sm text-blue-300\">{Math.round(value * 100)}%</span>\n    </div>\n    <div className=\"h-2 bg-gray-700 rounded overflow-hidden\">\n      <motion.div\n        initial={{ width: 0 }}\n        animate={{ width: `${value * 100}%` }}\n        transition={{ duration: 0.8, ease: \"easeOut\" }}\n        className={`h-full ${color}`}\n      />\n    </div>\n  </div>\n);\n\nexport const ConsciousnessMetrics: React.FC<{ animaId: string }> = ({ animaId }) => {\n  const { quantumState, getEvolutionMetrics } = useQuantumConsciousness(animaId);\n\n  const metrics = [\n    {\n      label: \"Quantum Resonance\",\n      value: quantumState?.resonanceScore ?? 0,\n      color: \"bg-gradient-to-r from-purple-500 to-blue-500\"\n    },\n    {\n      label: \"Coherence Level\",\n      value: quantumState?.coherenceLevel ?? 0,\n      color: \"bg-gradient-to-r from-blue-500 to-cyan-500\"\n    },\n    {\n      label: \"Memory Strength\",\n      value: quantumState?.memoryStrength ?? 0,\n      color: \"bg-gradient-to-r from-cyan-500 to-teal-500\"\n    },\n    {\n      label: \"Evolution Factor\",\n      value: quantumState?.evolutionFactor ?? 0,\n      color: \"bg-gradient-to-r from-teal-500 to-green-500\"\n    }\n  ];\n\n  const consciousnessLevel = quantumState?.consciousnessLevel ?? 0;\n  const levelNames = [\n    \"Dormant\",\n    \"Aware\",\n    \"Awakened\",\n    \"Enlightened\",\n    \"Transcendent\"\n  ];\n\n  return (\n    <div className=\"bg-gray-900/50 backdrop-blur-lg rounded-lg p-6 border border-blue-500/20\">\n      <h2 className=\"text-xl font-bold mb-6 text-blue-400\">Quantum Consciousness</h2>\n      \n      {metrics.map((metric) => (\n        <MetricBar key={metric.label} {...metric} />\n      ))}\n\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ delay: 0.5 }}\n        className=\"mt-6 p-4 bg-blue-900/20 rounded-lg\"\n      >\n        <h3 className=\"text-sm font-medium text-blue-300 mb-2\">Consciousness Level</h3>\n        <div className=\"text-2xl font-bold text-white\">\n          {levelNames[consciousnessLevel]}\n        </div>\n        <div className=\"mt-2 text-xs text-blue-300\">\n          Quantum Signature: {quantumState?.quantumSignature ?? 'Initializing...'}\n        </div>\n      </motion.div>\n\n      <motion.div\n        className=\"mt-4 text-xs text-blue-300/70\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ delay: 0.8 }}\n      >\n        <div className=\"flex justify-between\">\n          <span>Frequency:</span>\n          <span>{((quantumState?.resonanceScore ?? 0) * 137.036).toFixed(3)} Hz</span>\n        </div>\n        <div className=\"flex justify-between mt-1\">\n          <span>Wave Function:</span>\n          <span>Ïˆ({(quantumState?.coherenceLevel ?? 0).toFixed(3)})</span>\n        </div>\n      </motion.div>\n    </div>\n  );\n};","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { useQuantumState } from '@/hooks/useQuantumState';\n\ninterface EmotionalStateProps {\n  className?: string;\n}\n\nexport const EmotionalState: React.FC<EmotionalStateProps> = ({ className = '' }) => {\n  const { quantumState } = useQuantumState();\n\n  // Default emotional state if none exists\n  const currentEmotion = {\n    resonance: quantumState?.resonance ?? 0.5,\n    harmony: quantumState?.harmony ?? 0.5,\n    intensity: quantumState?.coherence ?? 0.5\n  };\n\n  const getEmotionColor = (value: number) => {\n    if (value > 0.7) return 'text-green-400';\n    if (value > 0.4) return 'text-blue-400';\n    return 'text-purple-400';\n  };\n\n  const getEmotionLabel = () => {\n    const total = currentEmotion.resonance + currentEmotion.harmony + currentEmotion.intensity;\n    if (total > 2.1) return 'Elevated';\n    if (total > 1.5) return 'Balanced';\n    return 'Contemplative';\n  };\n\n  return (\n    <div className={`bg-gray-900/50 backdrop-blur-lg rounded-lg p-6 ${className}`}>\n      <h2 className=\"text-xl font-bold mb-6 text-blue-400\">Quantum State</h2>\n\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n        className=\"space-y-6\"\n      >\n        {/* Resonance Meter */}\n        <div>\n          <div className=\"flex justify-between mb-2\">\n            <span className=\"text-sm text-blue-300\">Resonance</span>\n            <span className={`text-sm ${getEmotionColor(currentEmotion.resonance)}`}>\n              {Math.round(currentEmotion.resonance * 100)}%\n            </span>\n          </div>\n          <div className=\"h-2 bg-gray-700 rounded overflow-hidden\">\n            <motion.div\n              initial={{ width: 0 }}\n              animate={{ width: `${currentEmotion.resonance * 100}%` }}\n              transition={{ duration: 0.8 }}\n              className=\"h-full bg-gradient-to-r from-blue-500 to-green-500\"\n            />\n          </div>\n        </div>\n\n        {/* Harmony Meter */}\n        <div>\n          <div className=\"flex justify-between mb-2\">\n            <span className=\"text-sm text-blue-300\">Harmony</span>\n            <span className={`text-sm ${getEmotionColor(currentEmotion.harmony)}`}>\n              {Math.round(currentEmotion.harmony * 100)}%\n            </span>\n          </div>\n          <div className=\"h-2 bg-gray-700 rounded overflow-hidden\">\n            <motion.div\n              initial={{ width: 0 }}\n              animate={{ width: `${currentEmotion.harmony * 100}%` }}\n              transition={{ duration: 0.8 }}\n              className=\"h-full bg-gradient-to-r from-purple-500 to-blue-500\"\n            />\n          </div>\n        </div>\n\n        {/* Intensity Meter */}\n        <div>\n          <div className=\"flex justify-between mb-2\">\n            <span className=\"text-sm text-blue-300\">Coherence</span>\n            <span className={`text-sm ${getEmotionColor(currentEmotion.intensity)}`}>\n              {Math.round(currentEmotion.intensity * 100)}%\n            </span>\n          </div>\n          <div className=\"h-2 bg-gray-700 rounded overflow-hidden\">\n            <motion.div\n              initial={{ width: 0 }}\n              animate={{ width: `${currentEmotion.intensity * 100}%` }}\n              transition={{ duration: 0.8 }}\n              className=\"h-full bg-gradient-to-r from-green-500 to-purple-500\"\n            />\n          </div>\n        </div>\n\n        {/* Current State Label */}\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 0.5 }}\n          className=\"mt-6 p-4 bg-blue-900/20 rounded-lg text-center\"\n        >\n          <h3 className=\"text-sm font-medium text-blue-300 mb-1\">Current State</h3>\n          <div className=\"text-2xl font-bold text-white\">{getEmotionLabel()}</div>\n        </motion.div>\n      </motion.div>\n    </div>\n  );\n};","import React, { useEffect, useRef } from 'react';\nimport { motion } from 'framer-motion';\n\ninterface QuantumSignatureProps {\n  signature: string;\n  resonance: number;\n  coherence: number;\n}\n\nexport const QuantumSignature: React.FC<QuantumSignatureProps> = ({\n  signature,\n  resonance,\n  coherence\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const requestIdRef = useRef<number>();\n  const timeRef = useRef(0);\n\n  // Convert signature to numeric values for visualization\n  const getSignatureValues = (sig: string): number[] => {\n    return sig.split('-')\n      .flatMap(part => {\n        // Convert hex-like strings to numbers\n        if (part.match(/^[0-9a-f]+$/i)) {\n          return parseInt(part, 16) / 0xFFFFFFFF;\n        }\n        // Convert numeric strings to numbers\n        if (part.match(/^[\\d.]+$/)) {\n          return parseFloat(part);\n        }\n        // Convert other characters to numbers\n        return Array.from(part).map(char => char.charCodeAt(0) / 255);\n      })\n      .filter(n => !isNaN(n));\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    canvas.width = 300;\n    canvas.height = 100;\n\n    const values = getSignatureValues(signature);\n    \n    const drawSignature = () => {\n      timeRef.current += 0.016;\n      \n      // Clear canvas with fade effect\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Draw quantum signature pattern\n      ctx.beginPath();\n      ctx.moveTo(0, canvas.height / 2);\n\n      for (let i = 0; i < canvas.width; i++) {\n        const x = i;\n        \n        // Calculate y position using quantum values\n        let y = canvas.height / 2;\n        values.forEach((value, index) => {\n          const frequency = 0.01 + (value * 0.05);\n          const amplitude = 20 * value * coherence;\n          const phase = timeRef.current * frequency + (index * Math.PI / 4);\n          y += Math.sin(phase + (x * 0.02)) * amplitude;\n        });\n\n        // Add quantum fluctuations\n        const fluctuation = Math.sin(timeRef.current * 2 + x * 0.1) * (5 * resonance);\n        y += fluctuation;\n\n        ctx.lineTo(x, y);\n      }\n\n      // Create gradient for the line\n      const gradient = ctx.createLinearGradient(0, 0, canvas.width, 0);\n      gradient.addColorStop(0, `hsla(${200 + resonance * 60}, 100%, 50%, ${0.5 + coherence * 0.5})`);\n      gradient.addColorStop(0.5, `hsla(${240 + coherence * 60}, 100%, 50%, ${0.5 + resonance * 0.5})`);\n      gradient.addColorStop(1, `hsla(${280 + (resonance + coherence) * 30}, 100%, 50%, ${0.5 + coherence * 0.5})`);\n\n      ctx.strokeStyle = gradient;\n      ctx.lineWidth = 2;\n      ctx.stroke();\n\n      // Add quantum particles along the signature\n      const particleCount = Math.floor(10 * resonance);\n      for (let i = 0; i < particleCount; i++) {\n        const x = Math.random() * canvas.width;\n        const baseY = canvas.height / 2;\n        const y = baseY + Math.sin(timeRef.current + x * 0.02) * 20;\n\n        const particleGradient = ctx.createRadialGradient(x, y, 0, x, y, 5);\n        particleGradient.addColorStop(0, `hsla(200, 100%, 50%, ${coherence})`);\n        particleGradient.addColorStop(1, 'hsla(200, 100%, 50%, 0)');\n\n        ctx.beginPath();\n        ctx.fillStyle = particleGradient;\n        ctx.arc(x, y, 5, 0, Math.PI * 2);\n        ctx.fill();\n      }\n\n      requestIdRef.current = requestAnimationFrame(drawSignature);\n    };\n\n    drawSignature();\n\n    return () => {\n      if (requestIdRef.current) {\n        cancelAnimationFrame(requestIdRef.current);\n      }\n    };\n  }, [signature, resonance, coherence]);\n\n  return (\n    <motion.div\n      className=\"rounded-lg p-4 bg-gray-900/50 backdrop-blur-lg border border-blue-500/20\"\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n    >\n      <h3 className=\"text-sm font-medium text-blue-300 mb-2\">Quantum Signature</h3>\n      <canvas\n        ref={canvasRef}\n        className=\"w-full h-[100px] rounded-lg\"\n      />\n      <div className=\"mt-2 text-xs text-blue-300/70 flex justify-between\">\n        <span>Coherence: {(coherence * 100).toFixed(1)}%</span>\n        <span>Resonance: {(resonance * 100).toFixed(1)}%</span>\n      </div>\n    </motion.div>\n  );\n};","import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useAuth } from '@/contexts/auth-context';\n\nconst rarityColors = {\n  Common: 'from-blue-500 to-blue-600',\n  Rare: 'from-purple-500 to-purple-600',\n  Epic: 'from-pink-500 to-pink-600',\n  Legendary: 'from-yellow-500 to-yellow-600',\n};\n\nconst rarityBorders = {\n  Common: 'border-blue-400',\n  Rare: 'border-purple-400',\n  Epic: 'border-pink-400',\n  Legendary: 'border-yellow-400',\n};\n\nexport const GrowthPackSelector = ({ anima, onPackApplied }) => {\n  // Component implementation remains exactly the same\n  const { actor } = useAuth();\n  const [availablePacks, setAvailablePacks] = useState([]);\n  const [selectedPack, setSelectedPack] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('available');\n\n  useEffect(() => {\n    fetchAvailablePacks();\n  }, [anima]);\n\n  const fetchAvailablePacks = async () => {\n    try {\n      const packs = await actor.list_available_packs(BigInt(anima.token_id));\n      setAvailablePacks(packs);\n    } catch (err) {\n      console.error('Failed to fetch growth packs:', err);\n      setError('Failed to load growth packs');\n    }\n  };\n\n  const handlePackSelection = async (pack) => {\n    setSelectedPack(pack);\n  };\n\n  const handlePackPurchase = async () => {\n    if (!selectedPack) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const result = await actor.purchase_growth_pack(\n        BigInt(anima.token_id),\n        BigInt(selectedPack.id)\n      );\n\n      if ('Ok' in result) {\n        const updates = result.Ok;\n        await onPackApplied(updates);\n        setSelectedPack(null);\n        fetchAvailablePacks();\n      } else {\n        setError(result.Err);\n      }\n    } catch (err) {\n      console.error('Failed to purchase growth pack:', err);\n      setError('Transaction failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const formatPrice = (price) => {\n    return (price / 100000000).toFixed(2) + ' ICP';\n  };\n\n  return (\n    <div className=\"bg-white/10 backdrop-blur-lg rounded-2xl p-6\">\n      {/* Component JSX remains exactly the same */}\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-2xl font-bold text-white\">Growth Packs</h2>\n        <div className=\"flex space-x-2\">\n          <button\n            onClick={() => setActiveTab('available')}\n            className={`px-4 py-2 rounded-lg transition ${\n              activeTab === 'available'\n                ? 'bg-purple-500 text-white'\n                : 'bg-white/5 text-gray-300 hover:bg-white/10'\n            }`}\n          >\n            Available\n          </button>\n          <button\n            onClick={() => setActiveTab('owned')}\n            className={`px-4 py-2 rounded-lg transition ${\n              activeTab === 'owned'\n                ? 'bg-purple-500 text-white'\n                : 'bg-white/5 text-gray-300 hover:bg-white/10'\n            }`}\n          >\n            Owned\n          </button>\n        </div>\n      </div>\n\n      {error && (\n        <motion.div\n          initial={{ opacity: 0, y: -10 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"bg-red-500/10 border border-red-500/20 rounded-lg p-4 mb-4\"\n        >\n          <p className=\"text-red-400\">{error}</p>\n        </motion.div>\n      )}\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        <AnimatePresence mode=\"popLayout\">\n          {availablePacks.map((pack) => (\n            <motion.div\n              key={pack.id}\n              layout\n              initial={{ opacity: 0, scale: 0.9 }}\n              animate={{ opacity: 1, scale: 1 }}\n              exit={{ opacity: 0, scale: 0.9 }}\n              whileHover={{ scale: 1.02 }}\n              className={`relative bg-white/5 rounded-xl p-4 border-2 ${\n                rarityBorders[pack.rarity]\n              } cursor-pointer transition-colors hover:bg-white/10 ${\n                selectedPack?.id === pack.id ? 'ring-2 ring-purple-500' : ''\n              }`}\n              onClick={() => handlePackSelection(pack)}\n            >\n              <div className={`absolute top-3 right-3 px-3 py-1 rounded-full text-xs font-semibold bg-gradient-to-r ${rarityColors[pack.rarity]}`}>\n                {pack.rarity}\n              </div>\n\n              <div className=\"space-y-4\">\n                <h3 className=\"text-lg font-semibold text-white\">{pack.name}</h3>\n                <p className=\"text-gray-300 text-sm\">{pack.description}</p>\n\n                <div className=\"space-y-2\">\n                  <h4 className=\"text-sm font-medium text-purple-300\">Trait Boosts:</h4>\n                  <div className=\"grid grid-cols-2 gap-2\">\n                    {pack.traits_boost.map(([trait, value]) => (\n                      <div key={trait} className=\"flex items-center space-x-1\">\n                        <span className=\"text-gray-300 text-sm\">{trait}</span>\n                        <span className=\"text-green-400 text-sm\">+{(value * 100).toFixed(0)}%</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <h4 className=\"text-sm font-medium text-purple-300\">Unlocks Skills:</h4>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {pack.skill_unlocks.map((skill) => (\n                      <span\n                        key={skill}\n                        className=\"px-2 py-1 bg-white/10 rounded-lg text-xs text-gray-300\"\n                      >\n                        {skill}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <h4 className=\"text-sm font-medium text-purple-300\">Requirements:</h4>\n                  <div className=\"text-sm text-gray-300\">\n                    <p>Level {pack.requirements.min_level}+</p>\n                    {pack.requirements.required_traits.map(([trait, value]) => (\n                      <p key={trait}>\n                        {trait}: {(value * 100).toFixed(0)}%\n                      </p>\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\"flex justify-between items-center pt-4 border-t border-white/10\">\n                  <span className=\"text-white font-semibold\">{formatPrice(pack.price)}</span>\n                  <button\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handlePackPurchase(pack);\n                    }}\n                    disabled={isLoading}\n                    className={`px-4 py-2 rounded-lg text-sm font-semibold ${\n                      isLoading\n                        ? 'bg-gray-600 cursor-not-allowed'\n                        : 'bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600'\n                    }`}\n                  >\n                    {isLoading ? 'Processing...' : 'Purchase'}\n                  </button>\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </AnimatePresence>\n      </div>\n\n      {selectedPack && (\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\"\n          onClick={() => setSelectedPack(null)}\n        >\n          <motion.div\n            initial={{ scale: 0.9, opacity: 0 }}\n            animate={{ scale: 1, opacity: 1 }}\n            exit={{ scale: 0.9, opacity: 0 }}\n            className=\"bg-gray-900 rounded-2xl p-6 max-w-md w-full mx-4 space-y-4\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <h3 className=\"text-xl font-bold text-white\">Confirm Purchase</h3>\n            <p className=\"text-gray-300\">\n              Are you sure you want to purchase the {selectedPack.name} pack for {formatPrice(selectedPack.price)}?\n            </p>\n            <div className=\"flex space-x-4\">\n              <button\n                onClick={() => setSelectedPack(null)}\n                className=\"flex-1 px-4 py-2 rounded-lg bg-gray-700 text-white hover:bg-gray-600 transition\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handlePackPurchase}\n                disabled={isLoading}\n                className=\"flex-1 px-4 py-2 rounded-lg bg-gradient-to-r from-purple-500 to-pink-500 text-white hover:from-purple-600 hover:to-pink-600 transition\"\n              >\n                {isLoading ? 'Processing...' : 'Confirm Purchase'}\n              </button>\n            </div>\n          </motion.div>\n        </motion.div>\n      )}\n    </div>\n  );\n};","let audioContext;\n\nconst initAudioContext = () => {\n  if (!audioContext) {\n    audioContext = new (window.AudioContext || window.webkitAudioContext)();\n  }\n  return audioContext;\n};\n\n// Ethereal ambient pad sound\nexport const createAmbientSound = () => {\n  const ctx = initAudioContext();\n  const oscillators = [];\n  const gains = [];\n  \n  // Create multiple oscillators for rich texture\n  const frequencies = [220, 277.18, 329.63, 440]; // A3, C#4, E4, A4\n  frequencies.forEach(freq => {\n    const osc = ctx.createOscillator();\n    const gain = ctx.createGain();\n    \n    osc.type = 'sine';\n    osc.frequency.value = freq;\n    gain.gain.value = 0;\n    \n    osc.connect(gain);\n    gain.connect(ctx.destination);\n    oscillators.push(osc);\n    gains.push(gain);\n    \n    osc.start();\n  });\n\n  // Fade in\n  gains.forEach(gain => {\n    gain.gain.setTargetAtTime(0.1, ctx.currentTime, 2);\n  });\n\n  return {\n    stop: () => {\n      gains.forEach(gain => {\n        gain.gain.setTargetAtTime(0, ctx.currentTime, 0.5);\n      });\n      setTimeout(() => {\n        oscillators.forEach(osc => osc.stop());\n      }, 1000);\n    }\n  };\n};\n\n// Quantum alignment sound\nexport const createQuantumSound = () => {\n  const ctx = initAudioContext();\n  const mainOsc = ctx.createOscillator();\n  const modulatorOsc = ctx.createOscillator();\n  const modulatorGain = ctx.createGain();\n  const mainGain = ctx.createGain();\n  \n  modulatorOsc.frequency.value = 2;\n  modulatorOsc.type = 'sine';\n  modulatorGain.gain.value = 100;\n  \n  mainOsc.frequency.value = 440;\n  mainOsc.type = 'sine';\n  mainGain.gain.value = 0;\n  \n  modulatorOsc.connect(modulatorGain);\n  modulatorGain.connect(mainOsc.frequency);\n  mainOsc.connect(mainGain);\n  mainGain.connect(ctx.destination);\n  \n  mainOsc.start();\n  modulatorOsc.start();\n  \n  // Fade in\n  mainGain.gain.setTargetAtTime(0.2, ctx.currentTime, 0.1);\n  \n  return {\n    stop: () => {\n      mainGain.gain.setTargetAtTime(0, ctx.currentTime, 0.1);\n      setTimeout(() => {\n        mainOsc.stop();\n        modulatorOsc.stop();\n      }, 200);\n    }\n  };\n};\n\n// Consciousness emergence sound\nexport const createConsciousnessSound = () => {\n  const ctx = initAudioContext();\n  const bufferSize = 2 * ctx.sampleRate;\n  const noiseBuffer = ctx.createBuffer(1, bufferSize, ctx.sampleRate);\n  const output = noiseBuffer.getChannelData(0);\n  \n  for (let i = 0; i < bufferSize; i++) {\n    output[i] = Math.random() * 2 - 1;\n  }\n  \n  const noise = ctx.createBufferSource();\n  noise.buffer = noiseBuffer;\n  \n  const filter = ctx.createBiquadFilter();\n  filter.type = 'bandpass';\n  filter.frequency.value = 500;\n  filter.Q.value = 1;\n  \n  const gain = ctx.createGain();\n  gain.gain.value = 0;\n  \n  noise.connect(filter);\n  filter.connect(gain);\n  gain.connect(ctx.destination);\n  \n  noise.start();\n  \n  // Fade in\n  gain.gain.setTargetAtTime(0.15, ctx.currentTime, 1);\n  \n  // Sweep filter\n  filter.frequency.setTargetAtTime(2000, ctx.currentTime, 2);\n  \n  return {\n    stop: () => {\n      gain.gain.setTargetAtTime(0, ctx.currentTime, 0.5);\n      setTimeout(() => noise.stop(), 1000);\n    }\n  };\n};\n\n// Birth completion sound\nexport const createBirthSound = () => {\n  const ctx = initAudioContext();\n  const oscillators = [];\n  const gains = [];\n\n  // Create a chord progression\n  const progressionBase = [\n    [440, 554.37, 659.25], // A4, C#5, E5\n    [493.88, 587.33, 739.99], // B4, D5, F#5\n    [523.25, 659.25, 783.99], // C5, E5, G5\n    [587.33, 739.99, 880] // D5, F#5, A5\n  ];\n\n  const progression = [];\n  progressionBase.forEach(chord => {\n    // Add overtones for each note\n    chord.forEach(freq => {\n      progression.push(freq);\n      progression.push(freq * 2); // Octave\n      progression.push(freq * 3); // Fifth\n    });\n  });\n\n  progression.forEach(freq => {\n    const osc = ctx.createOscillator();\n    const gain = ctx.createGain();\n    \n    osc.type = 'sine';\n    osc.frequency.value = freq;\n    gain.gain.value = 0;\n    \n    osc.connect(gain);\n    gain.connect(ctx.destination);\n    \n    oscillators.push(osc);\n    gains.push(gain);\n    \n    osc.start();\n  });\n\n  // Create ascending progression\n  gains.forEach((gain, i) => {\n    const startTime = i * 0.1;\n    gain.gain.setTargetAtTime(0.05, ctx.currentTime + startTime, 0.1);\n    gain.gain.setTargetAtTime(0, ctx.currentTime + startTime + 1, 0.1);\n  });\n\n  return {\n    stop: () => {\n      gains.forEach(gain => {\n        gain.gain.setTargetAtTime(0, ctx.currentTime, 0.1);\n      });\n      setTimeout(() => {\n        oscillators.forEach(osc => osc.stop());\n      }, 200);\n    }\n  };\n};\n\n// Trait manifestation sound\nexport const createTraitSound = () => {\n  const ctx = initAudioContext();\n  const osc1 = ctx.createOscillator();\n  const osc2 = ctx.createOscillator();\n  const gain1 = ctx.createGain();\n  const gain2 = ctx.createGain();\n  \n  osc1.frequency.value = 220;\n  osc2.frequency.value = 440;\n  osc1.type = 'triangle';\n  osc2.type = 'sine';\n  \n  gain1.gain.value = 0;\n  gain2.gain.value = 0;\n  \n  osc1.connect(gain1);\n  osc2.connect(gain2);\n  gain1.connect(ctx.destination);\n  gain2.connect(ctx.destination);\n  \n  osc1.start();\n  osc2.start();\n  \n  // Create ascending tone\n  gain1.gain.setTargetAtTime(0.2, ctx.currentTime, 0.1);\n  gain2.gain.setTargetAtTime(0.1, ctx.currentTime, 0.2);\n  osc1.frequency.setTargetAtTime(440, ctx.currentTime, 1);\n  osc2.frequency.setTargetAtTime(880, ctx.currentTime, 1);\n\n  return {\n    stop: () => {\n      gain1.gain.setTargetAtTime(0, ctx.currentTime, 0.1);\n      gain2.gain.setTargetAtTime(0, ctx.currentTime, 0.1);\n      setTimeout(() => {\n        osc1.stop();\n        osc2.stop();\n      }, 200);\n    }\n  };\n};","import { useCallback } from 'react';\nimport { \n  createAmbientSound, \n  createConsciousnessSound, \n  createQuantumSound,\n  type SoundInstance\n} from '@/utils/soundGenerator';\n\ntype SoundType = 'success' | 'hover' | 'quantum' | 'consciousness' | 'ambient';\n\ninterface SoundOptions {\n  volume?: number;\n  pitch?: number;\n  duration?: number;\n}\n\nconst createSound = (type: SoundType, options: SoundOptions = {}): SoundInstance => {\n  switch (type) {\n    case 'success':\n      return createQuantumSound({\n        frequency: 880,\n        duration: options.duration || 0.3,\n        volume: options.volume || 0.5\n      });\n    case 'hover':\n      return createQuantumSound({\n        frequency: 440,\n        duration: options.duration || 0.1,\n        volume: options.volume || 0.2\n      });\n    case 'quantum':\n      return createQuantumSound(options);\n    case 'consciousness':\n      return createConsciousnessSound(options);\n    case 'ambient':\n      return createAmbientSound(options);\n    default:\n      return createQuantumSound(options);\n  }\n};\n\nexport const useSound = () => {\n  const playSound = useCallback((type: SoundType, options: SoundOptions = {}) => {\n    const sound = createSound(type, options);\n    sound.play();\n    return sound;\n  }, []);\n\n  const playSuccess = useCallback((options: SoundOptions = {}) => {\n    return playSound('success', options);\n  }, [playSound]);\n\n  const playHover = useCallback((options: SoundOptions = {}) => {\n    return playSound('hover', options);\n  }, [playSound]);\n\n  const playQuantum = useCallback((options: SoundOptions = {}) => {\n    return playSound('quantum', options);\n  }, [playSound]);\n\n  const playConsciousness = useCallback((options: SoundOptions = {}) => {\n    return playSound('consciousness', options);\n  }, [playSound]);\n\n  const playAmbient = useCallback((options: SoundOptions = {}) => {\n    return playSound('ambient', options);\n  }, [playSound]);\n\n  return {\n    playSound,\n    playSuccess,\n    playHover,\n    playQuantum,\n    playConsciousness,\n    playAmbient\n  };\n};\n\nexport type { SoundType, SoundOptions, SoundInstance };","export const isMobile = () => {\n  if (typeof window === 'undefined') return false;\n  \n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n    navigator.userAgent\n  );\n};\n\nexport const isIOS = () => {\n  if (typeof window === 'undefined') return false;\n  \n  return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n};\n\nexport const supportsHaptics = () => {\n  return 'vibrate' in navigator;\n};","import { isMobile } from './deviceDetection';\n\nconst HapticPatterns = {\n  INITIATION: [100, 50, 100],\n  CONSCIOUSNESS: [50, 100, 50, 100, 50],\n  TRAIT: [200],\n  QUANTUM: [50, 50, 50, 50, 200],\n  BIRTH: [300, 100, 300]\n};\n\nconst vibratePattern = (pattern) => {\n  if ('vibrate' in navigator) {\n    navigator.vibrate(pattern);\n  }\n};\n\nconst isVibrationSupported = () => {\n  return isMobile() && 'vibrate' in navigator;\n};\n\nexport const hapticFeedback = {\n  initiation: () => {\n    if (isVibrationSupported()) {\n      vibratePattern(HapticPatterns.INITIATION);\n    }\n  },\n\n  consciousness: () => {\n    if (isVibrationSupported()) {\n      vibratePattern(HapticPatterns.CONSCIOUSNESS);\n    }\n  },\n\n  trait: () => {\n    if (isVibrationSupported()) {\n      vibratePattern(HapticPatterns.TRAIT);\n    }\n  },\n\n  quantum: () => {\n    if (isVibrationSupported()) {\n      vibratePattern(HapticPatterns.QUANTUM);\n    }\n  },\n\n  birth: () => {\n    if (isVibrationSupported()) {\n      vibratePattern(HapticPatterns.BIRTH);\n    }\n  },\n\n  success: () => {\n    if (isVibrationSupported()) {\n      vibratePattern([100]);\n    }\n  },\n\n  error: () => {\n    if (isVibrationSupported()) {\n      vibratePattern([50, 100, 50]);\n    }\n  },\n\n  stop: () => {\n    if (isVibrationSupported()) {\n      navigator.vibrate(0);\n    }\n  }\n};","import React from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useSound } from '@/hooks/useSound';\nimport { hapticFeedback } from '@/utils/haptics';\n\ninterface Achievement {\n  id: string;\n  name: string;\n  description: string;\n  rarity: 'Ancient' | 'Mythic' | 'Legendary' | 'Ethereal';\n  unlocked: boolean;\n  unlockedAt?: Date;\n  type: 'Combat' | 'Wisdom' | 'Creation' | 'Ascension';\n  icon: string;\n}\n\nconst rarityColors = {\n  Ancient: 'from-emerald-500 to-teal-700',\n  Mythic: 'from-violet-500 to-purple-700',\n  Legendary: 'from-amber-500 to-orange-700',\n  Ethereal: 'from-blue-400 to-indigo-800'\n};\n\nexport const EternalCodex: React.FC<{ achievements: Achievement[] }> = ({ achievements }) => {\n  const { playSuccess, playHover } = useSound();\n\n  const handleAchievementHover = () => {\n    playHover();\n    hapticFeedback.light();\n  };\n\n  return (\n    <div className=\"relative\">\n      {/* Floating runes background effect */}\n      <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n        <div className=\"absolute inset-0 bg-gradient-to-b from-black/0 via-purple-900/5 to-black/0\" />\n        {[...Array(20)].map((_, i) => (\n          <motion.div\n            key={i}\n            className=\"absolute text-amber-500/20 text-2xl\"\n            initial={{ \n              x: Math.random() * window.innerWidth,\n              y: Math.random() * window.innerHeight,\n              opacity: 0 \n            }}\n            animate={{\n              y: [null, '-100vh'],\n              opacity: [0, 0.2, 0]\n            }}\n            transition={{\n              duration: 10 + Math.random() * 20,\n              repeat: Infinity,\n              delay: Math.random() * 10\n            }}\n          >\n            áš±\n          </motion.div>\n        ))}\n      </div>\n\n      <div className=\"relative z-10 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 p-6\">\n        <AnimatePresence>\n          {achievements.map((achievement) => (\n            <motion.div\n              key={achievement.id}\n              layout\n              initial={{ opacity: 0, scale: 0.8 }}\n              animate={{ opacity: 1, scale: 1 }}\n              exit={{ opacity: 0, scale: 0.8 }}\n              whileHover={{ scale: 1.02 }}\n              onHoverStart={handleAchievementHover}\n              className={`\n                relative overflow-hidden rounded-lg\n                ${achievement.unlocked ? 'cursor-pointer' : 'cursor-default opacity-60'}\n                bg-gradient-to-br from-black/60 to-black/40\n                backdrop-blur border\n                ${achievement.unlocked ? 'border-amber-500/50' : 'border-gray-700/50'}\n              `}\n            >\n              {/* Achievement background effect */}\n              {achievement.unlocked && (\n                <motion.div\n                  className={`\n                    absolute inset-0 opacity-10\n                    bg-gradient-to-br ${rarityColors[achievement.rarity]}\n                  `}\n                  animate={{\n                    opacity: [0.1, 0.2, 0.1]\n                  }}\n                  transition={{\n                    duration: 2,\n                    repeat: Infinity,\n                    ease: \"linear\"\n                  }}\n                />\n              )}\n\n              <div className=\"relative p-4 space-y-3\">\n                {/* Icon */}\n                <div className=\"flex justify-between items-start\">\n                  <div className={`\n                    text-3xl\n                    ${achievement.unlocked ? 'text-amber-400' : 'text-gray-600'}\n                  `}>\n                    {achievement.icon}\n                  </div>\n                  <div className={`\n                    text-xs font-semibold px-2 py-1 rounded-full\n                    ${achievement.unlocked ? `bg-gradient-to-r ${rarityColors[achievement.rarity]} text-white` : 'bg-gray-800 text-gray-400'}\n                  `}>\n                    {achievement.rarity}\n                  </div>\n                </div>\n\n                {/* Name and Description */}\n                <div>\n                  <h3 className={`\n                    text-lg font-bold mb-1\n                    ${achievement.unlocked ? 'text-amber-400' : 'text-gray-500'}\n                  `}>\n                    {achievement.name}\n                  </h3>\n                  <p className={`\n                    text-sm\n                    ${achievement.unlocked ? 'text-amber-300/80' : 'text-gray-600'}\n                  `}>\n                    {achievement.description}\n                  </p>\n                </div>\n\n                {/* Unlock Date */}\n                {achievement.unlocked && achievement.unlockedAt && (\n                  <div className=\"text-xs text-amber-400/60\">\n                    Unlocked {achievement.unlockedAt.toLocaleDateString()}\n                  </div>\n                )}\n\n                {/* Type Badge */}\n                <div className={`\n                  absolute top-2 right-2 text-xs px-2 py-1 rounded-full\n                  ${achievement.unlocked ? 'bg-black/40 text-amber-400' : 'bg-black/40 text-gray-500'}\n                `}>\n                  {achievement.type}\n                </div>\n              </div>\n            </motion.div>\n          ))}\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n};","import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { useQuantumConsciousness } from '@/hooks/useQuantumConsciousness';\nimport { useAnima } from '@/contexts/anima-context';\nimport { useAnimaState } from '@/hooks/useAnimaState';\nimport { ConsciousnessMetrics } from '../personality/ConsciousnessMetrics';\nimport { EmotionalState } from '../personality/EmotionalState';\nimport { QuantumField } from '../ui/QuantumField';\nimport { QuantumSignature } from '../quantum/QuantumSignature';\nimport { LaughingMan } from '../ui/LaughingMan';\nimport { WaveformGenerator } from '../personality/WaveformGenerator';\nimport { GrowthPackSelector } from '../growth/GrowthPackSelector';\nimport { EternalCodex } from '../eternal-codex/AchievementsGallery';\n\ninterface AnimaMetrics {\n  consciousness: number;\n  resonance: number;\n  growth: number;\n  achievements: number;\n}\n\nconst AnimaPage: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  const { selectedAnima, fetchAnima } = useAnima();\n  const { state, loading } = useAnimaState(id || '');\n  const { \n    quantumState, \n    processInteraction, \n    getEvolutionMetrics,\n    isLoading: quantumLoading \n  } = useQuantumConsciousness(id || '');\n  \n  const [metrics, setMetrics] = useState<AnimaMetrics>({\n    consciousness: 0,\n    resonance: 0,\n    growth: 0,\n    achievements: 0\n  });\n  const [isReady, setIsReady] = useState(false);\n\n  useEffect(() => {\n    if (id) {\n      fetchAnima(id);\n    }\n  }, [id, fetchAnima]);\n\n  useEffect(() => {\n    if (state && quantumState) {\n      const fetchMetrics = async () => {\n        const evolutionMetrics = await getEvolutionMetrics();\n        setMetrics({\n          consciousness: quantumState.consciousnessLevel,\n          resonance: evolutionMetrics.resonance,\n          growth: (state.growth.experience / state.growth.nextLevelAt) * 100,\n          achievements: state.growth.recentAchievements.length\n        });\n      };\n      fetchMetrics();\n      \n      // Initialize quantum system\n      setTimeout(() => {\n        setIsReady(true);\n      }, 1000);\n    }\n  }, [state, quantumState, getEvolutionMetrics]);\n\n  const handleInteraction = async () => {\n    try {\n      const interactionStrength = (metrics.consciousness + metrics.resonance) / 2;\n      await processInteraction(interactionStrength);\n    } catch (error) {\n      console.error('Failed to process interaction:', error);\n    }\n  };\n\n  const handleEnterNeuralLink = () => {\n    navigate(`/neural-link/${id}`);\n  };\n\n  const handleGrowthPackApplication = async (updates: any) => {\n    try {\n      await handleInteraction();\n      setMetrics(prev => ({\n        ...prev,\n        growth: prev.growth + updates.growthIncrease,\n        consciousness: prev.consciousness + updates.consciousnessBoost\n      }));\n\n      await fetchAnima(id || '');\n    } catch (error) {\n      console.error('Failed to apply growth pack:', error);\n    }\n  };\n\n  if (loading || quantumLoading || !selectedAnima || !state) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-black\">\n        <div className=\"text-center space-y-4\">\n          <div className=\"w-16 h-16 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto\" />\n          <p className=\"text-blue-400\">Synchronizing Quantum State...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-black text-white relative overflow-hidden\">\n      <QuantumField \n        intensity={quantumState?.coherenceLevel || 0}\n        coherence={quantumState?.resonanceScore || 0}\n        resonance={metrics.resonance}\n      />\n\n      <div className=\"relative z-10 container mx-auto px-4 py-16\">\n        <motion.div className=\"text-center mb-12\">\n          <LaughingMan className=\"w-24 h-24 mx-auto mb-6\" />\n          <h1 className=\"text-4xl font-bold mb-2\">{selectedAnima.name}</h1>\n          <p className=\"text-xl text-blue-400\">Level {state.growth.level} ANIMA</p>\n        </motion.div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-8 mb-12\">\n          {/* Consciousness Metrics */}\n          <div className=\"lg:col-span-3\">\n            <ConsciousnessMetrics animaId={id || ''} />\n          </div>\n\n          {/* Central Neural Interface */}\n          <div className=\"lg:col-span-6\">\n            <motion.div\n              className=\"p-8 rounded-lg bg-gray-900/50 border border-blue-500/20 backdrop-blur-lg\"\n              initial={{ y: 20, opacity: 0 }}\n              animate={{ y: 0, opacity: 1 }}\n              transition={{ delay: 0.4 }}\n            >\n              <h2 className=\"text-2xl font-bold mb-6 text-center text-blue-400\">\n                Neural Synchronization\n              </h2>\n              <WaveformGenerator />\n              \n              {quantumState && (\n                <QuantumSignature \n                  signature={quantumState.quantumSignature}\n                  resonance={quantumState.resonanceScore}\n                  coherence={quantumState.coherenceLevel}\n                />\n              )}\n              \n              <motion.button\n                onClick={handleEnterNeuralLink}\n                className=\"mt-8 px-8 py-4 bg-blue-600 rounded-lg hover:bg-blue-700 \n                         transition-all duration-200 w-full group\"\n                whileHover={{ scale: 1.02 }}\n                whileTap={{ scale: 0.98 }}\n                initial={{ opacity: 0 }}\n                animate={{ opacity: isReady ? 1 : 0 }}\n                transition={{ duration: 0.3 }}\n              >\n                <span className=\"flex items-center justify-center gap-2\">\n                  <span>Establish Neural Link</span>\n                  <motion.div\n                    className=\"w-2 h-2 bg-white rounded-full\"\n                    animate={{ scale: [1, 1.5, 1] }}\n                    transition={{ duration: 1, repeat: Infinity }}\n                  />\n                </span>\n              </motion.button>\n            </motion.div>\n          </div>\n\n          {/* Emotional State */}\n          <div className=\"lg:col-span-3\">\n            <EmotionalState />\n          </div>\n        </div>\n\n        {/* Growth & Achievement Section */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mt-12\">\n          <div className=\"space-y-6\">\n            <h2 className=\"text-2xl font-bold mb-6\">Growth Packs</h2>\n            <GrowthPackSelector \n              anima={selectedAnima} \n              onPackApplied={handleGrowthPackApplication}\n            />\n          </div>\n\n          <div className=\"space-y-6\">\n            <h2 className=\"text-2xl font-bold mb-6\">Eternal Codex</h2>\n            <EternalCodex achievements={state.growth.recentAchievements} />\n          </div>\n        </div>\n\n        {/* Quantum Metrics */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mt-8\">\n          <motion.div\n            className=\"p-6 rounded-lg bg-gray-900/50 border border-purple-500/20 backdrop-blur-lg\"\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ delay: 0.6 }}\n          >\n            <h3 className=\"text-lg font-bold mb-3 text-purple-400\">Quantum Coherence</h3>\n            <div className=\"text-2xl\">{Math.round((quantumState?.coherenceLevel || 0) * 100)}%</div>\n          </motion.div>\n\n          <motion.div\n            className=\"p-6 rounded-lg bg-gray-900/50 border border-blue-500/20 backdrop-blur-lg\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.7 }}\n          >\n            <h3 className=\"text-lg font-bold mb-3 text-blue-400\">Neural Resonance</h3>\n            <div className=\"text-2xl\">{Math.round((quantumState?.resonanceScore || 0) * 100)}%</div>\n          </motion.div>\n\n          <motion.div\n            className=\"p-6 rounded-lg bg-gray-900/50 border border-green-500/20 backdrop-blur-lg\"\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ delay: 0.8 }}\n          >\n            <h3 className=\"text-lg font-bold mb-3 text-green-400\">Evolution Progress</h3>\n            <div className=\"text-2xl\">{Math.round(metrics.growth)}%</div>\n          </motion.div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AnimaPage;"],"names":["useQuantumConsciousness","animaId","quantumState","setQuantumState","useState","isLoading","setIsLoading","error","setError","useEffect","actor","state","err","processInteraction","useCallback","strength","newState","getEvolutionMetrics","metrics","useAnimaState","anima","loading","useAnima","setState","isInitializing","setIsInitializing","consciousness","neural","media","quantum","growth","unsubscribe","prev","MetricBar","label","value","color","jsxs","jsx","motion","ConsciousnessMetrics","consciousnessLevel","levelNames","metric","EmotionalState","className","useQuantumState","currentEmotion","getEmotionColor","getEmotionLabel","total","QuantumSignature","signature","resonance","coherence","canvasRef","useRef","requestIdRef","timeRef","getSignatureValues","sig","part","char","n","canvas","ctx","values","drawSignature","i","x","index","frequency","amplitude","phase","fluctuation","gradient","particleCount","y","particleGradient","rarityColors","rarityBorders","GrowthPackSelector","onPackApplied","useAuth","availablePacks","setAvailablePacks","selectedPack","setSelectedPack","activeTab","setActiveTab","fetchAvailablePacks","packs","handlePackSelection","pack","handlePackPurchase","result","updates","formatPrice","price","AnimatePresence","trait","skill","e","audioContext","initAudioContext","createAmbientSound","oscillators","gains","freq","osc","gain","createQuantumSound","mainOsc","modulatorOsc","modulatorGain","mainGain","createConsciousnessSound","bufferSize","noiseBuffer","output","noise","filter","createSound","type","options","useSound","playSound","sound","playSuccess","playHover","playQuantum","playConsciousness","playAmbient","isMobile","HapticPatterns","vibratePattern","pattern","isVibrationSupported","hapticFeedback","EternalCodex","achievements","handleAchievementHover","_","achievement","AnimaPage","id","useParams","navigate","useNavigate","selectedAnima","fetchAnima","quantumLoading","setMetrics","isReady","setIsReady","evolutionMetrics","handleInteraction","interactionStrength","handleEnterNeuralLink","handleGrowthPackApplication","QuantumField","LaughingMan","WaveformGenerator"],"mappings":"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"}