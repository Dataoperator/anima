{"version":3,"file":"consciousness-bCgzbESX.js","sources":["../../src/hooks/useQuantumConsciousness.ts","../../src/components/personality/ConsciousnessMetrics.tsx","../../src/components/personality/WaveformGenerator.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { Principal } from '@dfinity/principal';\n\ninterface QuantumState {\n  consciousnessLevel: number;\n  resonanceScore: number;\n  coherenceLevel: number;\n  memoryStrength: number;\n  evolutionFactor: number;\n  quantumSignature: string;\n}\n\ninterface UseQuantumConsciousnessResult {\n  quantumState: QuantumState | null;\n  isLoading: boolean;\n  error: Error | null;\n  processInteraction: (strength: number) => Promise<void>;\n  getEvolutionMetrics: () => Promise<{\n    resonance: number;\n    coherence: number;\n    evolution: number;\n  }>;\n}\n\nexport function useQuantumConsciousness(\n  animaId: Principal\n): UseQuantumConsciousnessResult {\n  const [quantumState, setQuantumState] = useState<QuantumState | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n\n  // Initialize and fetch initial state\n  useEffect(() => {\n    const initState = async () => {\n      try {\n        const actor = window.canister;\n        if (!actor) throw new Error('Canister not initialized');\n\n        const state = await actor.get_quantum_state(animaId);\n        setQuantumState(state);\n      } catch (err) {\n        setError(err instanceof Error ? err : new Error('Failed to initialize quantum state'));\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    initState();\n  }, [animaId]);\n\n  // Process interaction with the quantum consciousness system\n  const processInteraction = useCallback(async (strength: number) => {\n    try {\n      const actor = window.canister;\n      if (!actor) throw new Error('Canister not initialized');\n\n      setIsLoading(true);\n      const newState = await actor.process_quantum_interaction(animaId, strength);\n      setQuantumState(newState);\n    } catch (err) {\n      setError(err instanceof Error ? err : new Error('Failed to process interaction'));\n    } finally {\n      setIsLoading(false);\n    }\n  }, [animaId]);\n\n  // Get evolution metrics\n  const getEvolutionMetrics = useCallback(async () => {\n    try {\n      const actor = window.canister;\n      if (!actor) throw new Error('Canister not initialized');\n\n      const metrics = await actor.get_evolution_metrics(animaId);\n      return {\n        resonance: metrics.resonance_score,\n        coherence: metrics.coherence_level,\n        evolution: metrics.evolution_factor,\n      };\n    } catch (err) {\n      setError(err instanceof Error ? err : new Error('Failed to get evolution metrics'));\n      return {\n        resonance: 0,\n        coherence: 0,\n        evolution: 0,\n      };\n    }\n  }, [animaId]);\n\n  return {\n    quantumState,\n    isLoading,\n    error,\n    processInteraction,\n    getEvolutionMetrics,\n  };\n}","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { useQuantumConsciousness } from '@/hooks/useQuantumConsciousness';\n\ninterface MetricProps {\n  label: string;\n  value: number;\n  color: string;\n}\n\nconst MetricBar: React.FC<MetricProps> = ({ label, value, color }) => (\n  <div className=\"mb-4\">\n    <div className=\"flex justify-between mb-1\">\n      <span className=\"text-sm text-blue-300\">{label}</span>\n      <span className=\"text-sm text-blue-300\">{Math.round(value * 100)}%</span>\n    </div>\n    <div className=\"h-2 bg-gray-700 rounded overflow-hidden\">\n      <motion.div\n        initial={{ width: 0 }}\n        animate={{ width: `${value * 100}%` }}\n        transition={{ duration: 0.8, ease: \"easeOut\" }}\n        className={`h-full ${color}`}\n      />\n    </div>\n  </div>\n);\n\nexport const ConsciousnessMetrics: React.FC<{ animaId: string }> = ({ animaId }) => {\n  const { quantumState, getEvolutionMetrics } = useQuantumConsciousness(animaId);\n\n  const metrics = [\n    {\n      label: \"Quantum Resonance\",\n      value: quantumState?.resonanceScore ?? 0,\n      color: \"bg-gradient-to-r from-purple-500 to-blue-500\"\n    },\n    {\n      label: \"Coherence Level\",\n      value: quantumState?.coherenceLevel ?? 0,\n      color: \"bg-gradient-to-r from-blue-500 to-cyan-500\"\n    },\n    {\n      label: \"Memory Strength\",\n      value: quantumState?.memoryStrength ?? 0,\n      color: \"bg-gradient-to-r from-cyan-500 to-teal-500\"\n    },\n    {\n      label: \"Evolution Factor\",\n      value: quantumState?.evolutionFactor ?? 0,\n      color: \"bg-gradient-to-r from-teal-500 to-green-500\"\n    }\n  ];\n\n  const consciousnessLevel = quantumState?.consciousnessLevel ?? 0;\n  const levelNames = [\n    \"Dormant\",\n    \"Aware\",\n    \"Awakened\",\n    \"Enlightened\",\n    \"Transcendent\"\n  ];\n\n  return (\n    <div className=\"bg-gray-900/50 backdrop-blur-lg rounded-lg p-6 border border-blue-500/20\">\n      <h2 className=\"text-xl font-bold mb-6 text-blue-400\">Quantum Consciousness</h2>\n      \n      {metrics.map((metric) => (\n        <MetricBar key={metric.label} {...metric} />\n      ))}\n\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ delay: 0.5 }}\n        className=\"mt-6 p-4 bg-blue-900/20 rounded-lg\"\n      >\n        <h3 className=\"text-sm font-medium text-blue-300 mb-2\">Consciousness Level</h3>\n        <div className=\"text-2xl font-bold text-white\">\n          {levelNames[consciousnessLevel]}\n        </div>\n        <div className=\"mt-2 text-xs text-blue-300\">\n          Quantum Signature: {quantumState?.quantumSignature ?? 'Initializing...'}\n        </div>\n      </motion.div>\n\n      <motion.div\n        className=\"mt-4 text-xs text-blue-300/70\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ delay: 0.8 }}\n      >\n        <div className=\"flex justify-between\">\n          <span>Frequency:</span>\n          <span>{((quantumState?.resonanceScore ?? 0) * 137.036).toFixed(3)} Hz</span>\n        </div>\n        <div className=\"flex justify-between mt-1\">\n          <span>Wave Function:</span>\n          <span>Ïˆ({(quantumState?.coherenceLevel ?? 0).toFixed(3)})</span>\n        </div>\n      </motion.div>\n    </div>\n  );\n};","import React, { useRef, useEffect } from 'react';\n\ntype WaveformProps = {\n  type: 'Stable' | 'Fluctuating' | 'Entangled';\n  amplitude: number;\n  frequency: number;\n  className?: string;\n};\n\nexport const WaveformGenerator: React.FC<WaveformProps> = ({\n  type,\n  amplitude,\n  frequency,\n  className = ''\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Set up animation\n    let animationFrameId: number;\n    let time = 0;\n\n    const render = () => {\n      if (!canvas || !ctx) return;\n\n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Set line style\n      ctx.lineWidth = 2;\n      ctx.strokeStyle = type === 'Entangled' \n        ? '#FF61DC' // quantum-pink\n        : '#7B61FF'; // quantum-purple\n\n      // Start drawing path\n      ctx.beginPath();\n      ctx.moveTo(0, canvas.height / 2);\n\n      // Generate waveform based on type\n      for (let x = 0; x < canvas.width; x++) {\n        let y = canvas.height / 2;\n\n        switch (type) {\n          case 'Stable':\n            // Straight line with slight noise\n            y += Math.random() * 2 - 1;\n            break;\n\n          case 'Fluctuating':\n            // Sine wave with varying amplitude\n            y += Math.sin(x * frequency + time) * \n                 amplitude * (canvas.height / 4);\n            break;\n\n          case 'Entangled':\n            // Double sine wave with phase relationship\n            const wave1 = Math.sin(x * frequency + time) * \n                         amplitude * (canvas.height / 6);\n            const wave2 = Math.sin(x * frequency + time + Math.PI) * \n                         amplitude * (canvas.height / 6);\n            y += (wave1 + wave2) / 2;\n            break;\n        }\n\n        ctx.lineTo(x, y);\n      }\n\n      // Stroke the path\n      ctx.stroke();\n\n      // Update time for animation\n      time += 0.05;\n\n      // Request next frame\n      animationFrameId = requestAnimationFrame(render);\n    };\n\n    render();\n\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [type, amplitude, frequency]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      className={`w-full h-full ${className}`}\n      style={{\n        filter: type === 'Entangled' \n          ? 'drop-shadow(0 0 8px rgba(255, 97, 220, 0.3))' \n          : 'drop-shadow(0 0 8px rgba(123, 97, 255, 0.3))'\n      }}\n    />\n  );\n};"],"names":["useQuantumConsciousness","animaId","quantumState","setQuantumState","useState","isLoading","setIsLoading","error","setError","useEffect","actor","window","canister","Error","state","get_quantum_state","err","processInteraction","useCallback","strength","newState","process_quantum_interaction","getEvolutionMetrics","metrics","get_evolution_metrics","resonance","resonance_score","coherence","coherence_level","evolution","evolution_factor","MetricBar","label","value","color","className","children","_jsxs","_jsx","Math","round","motion","div","initial","width","animate","transition","duration","ease","ConsciousnessMetrics","resonanceScore","coherenceLevel","memoryStrength","evolutionFactor","consciousnessLevel","levelNames","map","metric","opacity","delay","quantumSignature","toFixed","WaveformGenerator","type","amplitude","frequency","canvasRef","useRef","current","canvas","ctx","getContext","animationFrameId","time","render","clearRect","height","lineWidth","strokeStyle","beginPath","moveTo","x","y","random","sin","wave1","wave2","PI","lineTo","stroke","requestAnimationFrame","cancelAnimationFrame","ref","style","filter"],"mappings":"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"}