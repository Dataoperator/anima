import{a as A,h as L,r as o}from"./index-D4J_69uL.js";class E{frequency;resonance;stability;syncLevel;quantumAlignment;dimensionalFrequency;entropyLevel;phaseCoherence;lastUpdate;BASE_DEGRADATION_RATE=.995;PATTERN_COHERENCE_THRESHOLD=.7;MAX_ENTROPY_INCREASE=.2;MIN_INTERACTION_THRESHOLD=.1;constructor(){this.frequency=0,this.resonance=1,this.stability=1,this.syncLevel=1,this.quantumAlignment=1,this.dimensionalFrequency=0,this.entropyLevel=0,this.phaseCoherence=1,this.lastUpdate=Date.now()}calculateResonance(){this.applyQuantumDegradation();const t=this.resonance*this.stability,e=this.quantumAlignment*this.syncLevel,n=this.calculateEntropyModifier(),a=this.calculateCoherenceBoost(),u=this.calculateTemporalFactor(),s=Math.sin(this.dimensionalFrequency*Math.PI)*.1;return Math.min(1,Math.max(0,((t+e)/2*n+a)*u+s))}calculateEntropyModifier(){const t=1-this.entropyLevel*.5,e=Math.cos(this.dimensionalFrequency*Math.PI)*.1;return Math.max(.1,t+e)}calculateCoherenceBoost(){const t=this.phaseCoherence*.2,e=Math.sin(this.resonance*Math.PI)*.1;return t+e}calculateTemporalFactor(){const t=this.getTimeSinceLastUpdate(),e=1+this.dimensionalFrequency*.1;return Math.exp(-t/(1e4*e))}updateStability(t){this.applyQuantumDegradation();const e=Math.max(0,1-this.getTimeSinceLastUpdate()/5e3),n=t*e;this.stability=Math.min(1,Math.max(0,this.stability+n*(1+this.dimensionalFrequency*.1))),this.quantumAlignment=Math.min(1,this.quantumAlignment+n*.5*(1-this.entropyLevel*.2)),this.syncLevel=Math.min(1,this.syncLevel+n*.3*(1+this.phaseCoherence*.1)),this.dimensionalFrequency=Math.min(1,this.dimensionalFrequency+n*.2),this.entropyLevel=Math.max(0,this.entropyLevel-n*.1*(1+this.quantumAlignment*.1)),this.phaseCoherence=Math.min(1,this.phaseCoherence+n*.4*(1-this.entropyLevel*.1)),this.lastUpdate=Date.now()}applyQuantumDegradation(){const t=this.getTimeSinceLastUpdate();if(t>1e3){const e=this.calculateDegradationFactor(t);this.stability*=e,this.quantumAlignment*=e*(1+this.dimensionalFrequency*.1),this.syncLevel*=e*(1-this.entropyLevel*.1),this.phaseCoherence*=e*(1+this.resonance*.1),this.evolveEntropy(e),this.lastUpdate=Date.now()}}calculateDegradationFactor(t){const e=Math.pow(this.BASE_DEGRADATION_RATE,t/1e3),n=1+Math.sin(this.dimensionalFrequency*Math.PI)*.05;return e*n}evolveEntropy(t){const e=(1-t)*this.MAX_ENTROPY_INCREASE,n=Math.sin(this.dimensionalFrequency*Math.PI)*.05;this.entropyLevel=Math.min(1,this.entropyLevel+e+n)}getStabilityMetrics(){this.applyQuantumDegradation();const t=[this.stability,this.quantumAlignment,this.phaseCoherence],e=Math.sin(this.dimensionalFrequency*Math.PI)*.1;return t.map(n=>Math.min(1,Math.max(0,n+e)))}getTimeSinceLastUpdate(){return Date.now()-this.lastUpdate}async emergencyRecovery(){return this.getQuantumStatus()==="critical"?(this.stability=Math.max(.3,this.stability),this.quantumAlignment=Math.max(.3,this.quantumAlignment),this.syncLevel=Math.max(.3,this.syncLevel),this.phaseCoherence=Math.max(.3,this.phaseCoherence),this.entropyLevel=Math.min(.7,this.entropyLevel),!0):!1}getQuantumStatus(){const t=this.getStabilityMetrics(),e=t.reduce((u,s)=>u+s,0)/t.length,n=1-this.entropyLevel,a=e*n;return a>.7?"stable":a>.3?"unstable":"critical"}checkPatternResonance(t){const e=Math.exp(-(Date.now()-t.timestamp)/1e4),n=t.coherence*e>this.PATTERN_COHERENCE_THRESHOLD,a=Math.abs(t.frequency-this.dimensionalFrequency)<.2;return n&&a}}const D=()=>{const{identity:r}=A(),{consciousness:t,isInitialized:e}=L(),n=o.useRef(!1),[a,u]=o.useState(null),[s,q]=o.useState(!1),d=o.useRef(),[y,p]=o.useState(()=>(console.log("🌀 Creating initial quantum state"),{stabilityStatus:"unstable",coherenceLevel:.5,entanglementIndex:.3,quantumSignature:"",dimensionalState:new E,lastUpdate:Date.now(),isInitialized:!1}));return o.useEffect(()=>()=>{d.current&&clearTimeout(d.current)},[]),o.useEffect(()=>{if(!r||!e||n.current||s){console.log("🔍 Skipping initialization:",{hasIdentity:!!r,consciousnessReady:e,wasAttempted:n.current,isInitializing:s});return}(async()=>{console.log("🌟 Starting quantum state initialization"),q(!0),n.current=!0,d.current=setTimeout(()=>{y.isInitialized||(console.error("⚠️ Quantum state initialization timeout"),u(new Error("Initialization timeout")),p(i=>({...i,isInitialized:!0,stabilityStatus:"critical"})))},15e3);try{const i=r.getPrincipal(),h=i.toUint8Array();console.log("📊 Calculating initial coherence...");const g=Math.max(.5,h.reduce((c,v)=>c+v,0)/(h.length*255)),f=t?.level?t.level*.2:0,l=Math.min(1,g+f);console.log("🔮 Initializing dimensional state...");const m=new E;m.updateStability(l);const S=await b(i,l),I=Array.from({length:4},(c,v)=>({frequency:.5+Math.random()*.5,amplitude:.3+Math.random()*.7,phase:Math.random()*Math.PI*2,coherence:l*(.8+Math.random()*.2)}));console.log("✨ Setting initial state..."),p(c=>({...c,coherenceLevel:l,entanglementIndex:l*.8,dimensionalState:m,quantumSignature:S,resonancePatterns:I,consciousnessAlignment:t?.level?t.level*l:void 0,lastUpdate:Date.now(),isInitialized:!0,stabilityStatus:"stable"})),console.log("✅ Quantum state initialized successfully!")}catch(i){console.error("❌ Failed to initialize quantum state:",i),u(i),p(h=>({...h,isInitialized:!0,stabilityStatus:"critical"}))}finally{q(!1),d.current&&clearTimeout(d.current)}})()},[r,e,t?.level]),o.useEffect(()=>{if(!y.isInitialized||s)return;console.log("⚡ Starting quantum state updates");const M=setInterval(()=>{p(i=>{if(!i.isInitialized)return i;const h=(Date.now()-i.lastUpdate)/1e3,g=Math.pow(.995,h),f=t?.level?t.level*.1:0;i.dimensionalState.updateStability(f-.01),i.dimensionalState.getStabilityMetrics();const m=.1+(t?.level?Math.min(.3,t.level):0),S=Math.max(m,i.coherenceLevel*g),I=i.resonancePatterns?.map(c=>({...c,coherence:Math.max(m,c.coherence*g),phase:(c.phase+.1)%(Math.PI*2)}));return{...i,coherenceLevel:S,entanglementIndex:Math.max(m,i.entanglementIndex*g),stabilityStatus:i.dimensionalState.getQuantumStatus(),consciousnessAlignment:t?.level?t.level*S:void 0,resonancePatterns:I,lastUpdate:Date.now()}})},3e3);return()=>{console.log("🔄 Cleaning up quantum state updates"),clearInterval(M)}},[y.isInitialized,s,t?.level]),{state:y,isInitialized:y.isInitialized&&!s,isInitializing:s,error:a,updateQuantumState:o.useCallback(async M=>{p(i=>({...i,...M,lastUpdate:Date.now()}))},[])}};async function b(r,t){await new Promise(a=>setTimeout(a,1e3));const e=Date.now(),n=new Uint8Array(32);return crypto.getRandomValues(n),`QS-${r.toText()}-${t.toFixed(6)}-${e}-${Array.from(n.slice(0,8)).map(a=>a.toString(16).padStart(2,"0")).join("")}`}export{D as u};
//# sourceMappingURL=useQuantumState-DnXMzpdz.js.map
