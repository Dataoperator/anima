{"version":3,"file":"QuantumField-DBXQFon7.js","sources":["../../src/components/ui/QuantumField.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nexport const QuantumField = ({ intensity = 0.5, className = '' }) => {\n  const canvasRef = useRef(null);\n  const particles = useRef([]);\n  const requestIdRef = useRef();\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Ensure intensity is within valid range\n    const safeIntensity = Math.max(0.1, Math.min(1, intensity));\n\n    const updateCanvasSize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n\n    const initParticles = () => {\n      const numParticles = Math.floor(50 * safeIntensity);\n      particles.current = Array.from({ length: numParticles }, () => ({\n        x: Math.random() * canvas.width,\n        y: Math.random() * canvas.height,\n        radius: Math.max(1, Math.random() * 3 * safeIntensity),\n        speed: Math.max(0.2, Math.random() * safeIntensity)\n      }));\n    };\n\n    const drawParticle = (particle) => {\n      // Ensure positive radius\n      const radius = Math.max(0.1, particle.radius);\n      \n      // Create gradient with safe radius\n      const gradient = ctx.createRadialGradient(\n        particle.x, particle.y, 0,\n        particle.x, particle.y, radius\n      );\n      gradient.addColorStop(0, `rgba(0, 150, 255, ${safeIntensity})`);\n      gradient.addColorStop(1, 'rgba(0, 150, 255, 0)');\n\n      ctx.beginPath();\n      ctx.arc(particle.x, particle.y, radius, 0, Math.PI * 2);\n      ctx.fillStyle = gradient;\n      ctx.fill();\n    };\n\n    const animate = () => {\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      particles.current.forEach(particle => {\n        // Update position with bounds checking\n        particle.y = (particle.y - particle.speed + canvas.height) % canvas.height;\n        \n        // Draw particle\n        drawParticle(particle);\n      });\n\n      // Draw connections\n      ctx.strokeStyle = `rgba(0, 150, 255, ${safeIntensity * 0.2})`;\n      ctx.lineWidth = 0.5;\n\n      particles.current.forEach((p1, i) => {\n        particles.current.slice(i + 1).forEach(p2 => {\n          const dx = p1.x - p2.x;\n          const dy = p1.y - p2.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n\n          if (distance < 100) {\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n          }\n        });\n      });\n\n      requestIdRef.current = requestAnimationFrame(animate);\n    };\n\n    window.addEventListener('resize', updateCanvasSize);\n    updateCanvasSize();\n    initParticles();\n    animate();\n\n    return () => {\n      window.removeEventListener('resize', updateCanvasSize);\n      if (requestIdRef.current) {\n        cancelAnimationFrame(requestIdRef.current);\n      }\n    };\n  }, [intensity]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      className={`fixed inset-0 pointer-events-none ${className}`}\n      style={{ background: 'transparent' }}\n    />\n  );\n};"],"names":["QuantumField","intensity","className","canvasRef","useRef","particles","requestIdRef","useEffect","canvas","current","ctx","getContext","safeIntensity","Math","max","min","updateCanvasSize","width","window","innerWidth","height","innerHeight","initParticles","numParticles","floor","Array","from","length","x","random","y","radius","speed","drawParticle","particle","gradient","createRadialGradient","addColorStop","beginPath","arc","PI","fillStyle","fill","animate","fillRect","forEach","strokeStyle","lineWidth","p1","i","slice","p2","dx","dy","sqrt","moveTo","lineTo","stroke","requestAnimationFrame","addEventListener","removeEventListener","cancelAnimationFrame","ref","style","background"],"mappings":"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"}