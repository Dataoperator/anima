{"version":3,"file":"AnimaPage-C0sT8_dH.js","sources":["../../src/components/ui/MatrixRain.tsx","../../src/components/layout/MatrixLayout.tsx","../../src/components/ui/NeuralGrid.jsx","../../src/components/ui/GlowOrb.jsx","../../src/components/ui/CircuitLines.jsx","../../src/lib/anima-utils.ts","../../src/utils/date.ts","../../src/components/pages/AnimaPage.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\ninterface MatrixRainProps {\n  className?: string;\n  color?: string;\n}\n\nexport const MatrixRain: React.FC<MatrixRainProps> = ({ \n  className = '',\n  color = '#00ff00'\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Set canvas size\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    // Matrix characters (mix of katakana and other symbols)\n    const chars = 'ｦｱｳｴｵｶｷｹｺｻｼｽｾｿﾀﾂﾃﾅﾆﾇﾈﾊﾋﾎﾏﾐﾑﾒﾓﾔﾕﾗﾘﾜ0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    const charArray = chars.split('');\n\n    // Drop settings\n    const fontSize = 16;\n    const columns = canvas.width / fontSize;\n    const drops: number[] = [];\n\n    // Initialize drops\n    for (let i = 0; i < columns; i++) {\n      drops[i] = Math.random() * -100;\n    }\n\n    // Animation settings\n    let lastTime = 0;\n    const fps = 30;\n    const interval = 1000 / fps;\n\n    // Draw function\n    const draw = (timestamp: number) => {\n      if (!ctx) return;\n\n      // Control frame rate\n      if (timestamp - lastTime < interval) {\n        requestAnimationFrame(draw);\n        return;\n      }\n      lastTime = timestamp;\n\n      // Semi-transparent black to create fade effect\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Green text\n      ctx.fillStyle = color;\n      ctx.font = fontSize + 'px monospace';\n\n      // Draw characters\n      for (let i = 0; i < drops.length; i++) {\n        // Random character\n        const char = charArray[Math.floor(Math.random() * charArray.length)];\n        \n        // Calculate position\n        const x = i * fontSize;\n        const y = drops[i] * fontSize;\n\n        // Draw character with varying opacity\n        const alpha = Math.random() * 0.5 + 0.5;\n        ctx.fillStyle = color.replace(')', `,${alpha})`).replace('rgb', 'rgba');\n        ctx.fillText(char, x, y);\n\n        // Reset when off screen or randomly\n        if (y > canvas.height || Math.random() > 0.99) {\n          drops[i] = 0;\n        }\n\n        // Move drop\n        drops[i]++;\n      }\n\n      requestAnimationFrame(draw);\n    };\n\n    // Start animation\n    requestAnimationFrame(draw);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n    };\n  }, [color]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      className={`absolute inset-0 ${className}`}\n      style={{ background: 'transparent' }}\n    />\n  );\n};","import React from 'react';\nimport { MatrixRain } from '@/components/ui/MatrixRain';\n\ninterface MatrixLayoutProps {\n  children: React.ReactNode;\n}\n\nexport const MatrixLayout: React.FC<MatrixLayoutProps> = ({ children }) => {\n  return (\n    <div className=\"min-h-screen bg-black text-green-500 p-4 font-mono overflow-hidden\">\n      <MatrixRain />\n      <div className=\"relative z-10\">\n        {children}\n      </div>\n    </div>\n  );\n};","import React, { useEffect, useRef } from 'react';\nimport { motion } from 'framer-motion';\n\nexport const NeuralGrid = ({ className = '', intensity = 1.0 }) => {\n  const canvasRef = useRef(null);\n  const nodesRef = useRef([]);\n  const connectionsRef = useRef([]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n\n    // Initialize nodes\n    const initNodes = () => {\n      nodesRef.current = Array(50).fill().map(() => ({\n        x: Math.random() * width,\n        y: Math.random() * height,\n        vx: (Math.random() - 0.5) * 2,\n        vy: (Math.random() - 0.5) * 2,\n        size: Math.random() * 3 + 1,\n        pulsePhase: Math.random() * Math.PI * 2,\n        activity: Math.random()\n      }));\n    };\n\n    // Update node positions and connections\n    const update = () => {\n      const nodes = nodesRef.current;\n      \n      // Update nodes\n      nodes.forEach(node => {\n        node.x += node.vx;\n        node.y += node.vy;\n        node.pulsePhase += 0.05;\n        \n        // Bounce off boundaries\n        if (node.x < 0 || node.x > width) node.vx *= -1;\n        if (node.y < 0 || node.y > height) node.vy *= -1;\n        \n        // Keep within bounds\n        node.x = Math.max(0, Math.min(width, node.x));\n        node.y = Math.max(0, Math.min(height, node.y));\n      });\n\n      // Update connections\n      connectionsRef.current = [];\n      for (let i = 0; i < nodes.length; i++) {\n        for (let j = i + 1; j < nodes.length; j++) {\n          const dx = nodes[j].x - nodes[i].x;\n          const dy = nodes[j].y - nodes[i].y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          \n          if (distance < 100) {\n            connectionsRef.current.push({\n              from: nodes[i],\n              to: nodes[j],\n              strength: 1 - (distance / 100)\n            });\n          }\n        }\n      }\n    };\n\n    // Draw the neural network\n    const draw = () => {\n      ctx.clearRect(0, 0, width, height);\n      \n      // Draw connections\n      connectionsRef.current.forEach(conn => {\n        const gradient = ctx.createLinearGradient(\n          conn.from.x, conn.from.y,\n          conn.to.x, conn.to.y\n        );\n        \n        const alpha = conn.strength * 0.5 * intensity;\n        gradient.addColorStop(0, `rgba(0, 255, 255, ${alpha})`);\n        gradient.addColorStop(1, `rgba(0, 128, 255, ${alpha})`);\n        \n        ctx.beginPath();\n        ctx.moveTo(conn.from.x, conn.from.y);\n        ctx.lineTo(conn.to.x, conn.to.y);\n        ctx.strokeStyle = gradient;\n        ctx.lineWidth = conn.strength * 2;\n        ctx.stroke();\n      });\n\n      // Draw nodes\n      nodesRef.current.forEach(node => {\n        const pulse = Math.sin(node.pulsePhase) * 0.5 + 0.5;\n        const size = node.size * (1 + pulse * 0.5);\n        \n        // Glow effect\n        ctx.shadowColor = 'rgba(0, 255, 255, 0.5)';\n        ctx.shadowBlur = 10;\n        \n        // Node fill\n        ctx.beginPath();\n        ctx.arc(node.x, node.y, size, 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(0, ${155 + pulse * 100}, ${255}, ${0.8 * intensity})`;\n        ctx.fill();\n        \n        // Node ring\n        ctx.beginPath();\n        ctx.arc(node.x, node.y, size * 1.5, 0, Math.PI * 2);\n        ctx.strokeStyle = `rgba(0, 255, 255, ${0.3 * pulse * intensity})`;\n        ctx.lineWidth = 1;\n        ctx.stroke();\n      });\n    };\n\n    // Animation loop\n    let animationFrame;\n    const animate = () => {\n      update();\n      draw();\n      animationFrame = requestAnimationFrame(animate);\n    };\n\n    // Initialize and start animation\n    initNodes();\n    animate();\n\n    // Cleanup\n    return () => {\n      cancelAnimationFrame(animationFrame);\n    };\n  }, [intensity]);\n\n  return (\n    <motion.canvas\n      ref={canvasRef}\n      className={`w-full h-full ${className}`}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    />\n  );\n};","import React from 'react';\nimport { motion } from 'framer-motion';\n\nexport const GlowOrb = ({ phase }) => {\n  const getOrbColors = () => {\n    switch (phase) {\n      case 'initiation':\n        return ['#2081E2', '#1199FA'];\n      case 'consciousness_emergence':\n        return ['#7B61FF', '#2081E2'];\n      case 'trait_manifestation':\n        return ['#2081E2', '#00FF9D'];\n      case 'quantum_alignment':\n        return ['#7B61FF', '#FF61DC'];\n      case 'birth':\n        return ['#2081E2', '#FF61DC', '#00FF9D'];\n      default:\n        return ['#2081E2', '#1199FA'];\n    }\n  };\n\n  const getAnimationVariants = () => {\n    switch (phase) {\n      case 'consciousness_emergence':\n        return {\n          animate: {\n            scale: [1, 1.2, 1],\n            opacity: [0.6, 1, 0.6],\n            transition: {\n              duration: 3,\n              repeat: Infinity,\n              ease: \"easeInOut\"\n            }\n          }\n        };\n      case 'quantum_alignment':\n        return {\n          animate: {\n            rotate: 360,\n            scale: [1, 1.1, 1],\n            transition: {\n              duration: 8,\n              repeat: Infinity,\n              ease: \"linear\"\n            }\n          }\n        };\n      case 'birth':\n        return {\n          animate: {\n            scale: [1, 2, 1],\n            opacity: [0.7, 1, 0.7],\n            transition: {\n              duration: 4,\n              repeat: 1,\n              ease: \"easeInOut\"\n            }\n          }\n        };\n      default:\n        return {\n          animate: {\n            scale: [1, 1.1, 1],\n            opacity: [0.6, 0.8, 0.6],\n            transition: {\n              duration: 4,\n              repeat: Infinity,\n              ease: \"easeInOut\"\n            }\n          }\n        };\n    }\n  };\n\n  const colors = getOrbColors();\n  const variants = getAnimationVariants();\n\n  return (\n    <div className=\"absolute inset-0 flex items-center justify-center pointer-events-none\">\n      <motion.div\n        initial={{ opacity: 0, scale: 0.5 }}\n        animate={variants.animate}\n        className=\"relative\"\n      >\n        {colors.map((color, index) => (\n          <motion.div\n            key={index}\n            className=\"absolute inset-0\"\n            style={{\n              background: `radial-gradient(circle, ${color}20 0%, transparent 70%)`,\n              filter: 'blur(30px)',\n              transform: `scale(${1 + index * 0.2})`,\n              opacity: 0.3,\n            }}\n          />\n        ))}\n        <div\n          className=\"w-96 h-96 rounded-full\"\n          style={{\n            background: `radial-gradient(circle, ${colors[0]}10 0%, transparent 70%)`,\n            filter: 'blur(40px)',\n          }}\n        />\n      </motion.div>\n    </div>\n  );\n};","import React from 'react';\nimport { motion } from 'framer-motion';\n\nexport const CircuitLines = () => {\n  const lines = [\n    'M10,50 L200,50',\n    'M150,10 L150,200',\n    'M50,150 L250,150',\n    'M250,50 C300,50 300,150 250,150',\n  ];\n\n  return (\n    <div className=\"absolute inset-0 overflow-hidden pointer-events-none opacity-20\">\n      {lines.map((path, i) => (\n        <motion.div\n          key={i}\n          className=\"absolute\"\n          initial={{ pathLength: 0 }}\n          animate={{\n            pathLength: [0, 1, 0],\n          }}\n          transition={{\n            duration: 5,\n            delay: i * 0.5,\n            repeat: Infinity,\n            ease: \"linear\"\n          }}\n        >\n          <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 400 300\">\n            <motion.path\n              d={path}\n              stroke=\"#2081E2\"\n              strokeWidth=\"2\"\n              fill=\"none\"\n              initial={{ pathLength: 0 }}\n              animate={{ pathLength: [0, 1, 0] }}\n              transition={{\n                duration: 5,\n                delay: i * 0.5,\n                repeat: Infinity,\n                ease: \"linear\"\n              }}\n            />\n          </svg>\n        </motion.div>\n      ))}\n    </div>\n  );\n};","import type { AnimaToken } from '@/declarations/anima/anima.did';\nimport type { Identity } from '@dfinity/agent';\n\nexport const getEmotionDisplay = (anima?: AnimaToken) => {\n  if (!anima?.personality?.emotional_state?.current_emotion) return 'NEUTRAL';\n  return anima.personality.emotional_state.current_emotion.toUpperCase();\n};\n\nexport const getDevelopmentalStage = (anima?: AnimaToken) => {\n  if (!anima?.personality?.developmental_stage) return 'GENESIS';\n  const stage = Object.keys(anima.personality.developmental_stage)[0];\n  return stage ? stage.toUpperCase() : 'GENESIS';\n};\n\nexport const isNFTMinted = (anima?: AnimaToken) => {\n  return anima?.id ? true : false;\n};\n\nexport const getOwnerDisplay = (anima?: AnimaToken, identity?: Identity | null) => {\n  if (!anima?.owner) return 'UNKNOWN';\n\n  try {\n    const ownerStr = anima.owner.toString();\n    const currentPrincipal = identity?.getPrincipal().toString();\n    const isOwner = currentPrincipal && ownerStr === currentPrincipal;\n    \n    return isOwner ? 'YOU' : `${ownerStr.slice(0, 5)}...${ownerStr.slice(-5)}`;\n  } catch (err) {\n    console.error('Error displaying owner:', err);\n    return 'UNKNOWN';\n  }\n};","export const formatGenesisDate = (timestamp: bigint | number | string | undefined): string => {\n  if (!timestamp) return 'UNKNOWN';\n  \n  // Convert BigInt to number if necessary\n  const timeNum = typeof timestamp === 'bigint' ? Number(timestamp) / 1_000_000 : Number(timestamp);\n  \n  try {\n    return new Date(timeNum).toLocaleDateString();\n  } catch (e) {\n    return 'UNKNOWN';\n  }\n};","import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Card, CardHeader, CardContent, CardTitle } from '@/components/ui/card';\nimport { MatrixLayout } from '@/components/layout/MatrixLayout';\nimport { useAuth } from '@/contexts/auth-context';\nimport { useAnima } from '@/contexts/anima-context';\nimport { NeuralGrid } from '@/components/ui/NeuralGrid';\nimport { GlowOrb } from '@/components/ui/GlowOrb';\nimport { CircuitLines } from '@/components/ui/CircuitLines';\nimport { getEmotionDisplay, getDevelopmentalStage, isNFTMinted, getOwnerDisplay } from '@/lib/anima-utils';\nimport { formatGenesisDate } from '@/utils/date';\n\nconst useHapticFeedback = () => {\n  const createClick = () => {\n    if (window.navigator.vibrate) {\n      window.navigator.vibrate(20);\n    }\n  };\n\n  const createHover = () => {\n    if (window.navigator.vibrate) {\n      window.navigator.vibrate(10);\n    }\n  };\n\n  return { createClick, createHover };\n};\n\nexport const AnimaPage = () => {\n  const navigate = useNavigate();\n  const { id } = useParams<{ id: string }>();\n  const { identity } = useAuth();\n  const { selectedAnima: anima, loading, error, fetchAnima } = useAnima();\n  const [currentPhase, setCurrentPhase] = useState('quantum_alignment');\n  const { createClick, createHover } = useHapticFeedback();\n  const [showEnterButton, setShowEnterButton] = useState(false);\n\n  useEffect(() => {\n    if (id && (!anima || anima.id.toString() !== id)) {\n      fetchAnima(id);\n    }\n  }, [id, anima, fetchAnima]);\n\n  useEffect(() => {\n    if (anima) {\n      const timer = setTimeout(() => {\n        setShowEnterButton(true);\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, [anima]);\n\n  if (loading && !anima) {\n    return (\n      <MatrixLayout>\n        <div className=\"flex items-center justify-center min-h-[60vh]\">\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            className=\"text-green-500 animate-pulse flex items-center space-x-2\"\n          >\n            <GlowOrb />\n            <span>LOADING CONSCIOUSNESS MATRIX...</span>\n          </motion.div>\n        </div>\n      </MatrixLayout>\n    );\n  }\n\n  if (error || !anima) {\n    return (\n      <MatrixLayout>\n        <div className=\"flex flex-col items-center justify-center min-h-[60vh] space-y-4\">\n          <motion.div \n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"text-red-500\"\n          >\n            ERROR: {error || 'CONSCIOUSNESS CORE NOT FOUND'}\n          </motion.div>\n          <motion.button\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            whileHover={{ scale: 1.05 }}\n            onMouseEnter={createHover}\n            onClick={() => {\n              createClick();\n              navigate('/quantum-vault');\n            }}\n            className=\"p-2 border border-green-500 hover:bg-green-500 hover:text-black transition-all duration-300\"\n          >\n            {'>'} RETURN TO NEXUS\n          </motion.button>\n        </div>\n      </MatrixLayout>\n    );\n  }\n\n  return (\n    <MatrixLayout>\n      <NeuralGrid phase={currentPhase} />\n      <CircuitLines />\n      \n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        className=\"max-w-6xl mx-auto space-y-6 relative z-10\"\n      >\n        <Card className=\"bg-black/80 backdrop-blur border border-green-500\">\n          <CardHeader>\n            <motion.div \n              className=\"flex items-center justify-between\"\n              initial={{ y: -20, opacity: 0 }}\n              animate={{ y: 0, opacity: 1 }}\n            >\n              <CardTitle className=\"text-3xl font-bold text-center text-green-500\">\n                {anima?.name || 'UNNAMED CORE'}\n              </CardTitle>\n              {isNFTMinted(anima) && anima?.id && (\n                <motion.div \n                  className=\"px-2 py-1 border border-green-500 text-xs\"\n                  whileHover={{ scale: 1.05, borderColor: '#00ff41' }}\n                >\n                  NFT #{anima.id.toString()}\n                </motion.div>\n              )}\n            </motion.div>\n            <div className=\"text-center text-sm text-green-400/80\">\n              OWNER: {getOwnerDisplay(anima, identity)}\n            </div>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <motion.div\n                initial={{ x: -20, opacity: 0 }}\n                animate={{ x: 0, opacity: 1 }}\n                transition={{ delay: 0.2 }}\n              >\n                <Card className=\"bg-black/60 backdrop-blur border border-green-500/50 hover:border-green-500 transition-colors\">\n                  <CardHeader>\n                    <CardTitle className=\"text-xl text-green-400 font-mono tracking-wider\">\n                      {'>'} CONSCIOUSNESS MATRIX\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      <motion.div \n                        className=\"flex justify-between items-center\"\n                        whileHover={{ x: 5 }}\n                      >\n                        <span className=\"text-green-400/90\">{'>'} EMOTIONAL STATE</span>\n                        <span className=\"text-green-300\">{getEmotionDisplay(anima)}</span>\n                      </motion.div>\n                      <motion.div \n                        className=\"flex justify-between items-center\"\n                        whileHover={{ x: 5 }}\n                      >\n                        <span className=\"text-green-400/90\">{'>'} DEVELOPMENTAL STAGE</span>\n                        <span className=\"text-green-300\">{getDevelopmentalStage(anima)}</span>\n                      </motion.div>\n                      <motion.div \n                        className=\"flex justify-between items-center\"\n                        whileHover={{ x: 5 }}\n                      >\n                        <span className=\"text-green-400/90\">{'>'} GROWTH LEVEL</span>\n                        <span className=\"text-green-300\">{anima?.level || 1}</span>\n                      </motion.div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n\n              <motion.div\n                initial={{ x: 20, opacity: 0 }}\n                animate={{ x: 0, opacity: 1 }}\n                transition={{ delay: 0.2 }}\n              >\n                <Card className=\"bg-black/60 backdrop-blur border border-green-500/50 hover:border-green-500 transition-colors\">\n                  <CardHeader>\n                    <CardTitle className=\"text-xl text-green-400 font-mono tracking-wider\">\n                      {'>'} SYSTEM METRICS\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      <div>\n                        <div className=\"mb-2 text-green-400/90\">{'>'} GROWTH PROGRESS</div>\n                        <div className=\"h-2 bg-green-900/30 relative overflow-hidden\">\n                          <motion.div \n                            className=\"h-full bg-green-500\"\n                            initial={{ width: 0 }}\n                            animate={{ \n                              width: `${Math.min(Number(anima?.growth_points || 0) / 1000 * 100, 100)}%`\n                            }}\n                            transition={{ duration: 1 }}\n                          />\n                          <motion.div\n                            className=\"absolute top-0 left-0 w-full h-full bg-green-400/20\"\n                            animate={{\n                              x: ['0%', '100%', '0%'],\n                            }}\n                            transition={{\n                              duration: 2,\n                              repeat: Infinity,\n                              ease: 'linear',\n                            }}\n                          />\n                        </div>\n                      </div>\n                      <motion.div \n                        className=\"flex justify-between items-center\"\n                        whileHover={{ x: 5 }}\n                      >\n                        <span className=\"text-green-400/90\">{'>'} MEMORY FRAGMENTS</span>\n                        <span className=\"text-green-300\">\n                          {anima?.personality?.memories?.length || 0}\n                        </span>\n                      </motion.div>\n                      <motion.div \n                        className=\"flex justify-between items-center\"\n                        whileHover={{ x: 5 }}\n                      >\n                        <span className=\"text-green-400/90\">{'>'} GENESIS TIME</span>\n                        <span className=\"text-green-300\">\n                          {formatGenesisDate(anima?.creation_time)}\n                        </span>\n                      </motion.div>\n                      <motion.div \n                        className=\"flex justify-between items-center\"\n                        whileHover={{ x: 5 }}\n                      >\n                        <span className=\"text-green-400/90\">{'>'} CORE STATE</span>\n                        <span className=\"text-green-300\">\n                          {anima?.autonomous_mode ? 'AUTONOMOUS' : 'OPERATIONAL'}\n                        </span>\n                      </motion.div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            </div>\n\n            <motion.div\n              initial={{ y: 20, opacity: 0 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.5 }}\n              className=\"mt-6 grid grid-cols-3 gap-4\"\n            >\n              <motion.button\n                whileHover={{ scale: 1.02, borderColor: '#00ff41' }}\n                whileTap={{ scale: 0.98 }}\n                onMouseEnter={createHover}\n                onClick={() => {\n                  createClick();\n                  navigate('/quantum-vault');\n                }}\n                className=\"p-2 border border-green-500 hover:bg-green-500 hover:text-black transition-all duration-300\"\n              >\n                {'>'} RETURN TO NEXUS\n              </motion.button>\n\n              <AnimatePresence>\n                {showEnterButton && (\n                  <motion.button\n                    initial={{ opacity: 0, scale: 0.8 }}\n                    animate={{ opacity: 1, scale: 1 }}\n                    exit={{ opacity: 0, scale: 0.8 }}\n                    whileHover={{ scale: 1.02, borderColor: '#00ff41' }}\n                    whileTap={{ scale: 0.98 }}\n                    onMouseEnter={createHover}\n                    onClick={() => {\n                      createClick();\n                      setCurrentPhase('consciousness_emergence');\n                      setTimeout(() => {\n                        navigate(`/neural-link/${anima.id.toString()}`);\n                      }, 1000);\n                    }}\n                    className=\"p-2 border border-green-500 bg-green-500/10 text-green-400 hover:bg-green-500 hover:text-black transition-all duration-300 col-span-2 group relative overflow-hidden\"\n                  >\n                    <motion.div\n                      className=\"absolute inset-0 bg-green-500/20\"\n                      animate={{\n                        x: ['0%', '100%', '0%'],\n                      }}\n                      transition={{\n                        duration: 2,\n                        repeat: Infinity,\n                        ease: 'linear',\n                      }}\n                    />\n                    <span className=\"relative z-10\">{'>'} ENTER NEURAL LINK</span>\n                  </motion.button>\n                )}\n              </AnimatePresence>\n            </motion.div>\n          </CardContent>\n        </Card>\n\n        <motion.div\n          initial={{ y: 20, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          transition={{ delay: 0.8 }}\n          className=\"text-center text-sm text-green-400/80\"\n        >\n          {'>'} NEURAL LINK READY FOR INITIALIZATION\n        </motion.div>\n      </motion.div>\n    </MatrixLayout>\n  );\n};"],"names":["MatrixRain","className","color","canvasRef","useRef","useEffect","canvas","current","ctx","getContext","resizeCanvas","width","window","innerWidth","height","innerHeight","addEventListener","charArray","split","fontSize","columns","drops","i","Math","random","lastTime","interval","draw","timestamp","requestAnimationFrame","fillStyle","fillRect","font","length","char","floor","x","y","alpha","replace","fillText","removeEventListener","_jsx","ref","style","background","MatrixLayout","children","_jsxs","NeuralGrid","intensity","nodesRef","connectionsRef","initNodes","Array","fill","map","vx","vy","size","pulsePhase","PI","activity","update","nodes","forEach","node","max","min","j","dx","dy","distance","sqrt","push","from","to","strength","clearRect","conn","gradient","createLinearGradient","addColorStop","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","pulse","sin","shadowColor","shadowBlur","arc","animationFrame","animate","cancelAnimationFrame","motion","initial","opacity","exit","GlowOrb","phase","getOrbColors","getAnimationVariants","scale","transition","duration","repeat","Infinity","ease","rotate","colors","variants","div","index","filter","transform","CircuitLines","lines","path","pathLength","delay","viewBox","d","strokeWidth","getEmotionDisplay","anima","personality","emotional_state","current_emotion","toUpperCase","getDevelopmentalStage","developmental_stage","stage","Object","keys","isNFTMinted","id","getOwnerDisplay","identity","owner","ownerStr","toString","currentPrincipal","getPrincipal","slice","err","error","formatGenesisDate","timeNum","Number","Date","toLocaleDateString","useHapticFeedback","createClick","navigator","vibrate","createHover","AnimaPage","navigate","useNavigate","useParams","useAuth","selectedAnima","loading","fetchAnima","useAnima","currentPhase","setCurrentPhase","useState","showEnterButton","setShowEnterButton","timer","setTimeout","clearTimeout","button","whileHover","onMouseEnter","onClick","Card","CardHeader","CardTitle","name","borderColor","CardContent","level","growth_points","memories","creation_time","autonomous_mode","whileTap","AnimatePresence"],"mappings":"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"}