{"version":3,"file":"GenesisPage-KfORsxV5.js","sources":["../../src/components/pages/GenesisPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '@/contexts/auth-context';\nimport { useAnima } from '@/contexts/anima-context';\nimport { Principal } from '@dfinity/principal';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card } from '@/components/ui/card';\nimport { Alert } from '@/components/ui/alert';\n\n// Genesis fee in ICP (e.g. 1 ICP = 100000000 e8s)\nconst GENESIS_FEE = BigInt(100000000); // 1 ICP\n\nexport function GenesisPage() {\n  const navigate = useNavigate();\n  const { principal } = useAuth();\n  const { createActor } = useAnima();\n  const [name, setName] = useState('');\n  const [isCreating, setIsCreating] = useState(false);\n  const [error, setError] = useState(null);\n\n  const initiateGenesis = async () => {\n    if (!name.trim()) {\n      setError('Please enter a name for your Anima');\n      return;\n    }\n\n    setIsCreating(true);\n    setError(null);\n\n    try {\n      const actor = createActor();\n      \n      // First approve ICP transfer\n      const ledgerActor = await actor.getLedgerActor();\n      await ledgerActor.approve({\n        amount: GENESIS_FEE,\n        spender: Principal.fromText(process.env.ANIMA_CANISTER_ID)\n      });\n\n      // Then create the Anima\n      const result = await actor.create_anima(name);\n      \n      // Navigate to the new Anima\n      navigate(`/anima/${result.toString()}`);\n    } catch (err) {\n      console.error('Genesis failed:', err);\n      setError(err.message || 'Failed to create Anima');\n    } finally {\n      setIsCreating(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-indigo-900 via-purple-900 to-black p-8\">\n      <Card className=\"max-w-md mx-auto bg-black/50 backdrop-blur border-amber-500/20\">\n        <div className=\"p-6 space-y-6\">\n          <h1 className=\"text-3xl font-serif text-amber-400 text-center\">\n            Anima Genesis\n          </h1>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-amber-300 mb-1\">\n                Name Your Anima\n              </label>\n              <Input\n                type=\"text\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                className=\"bg-black/30 border-amber-500/30 text-amber-100\"\n                placeholder=\"Enter a mystical name...\"\n              />\n            </div>\n\n            <div className=\"p-4 rounded bg-amber-900/20 border border-amber-500/20\">\n              <h3 className=\"font-medium text-amber-400 mb-2\">Genesis Fee</h3>\n              <p className=\"text-amber-200\">1 ICP</p>\n              <p className=\"text-sm text-amber-300/60 mt-1\">\n                This fee is used to sustain the eternal flame of your Anima\n              </p>\n            </div>\n\n            {error && (\n              <Alert variant=\"destructive\">\n                {error}\n              </Alert>\n            )}\n\n            <Button\n              onClick={initiateGenesis}\n              disabled={isCreating}\n              className=\"w-full bg-gradient-to-r from-amber-500 to-orange-600 hover:from-amber-600 hover:to-orange-700\"\n            >\n              {isCreating ? (\n                <span className=\"flex items-center\">\n                  <span className=\"animate-spin mr-2\">âš¡</span>\n                  Initiating Genesis...\n                </span>\n              ) : (\n                'Begin Genesis Ritual'\n              )}\n            </Button>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n}"],"names":["define_process_env_default"],"mappings":"kTAyDU,IAAAA,EAAA,CAAA"}