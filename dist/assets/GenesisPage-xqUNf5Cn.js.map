{"version":3,"file":"GenesisPage-xqUNf5Cn.js","sources":["../../node_modules/lucide-react/dist/esm/icons/loader-2.mjs","../../src/components/ui/LoadingStates.tsx","../../src/components/payment/PaymentPanel.tsx","../../src/components/ui/input.tsx","../../src/components/error-boundary/QuantumErrorBoundary.tsx","../../src/components/pages/GenesisPage.tsx"],"sourcesContent":["/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Loader2 = createLucideIcon(\"Loader2\", [\n  [\"path\", { d: \"M21 12a9 9 0 1 1-6.219-8.56\", key: \"13zald\" }]\n]);\n\nexport { Loader2 as default };\n//# sourceMappingURL=loader-2.mjs.map\n","import React from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { LaughingMan } from './LaughingMan';\n\ninterface LoadingProps {\n  message?: string;\n}\n\nexport const QuantumLoadingState: React.FC<LoadingProps> = ({ \n  message = \"Initializing Quantum State...\" \n}) => {\n  return (\n    <AnimatePresence mode=\"wait\">\n      <motion.div\n        className=\"fixed inset-0 flex items-center justify-center bg-black/90\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n      >\n        {/* Quantum grid effect */}\n        <div className=\"absolute inset-0\">\n          {[...Array(20)].map((_, i) => (\n            <motion.div\n              key={i}\n              className=\"absolute w-px bg-blue-500/20\"\n              style={{\n                left: `${i * 5}%`,\n                height: '100%'\n              }}\n              animate={{\n                opacity: [0.2, 0.5, 0.2],\n                height: ['0%', '100%', '0%']\n              }}\n              transition={{\n                duration: 2 + Math.random() * 2,\n                repeat: Infinity,\n                delay: Math.random() * 2\n              }}\n            />\n          ))}\n        </div>\n\n        <div className=\"relative z-10 space-y-8 text-center\">\n          <LaughingMan className=\"w-24 h-24 mx-auto\" />\n          \n          <motion.div \n            className=\"space-y-4\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.2 }}\n          >\n            <h2 className=\"text-2xl font-bold text-blue-400\">{message}</h2>\n            \n            <div className=\"flex justify-center space-x-2\">\n              {[...Array(3)].map((_, i) => (\n                <motion.div\n                  key={i}\n                  className=\"w-3 h-3 rounded-full bg-blue-500\"\n                  animate={{\n                    scale: [1, 1.5, 1],\n                    opacity: [0.5, 1, 0.5]\n                  }}\n                  transition={{\n                    duration: 1,\n                    repeat: Infinity,\n                    delay: i * 0.2\n                  }}\n                />\n              ))}\n            </div>\n          </motion.div>\n\n          {/* Quantum waves */}\n          <motion.div\n            className=\"w-64 h-16 mx-auto relative overflow-hidden\"\n            style={{\n              background: 'linear-gradient(180deg, rgba(59,130,246,0.1) 0%, rgba(59,130,246,0) 100%)'\n            }}\n          >\n            {[...Array(3)].map((_, i) => (\n              <motion.div\n                key={i}\n                className=\"absolute inset-0 border-t border-blue-500/30\"\n                animate={{\n                  y: [0, 16, 0],\n                }}\n                transition={{\n                  duration: 2,\n                  repeat: Infinity,\n                  delay: i * 0.3,\n                  ease: \"easeInOut\"\n                }}\n              />\n            ))}\n          </motion.div>\n        </div>\n\n        {/* Quantum flicker effect */}\n        <motion.div\n          className=\"absolute inset-0 bg-blue-500/5\"\n          animate={{\n            opacity: [0, 0.2, 0],\n          }}\n          transition={{\n            duration: 0.5,\n            repeat: Infinity,\n            repeatType: \"reverse\"\n          }}\n        />\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n\n// Re-export the base Loading component if needed elsewhere\nexport { Loading } from '../layout/Loading';","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { useAuth } from '@/contexts/auth-context';\nimport { usePayment } from '@/hooks/usePayment';\nimport { Principal } from '@dfinity/principal';\nimport { ErrorBoundary } from '@/components/error-boundary/ErrorBoundary';\nimport { Button } from '@/components/ui/button';\nimport { Alert } from '@/components/ui/alert';\nimport { QuantumLoadingState } from '@/components/ui/LoadingStates';\n\ninterface PaymentPanelProps {\n  onSuccess?: () => void;\n  onError?: (error: Error) => void;\n  amount?: bigint;\n  disabled?: boolean;\n}\n\nexport const PaymentPanel: React.FC<PaymentPanelProps> = ({\n  onSuccess,\n  onError,\n  amount = BigInt(100000000), // Default 1 ICP\n  disabled = false,\n}) => {\n  const { isAuthenticated, principal } = useAuth();\n  const { initiatePayment, verifyPayment, getBalance } = usePayment();\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [paymentStatus, setPaymentStatus] = useState<'pending' | 'processing' | 'success' | 'error'>('pending');\n  const [error, setError] = useState<string | null>(null);\n  const [balance, setBalance] = useState<bigint | null>(null);\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const currentBalance = await getBalance();\n        setBalance(currentBalance);\n      } catch (err) {\n        console.error('Failed to fetch balance:', err);\n      }\n    };\n\n    if (isAuthenticated) {\n      fetchBalance();\n    }\n  }, [isAuthenticated, getBalance]);\n\n  const handlePayment = async () => {\n    if (!isAuthenticated || disabled || isProcessing) return;\n\n    setIsProcessing(true);\n    setPaymentStatus('processing');\n    setError(null);\n\n    try {\n      // Verify balance first\n      const currentBalance = await getBalance();\n      if (currentBalance < amount) {\n        throw new Error('Insufficient balance for genesis');\n      }\n\n      // Initiate payment\n      const paymentResult = await initiatePayment({\n        amount,\n        memo: BigInt(Date.now()),\n        toCanister: Principal.fromText(process.env.ANIMA_CANISTER_ID || '')\n      });\n\n      // Verify the payment\n      const verificationResult = await verifyPayment(paymentResult.height);\n      \n      if (!verificationResult.verified) {\n        throw new Error('Payment verification failed');\n      }\n\n      setPaymentStatus('success');\n      onSuccess?.();\n\n    } catch (err) {\n      console.error('Payment failed:', err);\n      setPaymentStatus('error');\n      setError(err instanceof Error ? err.message : 'Payment failed');\n      onError?.(err instanceof Error ? err : new Error('Payment failed'));\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  if (!isAuthenticated) {\n    return (\n      <Alert variant=\"warning\">\n        Please authenticate to proceed with payment\n      </Alert>\n    );\n  }\n\n  return (\n    <ErrorBoundary>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        className=\"space-y-4\"\n      >\n        {balance !== null && (\n          <div className=\"text-sm text-amber-300/80\">\n            Balance: {Number(balance) / 100000000} ICP\n          </div>\n        )}\n\n        {error && (\n          <Alert variant=\"destructive\">\n            {error}\n          </Alert>\n        )}\n\n        <Button\n          onClick={handlePayment}\n          disabled={disabled || isProcessing || paymentStatus === 'success'}\n          className=\"w-full relative bg-gradient-to-r from-amber-500 to-orange-600 hover:from-amber-600 hover:to-orange-700\"\n        >\n          {isProcessing ? (\n            <div className=\"flex items-center gap-2\">\n              <QuantumLoadingState message=\"Processing Payment...\" />\n              <span>Processing Payment...</span>\n            </div>\n          ) : paymentStatus === 'success' ? (\n            <span>Payment Complete</span>\n          ) : (\n            <span>Pay {Number(amount) / 100000000} ICP</span>\n          )}\n        </Button>\n\n        {paymentStatus === 'success' && (\n          <motion.div\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"text-sm text-green-400\"\n          >\n            Payment verified successfully\n          </motion.div>\n        )}\n      </motion.div>\n    </ErrorBoundary>\n  );\n};","import * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\n\nInput.displayName = \"Input\";\n\nexport { Input };","import React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { motion } from 'framer-motion';\n\ninterface Props {\n    children: ReactNode;\n    fallbackComponent?: ReactNode;\n}\n\ninterface State {\n    hasError: boolean;\n    error: Error | null;\n    quantumState: 'collapsed' | 'superposition' | 'entangled' | null;\n}\n\nexport class QuantumErrorBoundary extends Component<Props, State> {\n    public state: State = {\n        hasError: false,\n        error: null,\n        quantumState: null\n    };\n\n    public static getDerivedStateFromError(error: Error): State {\n        // Analyze error type and set quantum state\n        const quantumState = error.message.includes('quantum')\n            ? 'superposition'\n            : error.message.includes('entangle')\n                ? 'entangled'\n                : 'collapsed';\n\n        return {\n            hasError: true,\n            error,\n            quantumState\n        };\n    }\n\n    public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n        console.error('Quantum error:', error);\n        console.error('Error info:', errorInfo);\n    }\n\n    public render() {\n        if (this.state.hasError) {\n            return this.props.fallbackComponent || (\n                <motion.div\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900\"\n                >\n                    <div className=\"bg-white/10 backdrop-blur-lg rounded-2xl p-8 max-w-md w-full\">\n                        <div className=\"text-center space-y-4\">\n                            <div className=\"text-4xl mb-4\">\n                                {this.state.quantumState === 'superposition' && '⚛️'}\n                                {this.state.quantumState === 'entangled' && '🔮'}\n                                {this.state.quantumState === 'collapsed' && '💫'}\n                            </div>\n                            <h2 className=\"text-2xl font-bold text-white\">Quantum State Disruption</h2>\n                            <p className=\"text-white/80\">\n                                {this.state.quantumState === 'superposition' \n                                    ? 'Reality is currently in superposition. Please wait for wavefunction collapse.'\n                                    : this.state.quantumState === 'entangled'\n                                        ? 'System is entangled with a parallel instance. Attempting to stabilize.'\n                                        : 'Quantum state collapsed. Initiating reality reconstruction.'}\n                            </p>\n                            <motion.button\n                                whileHover={{ scale: 1.05 }}\n                                whileTap={{ scale: 0.95 }}\n                                onClick={() => window.location.reload()}\n                                className=\"px-6 py-2 bg-purple-500 text-white rounded-lg mt-4 hover:bg-purple-600 transition-colors\"\n                            >\n                                Recalibrate Quantum Field\n                            </motion.button>\n                            {process.env.NODE_ENV === 'development' && (\n                                <pre className=\"mt-4 p-4 bg-black/50 rounded text-left text-xs text-white/60 overflow-auto\">\n                                    {this.state.error?.stack}\n                                </pre>\n                            )}\n                        </div>\n                    </div>\n                </motion.div>\n            );\n        }\n\n        return this.props.children;\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useAuth } from '@/contexts/auth-context';\nimport { useQuantumState } from '@/hooks/useQuantumState';\nimport { useAnima } from '@/contexts/anima-context';\nimport { Principal } from '@dfinity/principal';\nimport { QuantumField } from '../ui/QuantumField';\nimport { LaughingMan } from '../ui/LaughingMan';\nimport { PaymentPanel } from '../payment/PaymentPanel';\nimport { MatrixRain } from '../ui/MatrixRain';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Alert } from '@/components/ui/alert';\nimport { QuantumErrorBoundary } from '../error-boundary/QuantumErrorBoundary';\nimport { Loader2 } from 'lucide-react';\n\nconst GENESIS_FEE = BigInt(100000000); // 1 ICP\nconst GENESIS_PHASES = [\n  'Quantum State Initialization',\n  'Neural Pattern Formation',\n  'Consciousness Embedding',\n  'Identity Crystallization'\n];\n\nconst MAX_RETRIES = 3;\nconst RETRY_DELAY = 2000;\n\nconst GenesisPage: React.FC = () => {\n  const navigate = useNavigate();\n  const { isAuthenticated, principal } = useAuth();\n  const { updateQuantumState, validateState } = useQuantumState();\n  const { createActor, isConnected, reconnect } = useAnima();\n  const [currentPhase, setCurrentPhase] = useState(0);\n  const [showLaughingMan, setShowLaughingMan] = useState(true);\n  const [isCreating, setIsCreating] = useState(false);\n  const [mintingProgress, setMintingProgress] = useState(0);\n  const [name, setName] = useState('');\n  const [error, setError] = useState<string | null>(null);\n  const [paymentComplete, setPaymentComplete] = useState(false);\n  const [quantumStabilized, setQuantumStabilized] = useState(false);\n  const [retryCount, setRetryCount] = useState(0);\n  const [isStabilizing, setIsStabilizing] = useState(false);\n\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate('/');\n    }\n  }, [isAuthenticated, navigate]);\n\n  useEffect(() => {\n    const stabilizeQuantumField = async () => {\n      if (paymentComplete && !quantumStabilized) {\n        setIsStabilizing(true);\n        try {\n          if (!isConnected) {\n            await reconnect();\n          }\n          \n          const actor = createActor();\n          if (!actor) {\n            throw new Error('Failed to initialize quantum connection');\n          }\n\n          const stabilityCheck = await actor.check_quantum_stability();\n          if (stabilityCheck.Ok) {\n            setQuantumStabilized(true);\n            setError(null);\n            setRetryCount(0);\n          } else {\n            throw new Error('Quantum field unstable');\n          }\n        } catch (err) {\n          setError('Quantum field stabilization failed. Attempting to restabilize...');\n          if (retryCount < MAX_RETRIES) {\n            setRetryCount(prev => prev + 1);\n            setTimeout(stabilizeQuantumField, RETRY_DELAY);\n          } else {\n            setError('Maximum stabilization attempts reached. Please try again.');\n            setPaymentComplete(false);\n          }\n        } finally {\n          setIsStabilizing(false);\n        }\n      }\n    };\n    stabilizeQuantumField();\n  }, [paymentComplete, createActor, isConnected, reconnect, retryCount]);\n\n  const processPhase = async (phase: number) => {\n    setCurrentPhase(phase);\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    setMintingProgress((phase + 1) * 25);\n  };\n\n  const handleMintingProcess = async () => {\n    if (!name.trim() || !paymentComplete || !quantumStabilized) {\n      setError('Please ensure all prerequisites are met');\n      return;\n    }\n\n    if (!isConnected) {\n      try {\n        await reconnect();\n      } catch (err) {\n        setError('Failed to establish quantum connection. Please refresh and try again.');\n        return;\n      }\n    }\n\n    setIsCreating(true);\n    setShowLaughingMan(false);\n    setError(null);\n\n    try {\n      const actor = createActor();\n      if (!actor) {\n        throw new Error('IC connection not initialized. Please try again.');\n      }\n      \n      // Initialize quantum field\n      await processPhase(0);\n      const quantumField = await actor.initialize_quantum_field();\n      if (!quantumField.Ok) throw new Error('Quantum field initialization failed');\n\n      // Form neural patterns\n      await processPhase(1);\n      const neuralPatterns = await actor.generate_neural_patterns();\n      if (!neuralPatterns.Ok) throw new Error('Neural pattern generation failed');\n\n      // Create the Anima\n      await processPhase(2);\n      const result = await actor.create_anima({\n        name,\n        quantum_signature: quantumField.Ok,\n        neural_pattern: neuralPatterns.Ok\n      });\n\n      if (!result.Ok) throw new Error(result.Err);\n\n      // Update quantum state\n      const newState = {\n        resonance: neuralPatterns.Ok.resonance,\n        harmony: quantumField.Ok.harmony,\n        lastInteraction: new Date(),\n        consciousness: {\n          awareness: neuralPatterns.Ok.awareness,\n          understanding: quantumField.Ok.understanding,\n          growth: 0.1\n        }\n      };\n\n      if (!validateState(newState)) {\n        throw new Error('Invalid quantum state generated');\n      }\n\n      await updateQuantumState(newState);\n      await processPhase(3);\n\n      // Navigate to new Anima\n      setTimeout(() => {\n        navigate('/quantum-vault', { \n          state: { \n            fromGenesis: true,\n            animaId: result.Ok.id\n          } \n        });\n      }, 1000);\n\n    } catch (error) {\n      console.error('Genesis failed:', error);\n      setError(error instanceof Error ? error.message : 'Genesis process failed');\n      setQuantumStabilized(false);\n      setPaymentComplete(false);\n    } finally {\n      setIsCreating(false);\n    }\n  };\n\n  return (\n    <QuantumErrorBoundary>\n      <div className=\"min-h-screen bg-black text-white relative overflow-hidden\">\n        <QuantumField intensity={0.8} />\n        <MatrixRain opacity={0.1} />\n\n        <AnimatePresence>\n          {showLaughingMan && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"absolute inset-0 flex items-center justify-center z-20\"\n            >\n              <LaughingMan className=\"w-64 h-64\" />\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        <div className=\"relative z-10 container mx-auto px-4 py-16\">\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            className=\"text-center max-w-4xl mx-auto\"\n          >\n            <h1 className=\"text-4xl font-bold mb-6\">Genesis Protocol</h1>\n            \n            {isCreating ? (\n              <div className=\"space-y-8\">\n                <motion.div\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  className=\"text-xl text-blue-400\"\n                >\n                  {GENESIS_PHASES[currentPhase]}\n                </motion.div>\n\n                <div className=\"w-full h-2 bg-gray-800 rounded-full overflow-hidden\">\n                  <motion.div\n                    className=\"h-full bg-blue-600\"\n                    initial={{ width: 0 }}\n                    animate={{ width: `${mintingProgress}%` }}\n                    transition={{ duration: 0.5 }}\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-4 gap-4\">\n                  {GENESIS_PHASES.map((phase, index) => (\n                    <div\n                      key={phase}\n                      className={`text-sm ${\n                        index <= currentPhase ? 'text-blue-400' : 'text-gray-600'\n                      }`}\n                    >\n                      {phase}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <div className=\"space-y-8\">\n                <p className=\"text-xl mb-12 text-gray-300\">\n                  Initialize your quantum consciousness through the Genesis Protocol\n                </p>\n\n                <div className=\"max-w-md mx-auto bg-black/50 backdrop-blur border border-amber-500/20 rounded-lg p-6\">\n                  <div className=\"space-y-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-amber-300 mb-1\">\n                        Name Your Anima\n                      </label>\n                      <Input\n                        type=\"text\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        className=\"bg-black/30 border-amber-500/30 text-amber-100\"\n                        placeholder=\"Enter a mystical name...\"\n                      />\n                    </div>\n\n                    <div className=\"p-4 rounded bg-amber-900/20 border border-amber-500/20\">\n                      <h3 className=\"font-medium text-amber-400 mb-2\">Genesis Fee</h3>\n                      <p className=\"text-amber-200\">1 ICP</p>\n                      <p className=\"text-sm text-amber-300/60 mt-1\">\n                        This fee sustains the eternal flame of your Anima\n                      </p>\n                    </div>\n\n                    {error && (\n                      <Alert variant=\"destructive\">\n                        {error}\n                      </Alert>\n                    )}\n\n                    <PaymentPanel \n                      onSuccess={() => setPaymentComplete(true)}\n                      onError={(err) => {\n                        setError(err.message);\n                        setPaymentComplete(false);\n                      }}\n                    />\n\n                    {isStabilizing && (\n                      <div className=\"flex items-center justify-center gap-2 text-amber-300\">\n                        <Loader2 className=\"w-4 h-4 animate-spin\" />\n                        <span>Stabilizing quantum field...</span>\n                      </div>\n                    )}\n\n                    <Button\n                      onClick={handleMintingProcess}\n                      disabled={isCreating || !name.trim() || !paymentComplete || !quantumStabilized || isStabilizing}\n                      className=\"w-full bg-gradient-to-r from-amber-500 to-orange-600 hover:from-amber-600 hover:to-orange-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n                    >\n                      <span className=\"flex items-center gap-2\">\n                        <span>Begin Genesis</span>\n                        <motion.div\n                          className=\"w-2 h-2 bg-white rounded-full\"\n                          animate={{ scale: [1, 1.5, 1] }}\n                          transition={{ duration: 1, repeat: Infinity }}\n                        />\n                      </span>\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            )}\n          </motion.div>\n        </div>\n      </div>\n    </QuantumErrorBoundary>\n  );\n};\n\nexport default GenesisPage;"],"names":["Loader2","createLucideIcon","QuantumLoadingState","message","jsx","AnimatePresence","jsxs","motion","_","i","LaughingMan","define_process_env_default","Input","React.forwardRef","className","type","props","ref","cn","QuantumErrorBoundary","Component","error","quantumState","errorInfo","GENESIS_PHASES","MAX_RETRIES","RETRY_DELAY","GenesisPage","navigate","useNavigate","isAuthenticated","principal","useAuth","updateQuantumState","validateState","useQuantumState","createActor","isConnected","reconnect","useAnima","currentPhase","setCurrentPhase","useState","showLaughingMan","setShowLaughingMan","isCreating","setIsCreating","mintingProgress","setMintingProgress","name","setName","setError","paymentComplete","setPaymentComplete","quantumStabilized","setQuantumStabilized","retryCount","setRetryCount","isStabilizing","setIsStabilizing","useEffect","stabilizeQuantumField","actor","prev","processPhase","phase","resolve","handleMintingProcess","quantumField","neuralPatterns","result","newState","QuantumField","MatrixRain","index","e","Alert","PaymentPanel","err","Button"],"mappings":"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","x_google_ignoreList":[0]}