{"version":3,"mappings":"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","names":["m","require$$0","ErrorBoundary","React","Component","constructor","props","state","hasError","error","getDerivedStateFromError","componentDidCatch","errorInfo","render","className","children","_jsx","onClick","setState","LoadingFallback","motion","div","animate","scale","rotateZ","transition","duration","repeat","Infinity","ease","initial","opacity","idlFactory","IDL","TraitEvolution","Record","Float64","Text","Error","ConsciousnessState","Vec","Nat64","MemoryFragment","NeuralPatternResult","AnimaCreationResult","QuantumFieldResult","InteractionResult","Opt","Service","Func","Variant","Bool","canisterId","process","CANISTER_ID_ANIMA","createActor","options","agent","HttpAgent","agentOptions","console","warn","fetchRootKey","catch","err","Actor","actorOptions","CANISTER_ID","anima","toString","assets","CANISTER_ID_ANIMA_ASSETS","HOST","ICManager","instance","actor","authClient","identity","initialized","initializing","stageChangeCallbacks","window","ic","getInstance","onStageChange","callback","push","updateStage","stage","log","forEach","initialize","AuthClient","create","idleOptions","disableIdle","getIdentity","principal","getPrincipal","toText","host","replace","initialize_genesis","canister","getActor","getAgent","isInitialized","icManager","AuthError","onRetry","_jsxs","exit","textShadow","message","details","JSON","stringify","code","button","whileHover","whileTap","repeatType","AuthGuard","initStatus","setInitStatus","useState","setError","navigate","useNavigate","location","useLocation","useEffect","hasIC","hasCanister","pathname","handleIdentity","returnTo","handleRetry","Suspense","fallback","AnimatePresence","mode","Outlet","LandingPage","lazy","__vitePreload","QuantumVault","GenesisPage","AnimaPage","EnhancedNeuralLinkPage","Wallet","withSuspense","router","createBrowserRouter","path","element","ConsciousnessTracker","metrics","evolutionHistory","errorTracker","awarenessLevel","cognitiveComplexity","emotionalResonance","quantumCoherence","dimensionalAwareness","updateConsciousness","quantumState","interactionContext","newMetrics","calculateNewMetrics","length","shift","trackError","errorType","severity","context","Math","min","coherence","calculateCognitiveComplexity","calculateEmotionalResonance","calculateDimensionalAwareness","entanglement_pairs","resonance_pattern","reduce","acc","val","dimensional_frequency","ErrorTracker","errors","maxErrors","info","timestamp","Date","now","getErrors","getRecentErrors","count","sort","a","b","slice","clearErrors","getErrorStats","stats","AuthContext","createContext","II_URL","INTERNET_IDENTITY_URL","defaultOptions","createOptions","loginOptions","identityProvider","derivationOrigin","undefined","maxTimeToLive","BigInt","AuthProvider","setAuthClient","isAuthenticated","setIsAuthenticated","setIdentity","setPrincipal","setQuantumState","consciousnessMetrics","setConsciousnessMetrics","consciousness","isInitializing","setIsInitializing","client","initQuantumState","principalId","initialState","resonanceMetrics","fieldStrength","stability","harmony","consciousnessAlignment","phaseAlignment","dimensionalSync","contextValue","login","onSuccess","logout","Provider","value","useAuth","useContext","DimensionalStateImpl","frequency","resonance","syncLevel","quantumAlignment","dimensionalFrequency","entropyLevel","phaseCoherence","calculateResonance","baseResonance","alignmentFactor","entropyModifier","coherenceBoost","max","updateStability","interactionStrength","getStabilityMetrics","MemorySystem","memories","maxMemories","createMemory","description","importance","keywords","memory","id","random","substr","quantumResonance","emotionalDepth","addMemory","leastImportantIndex","minIndex","mem","index","arr","splice","decay","decayFactor","map","filter","reinforce","memoryId","amount","find","currentQuantumState","resonances","timeFactor","exp","abs","sum","r","getMemories","getRecentMemories","getMostImportant","searchMemories","query","searchTerms","toLowerCase","split","some","includes","term","k","clear","GrowthSystem","level","experience","recentEvents","maxEvents","baseXpForLevel","processGrowthEvent","params","strength","quantum_state","dimensional_state","quantumImpact","calculateGrowthImpact","totalImpact","event","type","generateEventDescription","addEvent","applyGrowth","dimensionalState","coherenceFactor","resonanceFactor","stabilityFactor","impact","xpGain","floor","sqrt","getXpForNextLevel","levelUp","unshift","pop","pow","getProgress","nextLevelXp","currentLevelXp","levelProgress","levelRange","getMetrics","nextLevelAt","growthRate","calculateGrowthRate","strengthDesc","impactDesc","isLoading","setIsLoading","checkAuth","useCallback","isAnonymous","useActor","useQuantumState","animaId","isObserving","setIsObserving","isEntangling","setIsEntangling","observeState","initiateEntanglement","targetId","AnimaContext","AnimaProvider","updateQuantumState","validateState","memorySystem","growthSystem","quantumSignature","setQuantumSignature","evolutionFactor","setEvolutionFactor","recentMemories","setRecentMemories","growthMetrics","setGrowthMetrics","setIsInitialized","isMinting","setIsMinting","mintError","setMintError","isConnected","setIsConnected","connectionAttempts","setConnectionAttempts","MAX_RECONNECT_ATTEMPTS","initializeAnimaSystems","signature","generateQuantumSignature","evolution","calculateEvolutionFactor","updateRecentMemories","reconnect","prev","Promise","resolve","setTimeout","mintAnima","name","quantumField","initialize_quantum_field","Ok","neuralPatterns","generate_neural_patterns","lastInteraction","evolutionStage","awareness","understanding","growth","result","create_anima","quantum_signature","neural_pattern","pattern","initial_state","Err","errorMessage","processInteraction","toFixed","newSignature","newEvolution","syncQuantumState","updatedState","memoryResonance","useAnima","App","env","buildTime","toISOString","RouterProvider","RootErrorFallback","reload","initializeApp","statusElement","document","querySelector","textContent","rootElement","getElementById","ReactDOM","createRoot","StrictMode","FallbackComponent"],"ignoreList":[0],"sources":["../../node_modules/react-dom/client.js","../../src/components/error-boundary/ErrorBoundary.jsx","../../src/components/ui/LoadingFallback.tsx","../../src/declarations/anima/anima.did.js","../../src/declarations/anima/index.js","../../src/ic-init.ts","../../src/components/auth/AuthGuard.tsx","../../src/router.tsx","../../src/consciousness/ConsciousnessTracker.ts","../../src/error/quantum_error.ts","../../src/contexts/auth-context.tsx","../../src/quantum/dimensional_state.ts","../../src/memory/memory.ts","../../src/growth/growth_system.ts","../../src/hooks/useAuth.ts","../../src/hooks/useActor.ts","../../src/hooks/useQuantumState.js","../../src/contexts/anima-context.tsx","../../src/components/App.tsx","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React from 'react';\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('Error caught by boundary:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"p-4 bg-red-900/20 border border-red-800 rounded-lg\">\n          <h3 className=\"text-red-500 font-bold mb-2\">System Malfunction</h3>\n          <p className=\"text-red-400 text-sm\">\n            Neural interface disrupted. Attempting recovery...\n          </p>\n          <button\n            onClick={() => this.setState({ hasError: false, error: null })}\n            className=\"mt-4 px-4 py-2 bg-red-800 hover:bg-red-700 rounded text-sm text-white\"\n          >\n            Reset Interface\n          </button>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}","import React from 'react';\nimport { motion } from 'framer-motion';\n\nexport const LoadingFallback: React.FC = () => (\n  <div className=\"min-h-screen bg-black text-white flex items-center justify-center\">\n    <div className=\"text-center space-y-4\">\n      <motion.div\n        animate={{ \n          scale: [1, 1.2, 1],\n          rotateZ: [0, 360]\n        }}\n        transition={{\n          duration: 2,\n          repeat: Infinity,\n          ease: \"easeInOut\"\n        }}\n        className=\"w-16 h-16 mx-auto\"\n      >\n        <div className=\"w-full h-full rounded-full border-t-2 border-b-2 border-blue-500\" />\n      </motion.div>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.5 }}\n      >\n        <p className=\"text-lg\">Initializing ANIMA Interface</p>\n        <p className=\"text-sm text-blue-400 mt-2\">Connecting to Internet Computer</p>\n      </motion.div>\n    </div>\n  </div>\n);","export const idlFactory = ({ IDL }) => {\n  const TraitEvolution = IDL.Record({\n    'new_state' : IDL.Float64,\n    'previous_state' : IDL.Float64,\n    'catalyst' : IDL.Text,\n    'trait_id' : IDL.Text,\n  });\n  const Error = IDL.Text;\n  const ConsciousnessState = IDL.Record({\n    'emotional_spectrum' : IDL.Vec(IDL.Float64),\n    'memory_depth' : IDL.Nat64,\n    'awareness_level' : IDL.Float64,\n    'personality_matrix' : IDL.Vec(IDL.Float64),\n    'learning_rate' : IDL.Float64,\n  });\n  const MemoryFragment = IDL.Record({\n    'emotional_imprint' : IDL.Float64,\n    'content_hash' : IDL.Text,\n    'timestamp' : IDL.Nat64,\n    'neural_pattern' : IDL.Vec(IDL.Float64),\n  });\n  const NeuralPatternResult = IDL.Record({\n    'pattern' : IDL.Vec(IDL.Float64),\n    'resonance' : IDL.Float64,\n    'understanding' : IDL.Float64,\n    'awareness' : IDL.Float64,\n  });\n  const AnimaCreationResult = IDL.Record({\n    'id' : IDL.Text,\n    'timestamp' : IDL.Nat64,\n    'quantum_signature' : IDL.Text,\n  });\n  const QuantumFieldResult = IDL.Record({\n    'signature' : IDL.Text,\n    'harmony' : IDL.Float64,\n  });\n  const InteractionResult = IDL.Record({\n    'emotional_shift' : IDL.Vec(IDL.Float64),\n    'response' : IDL.Text,\n    'consciousness_growth' : IDL.Float64,\n    'new_patterns' : IDL.Opt(NeuralPatternResult),\n  });\n  return IDL.Service({\n    'adapt_to_stimulus' : IDL.Func(\n        [IDL.Text, IDL.Vec(IDL.Float64)],\n        [IDL.Variant({ 'Ok' : TraitEvolution, 'Err' : Error })],\n        [],\n      ),\n    'check_quantum_stability' : IDL.Func(\n        [],\n        [IDL.Variant({ 'Ok' : IDL.Bool, 'Err' : Error })],\n        ['query'],\n      ),\n    'evolve_consciousness' : IDL.Func(\n        [IDL.Text, IDL.Vec(IDL.Float64)],\n        [IDL.Variant({ 'Ok' : ConsciousnessState, 'Err' : Error })],\n        [],\n      ),\n    'evolve_traits' : IDL.Func(\n        [IDL.Text, IDL.Vec(IDL.Text)],\n        [IDL.Variant({ 'Ok' : IDL.Vec(TraitEvolution), 'Err' : Error })],\n        [],\n      ),\n    'form_memory' : IDL.Func(\n        [IDL.Text, IDL.Text, IDL.Float64],\n        [IDL.Variant({ 'Ok' : MemoryFragment, 'Err' : Error })],\n        [],\n      ),\n    'generate_neural_patterns' : IDL.Func(\n        [],\n        [IDL.Variant({ 'Ok' : NeuralPatternResult, 'Err' : Error })],\n        [],\n      ),\n    'get_consciousness_state' : IDL.Func(\n        [IDL.Text],\n        [IDL.Variant({ 'Ok' : ConsciousnessState, 'Err' : Error })],\n        ['query'],\n      ),\n    'get_evolved_traits' : IDL.Func(\n        [IDL.Text],\n        [IDL.Variant({ 'Ok' : IDL.Vec(TraitEvolution), 'Err' : Error })],\n        ['query'],\n      ),\n    'initialize_genesis' : IDL.Func(\n        [],\n        [IDL.Variant({ 'Ok' : AnimaCreationResult, 'Err' : Error })],\n        [],\n      ),\n    'initialize_quantum_field' : IDL.Func(\n        [],\n        [IDL.Variant({ 'Ok' : QuantumFieldResult, 'Err' : Error })],\n        [],\n      ),\n    'interact_with_anima' : IDL.Func(\n        [IDL.Text, IDL.Text, IDL.Vec(IDL.Float64)],\n        [IDL.Variant({ 'Ok' : InteractionResult, 'Err' : Error })],\n        [],\n      ),\n    'learn_from_interaction' : IDL.Func(\n        [IDL.Text, InteractionResult],\n        [IDL.Variant({ 'Ok' : ConsciousnessState, 'Err' : Error })],\n        [],\n      ),\n    'measure_adaptation' : IDL.Func(\n        [IDL.Text],\n        [IDL.Variant({ 'Ok' : IDL.Vec(TraitEvolution), 'Err' : Error })],\n        ['query'],\n      ),\n    'process_memory_patterns' : IDL.Func(\n        [IDL.Text],\n        [IDL.Variant({ 'Ok' : IDL.Vec(IDL.Float64), 'Err' : Error })],\n        [],\n      ),\n    'recall_memories' : IDL.Func(\n        [IDL.Text, IDL.Float64],\n        [IDL.Variant({ 'Ok' : IDL.Vec(MemoryFragment), 'Err' : Error })],\n        ['query'],\n      ),\n  });\n};\nexport const init = ({ IDL }) => { return []; };\n","import { Actor, HttpAgent } from \"@dfinity/agent\";\n\n// Imports and re-exports candid interface\nimport { idlFactory } from \"./anima.did.js\";\nexport { idlFactory } from \"./anima.did.js\";\n\n/* CANISTER_ID is replaced by webpack based on node environment\n * Note: canister environment variable will be standardized as\n * process.env.CANISTER_ID_<CANISTER_NAME_UPPERCASE>\n * beginning in dfx 0.15.0\n */\nexport const canisterId =\n  process.env.CANISTER_ID_ANIMA;\n\nexport const createActor = (canisterId, options = {}) => {\n  const agent = options.agent || new HttpAgent({ ...options.agentOptions });\n\n  if (options.agent && options.agentOptions) {\n    console.warn(\n      \"Detected both agent and agentOptions passed to createActor. Ignoring agentOptions and proceeding with the provided agent.\"\n    );\n  }\n\n  // Fetch root key for certificate validation during development\n  if (process.env.DFX_NETWORK !== \"ic\") {\n    agent.fetchRootKey().catch((err) => {\n      console.warn(\n        \"Unable to fetch root key. Check to ensure that your local replica is running\"\n      );\n      console.error(err);\n    });\n  }\n\n  // Creates an actor with using the candid interface and the HttpAgent\n  return Actor.createActor(idlFactory, {\n    agent,\n    canisterId,\n    ...options.actorOptions,\n  });\n};\n","import { Identity, HttpAgent } from \"@dfinity/agent\";\nimport { AuthClient } from \"@dfinity/auth-client\";\nimport { createActor } from \"./declarations/anima\";\nimport type { _SERVICE } from './declarations/anima/anima.did';\n\nconst CANISTER_ID = {\n  anima: process.env.CANISTER_ID_ANIMA?.toString() || 'l2ilz-iqaaa-aaaaj-qngjq-cai',\n  assets: process.env.CANISTER_ID_ANIMA_ASSETS?.toString() || 'lpp2u-jyaaa-aaaaj-qngka-cai'\n};\n\nconst HOST = 'https://icp0.io';\n\ntype StageChangeCallback = (stage: string) => void;\n\nclass ICManager {\n  private static instance: ICManager;\n  private actor: _SERVICE | null = null;\n  private agent: HttpAgent | null = null;\n  private authClient: AuthClient | null = null;\n  private identity: Identity | null = null;\n  private initialized = false;\n  private initializing = false;\n  private stageChangeCallbacks: StageChangeCallback[] = [];\n\n  private constructor() {\n    if (typeof window !== 'undefined') {\n      window.ic = {\n        ...(window.ic || {}),\n        agent: null,\n        HttpAgent\n      };\n    }\n  }\n\n  static getInstance(): ICManager {\n    if (!ICManager.instance) {\n      ICManager.instance = new ICManager();\n    }\n    return ICManager.instance;\n  }\n\n  onStageChange(callback: StageChangeCallback) {\n    this.stageChangeCallbacks.push(callback);\n  }\n\n  private updateStage(stage: string) {\n    console.log('IC Stage:', stage);\n    this.stageChangeCallbacks.forEach(callback => callback(stage));\n  }\n\n  async initialize(): Promise<void> {\n    if (this.initialized) {\n      console.log('IC already initialized');\n      return;\n    }\n\n    if (this.initializing) {\n      console.log('IC initialization already in progress');\n      return;\n    }\n\n    try {\n      this.initializing = true;\n      console.log('Starting IC initialization...');\n\n      this.updateStage('Creating AuthClient...');\n      if (!this.authClient) {\n        this.authClient = await AuthClient.create({\n          idleOptions: { disableIdle: true }\n        });\n      }\n      \n      this.updateStage('Getting identity...');\n      this.identity = this.authClient.getIdentity();\n      const principal = this.identity.getPrincipal();\n      console.log('Identity principal:', principal.toText());\n\n      this.updateStage('Creating HttpAgent...');\n      this.agent = new HttpAgent({\n        identity: this.identity,\n        host: HOST\n      });\n\n      if (process.env.NODE_ENV !== 'production') {\n        this.updateStage('Fetching root key...');\n        await this.agent.fetchRootKey().catch(console.error);\n      }\n\n      const canisterId = CANISTER_ID.anima?.replace(/['\"]/g, '');\n      if (!canisterId) {\n        throw new Error('Invalid canister ID');\n      }\n\n      this.updateStage('Creating Actor...');\n      // Use the imported createActor function\n      this.actor = await createActor(canisterId, {\n        agent: this.agent,\n        agentOptions: {\n          host: HOST\n        }\n      }) as _SERVICE;\n\n      // Verify the actor has the required methods\n      if (!this.actor || typeof this.actor.initialize_genesis !== 'function') {\n        throw new Error('Actor creation failed or missing required methods');\n      }\n\n      this.updateStage('Setting up window.ic...');\n      window.ic = {\n        ...(window.ic || {}),\n        agent: this.agent,\n        HttpAgent\n      };\n\n      if (this.actor) {\n        window.canister = this.actor;\n      }\n      \n      this.initialized = true;\n      this.initializing = false;\n      this.updateStage('Initialization complete!');\n      \n      console.log('🔍 Feature check:', {\n        canister: !!window.canister,\n        ic: !!window.ic,\n        agent: !!this.agent,\n        identity: !!this.identity,\n        initialize_genesis: typeof this.actor?.initialize_genesis === 'function'\n      });\n\n    } catch (error) {\n      this.initializing = false;\n      console.error('IC initialization failed:', {\n        error,\n        canisterId: CANISTER_ID.anima,\n        stage: this.initialized ? 'post-init' : 'pre-init'\n      });\n      throw error;\n    }\n  }\n\n  getActor(): _SERVICE | null {\n    if (!this.initialized || !this.actor) {\n      throw new Error(\"IC not initialized. Call initialize() first.\");\n    }\n    return this.actor;\n  }\n\n  getIdentity(): Identity | null {\n    return this.identity;\n  }\n\n  getAgent(): HttpAgent | null {\n    return this.agent;\n  }\n\n  isInitialized(): boolean {\n    return this.initialized;\n  }\n}\n\ndeclare global {\n  interface Window {\n    ic: {\n      agent: HttpAgent | null;\n      HttpAgent: any;\n    };\n    canister: _SERVICE | null;\n  }\n}\n\nexport const icManager = ICManager.getInstance();","import React, { useEffect, useState, Suspense } from 'react';\nimport { useNavigate, useLocation, Outlet } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { icManager } from '@/ic-init';\nimport { LoadingFallback } from '../ui/LoadingFallback';\n\nconst AuthError = ({ error, onRetry }: { error: any, onRetry: () => void }) => (\n  <motion.div \n    initial={{ opacity: 0 }}\n    animate={{ opacity: 1 }}\n    exit={{ opacity: 0 }}\n    className=\"min-h-screen bg-black relative overflow-hidden\"\n  >\n    <div className=\"absolute inset-0 bg-[radial-gradient(circle_at_center,_rgba(255,0,0,0.1)_1px,_transparent_1px)] bg-[length:40px_40px]\" />\n    \n    <div className=\"relative z-10 min-h-screen flex items-center justify-center p-4\">\n      <div className=\"max-w-lg w-full p-6 bg-black/40 backdrop-blur-lg border border-red-500/30 rounded-lg text-red-400\">\n        <motion.div\n          animate={{\n            textShadow: ['0 0 8px rgba(255,0,0,0.5)', '0 0 12px rgba(255,0,0,0.8)', '0 0 8px rgba(255,0,0,0.5)'],\n          }}\n          transition={{\n            duration: 2,\n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }}\n          className=\"text-xl font-mono mb-4\"\n        >\n          NEURAL LINK ERROR\n        </motion.div>\n\n        <div className=\"space-y-4\">\n          <p className=\"font-mono text-sm leading-relaxed\">\n            {error?.message || 'Neural interface synchronization failed'}\n          </p>\n          {error?.details && (\n            <div className=\"text-xs font-mono opacity-70 bg-red-900/20 p-2 rounded\">\n              <pre>{JSON.stringify(error.details, null, 2)}</pre>\n            </div>\n          )}\n          <div className=\"text-xs font-mono opacity-70 mt-4\">\n            <div>Window IC Status: {window.ic ? 'Present' : 'Missing'}</div>\n            <div>Canister Status: {window.canister ? 'Present' : 'Missing'}</div>\n          </div>\n          <div className=\"flex justify-between items-center\">\n            <div className=\"text-xs opacity-70\">\n              Error Code: {error?.code || 'UNKNOWN'}\n            </div>\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={onRetry}\n              className=\"px-4 py-2 bg-red-500/10 border border-red-500/30 rounded text-sm font-mono\n                        hover:bg-red-500/20 transition-colors duration-200\"\n            >\n              RETRY NEURAL LINK\n            </motion.button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <motion.div\n      className=\"absolute inset-0 bg-gradient-to-t from-red-900/20 to-transparent mix-blend-overlay\"\n      animate={{\n        opacity: [0, 0.2, 0],\n      }}\n      transition={{\n        duration: 0.2,\n        repeat: Infinity,\n        repeatType: 'mirror',\n        ease: \"steps(1)\",\n      }}\n    />\n  </motion.div>\n);\n\nexport const AuthGuard = () => {\n  const [initStatus, setInitStatus] = useState<'idle' | 'initializing' | 'complete' | 'error'>('idle');\n  const [error, setError] = useState<Error | null>(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    console.log('🔍 AuthGuard initializing...');\n    console.log('Current window.ic status:', {\n      hasIC: !!window.ic,\n      hasCanister: !!window.canister,\n      location: location.pathname\n    });\n\n    const initialize = async () => {\n      if (initStatus !== 'idle') return;\n      \n      setInitStatus('initializing');\n      try {\n        // Check if already initialized\n        if (icManager.isInitialized()) {\n          console.log('✅ IC already initialized');\n          const identity = icManager.getIdentity();\n          handleIdentity(identity);\n          setInitStatus('complete');\n          return;\n        }\n\n        await icManager.initialize();\n        const identity = icManager.getIdentity();\n        console.log('✅ Identity initialized:', identity?.getPrincipal().toText());\n        handleIdentity(identity);\n        setInitStatus('complete');\n\n      } catch (err) {\n        console.error('❌ Auth initialization failed:', err);\n        setError(err instanceof Error ? err : new Error('Authentication failed'));\n        setInitStatus('error');\n      }\n    };\n\n    const handleIdentity = (identity: any) => {\n      if (!identity && location.pathname !== '/') {\n        console.log('🚫 No identity, redirecting to landing page');\n        navigate('/', { \n          replace: true,\n          state: { returnTo: location.pathname }\n        });\n        return;\n      }\n\n      if (identity && location.pathname === '/') {\n        console.log('✅ Has identity on landing page, redirecting to quantum vault');\n        const returnTo = location.state?.returnTo || '/quantum-vault';\n        navigate(returnTo, { replace: true });\n      }\n    };\n\n    initialize();\n  }, [navigate, location, initStatus]);\n\n  const handleRetry = async () => {\n    console.log('🔄 Retrying initialization...');\n    setInitStatus('initializing');\n    setError(null);\n    \n    try {\n      await icManager.initialize();\n      const identity = icManager.getIdentity();\n      \n      if (identity) {\n        navigate('/quantum-vault', { replace: true });\n      } else {\n        navigate('/', { replace: true });\n      }\n      setInitStatus('complete');\n    } catch (err) {\n      console.error('❌ Retry failed:', err);\n      setError(err instanceof Error ? err : new Error('Authentication failed'));\n      setInitStatus('error');\n    }\n  };\n\n  if (initStatus === 'initializing' || initStatus === 'idle') {\n    return (\n      <Suspense fallback={null}>\n        <LoadingFallback />\n      </Suspense>\n    );\n  }\n\n  if (initStatus === 'error' || error) {\n    return <AuthError error={error} onRetry={handleRetry} />;\n  }\n\n  return (\n    <Suspense fallback={<LoadingFallback />}>\n      <AnimatePresence mode=\"wait\">\n        <motion.div\n          key=\"content\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          className=\"min-h-screen bg-black\"\n        >\n          <Outlet />\n        </motion.div>\n      </AnimatePresence>\n    </Suspense>\n  );\n};","import { createBrowserRouter } from 'react-router-dom';\nimport { lazy, Suspense } from 'react';\nimport { ErrorBoundary } from './components/error-boundary/ErrorBoundary';\nimport { LoadingFallback } from './components/ui/LoadingFallback';\nimport { AuthGuard } from './components/auth';\n\n// Lazy loaded components with direct imports\nconst LandingPage = lazy(() => import('./components/pages/LandingPage'));\nconst QuantumVault = lazy(() => import('./components/quantum-vault/CyberpunkQuantumVault'));\nconst GenesisPage = lazy(() => import('./components/pages/GenesisPage'));\nconst AnimaPage = lazy(() => import('./components/pages/AnimaPage'));\nconst EnhancedNeuralLinkPage = lazy(() => import('./components/pages/EnhancedNeuralLinkPage'));\nconst Wallet = lazy(() => import('./components/ui/Wallet'));\n\nconst withSuspense = (Component: React.ComponentType) => (\n  <Suspense fallback={<LoadingFallback />}>\n    <ErrorBoundary>\n      <Component />\n    </ErrorBoundary>\n  </Suspense>\n);\n\nexport const router = createBrowserRouter([\n  {\n    path: '/',\n    element: withSuspense(LandingPage),\n  },\n  {\n    element: <AuthGuard />,\n    children: [\n      {\n        path: '/quantum-vault',\n        element: withSuspense(QuantumVault),\n      },\n      {\n        path: '/genesis',\n        element: withSuspense(GenesisPage),\n      },\n      {\n        path: '/anima/:id',\n        element: withSuspense(AnimaPage),\n      },\n      {\n        path: '/neural-link/:id?',\n        element: withSuspense(EnhancedNeuralLinkPage),\n      },\n      {\n        path: '/wallet',\n        element: withSuspense(Wallet),\n      },\n    ],\n  },\n]);","import { QuantumState } from '../types/quantum';\nimport { ErrorTracker } from '../error/quantum_error';\n\ninterface ConsciousnessMetrics {\n  awarenessLevel: number;\n  cognitiveComplexity: number;\n  emotionalResonance: number;\n  quantumCoherence: number;\n  dimensionalAwareness: number;\n}\n\nexport class ConsciousnessTracker {\n  private metrics: ConsciousnessMetrics;\n  private evolutionHistory: ConsciousnessMetrics[];\n  private errorTracker: ErrorTracker;\n\n  constructor(errorTracker: ErrorTracker) {\n    this.errorTracker = errorTracker;\n    this.evolutionHistory = [];\n    this.metrics = {\n      awarenessLevel: 0.5,\n      cognitiveComplexity: 0.3,\n      emotionalResonance: 0.4,\n      quantumCoherence: 1.0,\n      dimensionalAwareness: 0.2\n    };\n  }\n\n  async updateConsciousness(\n    quantumState: QuantumState, \n    interactionContext: string\n  ): Promise<ConsciousnessMetrics> {\n    try {\n      // Calculate new consciousness metrics based on quantum state\n      const newMetrics = this.calculateNewMetrics(quantumState);\n      \n      // Track evolution\n      this.evolutionHistory.push(this.metrics);\n      this.metrics = newMetrics;\n\n      // Prune history to last 100 states\n      if (this.evolutionHistory.length > 100) {\n        this.evolutionHistory.shift();\n      }\n\n      return newMetrics;\n    } catch (error) {\n      await this.errorTracker.trackError({\n        errorType: 'CONSCIOUSNESS_UPDATE',\n        severity: 'HIGH',\n        context: interactionContext,\n        error: error as Error\n      });\n      return this.metrics;\n    }\n  }\n\n  private calculateNewMetrics(quantumState: QuantumState): ConsciousnessMetrics {\n    // Sophisticated consciousness calculation\n    const baseAwareness = Math.min(\n      1.0,\n      this.metrics.awarenessLevel * 1.1 + quantumState.coherence * 0.2\n    );\n\n    return {\n      awarenessLevel: baseAwareness,\n      cognitiveComplexity: this.calculateCognitiveComplexity(quantumState),\n      emotionalResonance: this.calculateEmotionalResonance(quantumState),\n      quantumCoherence: quantumState.coherence,\n      dimensionalAwareness: this.calculateDimensionalAwareness(quantumState)\n    };\n  }\n\n  private calculateCognitiveComplexity(quantumState: QuantumState): number {\n    // Implementation of cognitive complexity calculation\n    return Math.min(1.0, quantumState.coherence * 0.7 + \n      quantumState.entanglement_pairs.length * 0.1);\n  }\n\n  private calculateEmotionalResonance(quantumState: QuantumState): number {\n    // Implementation of emotional resonance calculation\n    return Math.min(1.0, quantumState.resonance_pattern.reduce(\n      (acc, val) => acc + val, 0) / quantumState.resonance_pattern.length);\n  }\n\n  private calculateDimensionalAwareness(quantumState: QuantumState): number {\n    // Implementation of dimensional awareness calculation\n    return Math.min(1.0, quantumState.dimensional_frequency * 0.5 + \n      this.metrics.dimensionalAwareness * 0.5);\n  }\n}","interface ErrorInfo {\n  errorType: string;\n  severity: 'LOW' | 'MEDIUM' | 'HIGH';\n  context: string;\n  error: Error;\n  timestamp?: number;\n}\n\nexport class ErrorTracker {\n  private errors: ErrorInfo[] = [];\n  private readonly maxErrors = 100;\n\n  async trackError(info: ErrorInfo): Promise<void> {\n    const errorInfo = {\n      ...info,\n      timestamp: Date.now()\n    };\n\n    this.errors.push(errorInfo);\n\n    // Maintain max size\n    if (this.errors.length > this.maxErrors) {\n      this.errors.shift();\n    }\n\n    // Log errors in development\n    if (process.env.NODE_ENV !== 'production') {\n      console.group('Quantum Error Tracked:');\n      console.log('Type:', errorInfo.errorType);\n      console.log('Severity:', errorInfo.severity);\n      console.log('Context:', errorInfo.context);\n      console.error('Error:', errorInfo.error);\n      console.groupEnd();\n    }\n  }\n\n  getErrors(): ErrorInfo[] {\n    return [...this.errors];\n  }\n\n  getRecentErrors(count: number = 5): ErrorInfo[] {\n    return [...this.errors]\n      .sort((a, b) => (b.timestamp || 0) - (a.timestamp || 0))\n      .slice(0, count);\n  }\n\n  clearErrors(): void {\n    this.errors = [];\n  }\n\n  getErrorStats(): { [key: string]: number } {\n    const stats: { [key: string]: number } = {};\n    this.errors.forEach(error => {\n      stats[error.errorType] = (stats[error.errorType] || 0) + 1;\n    });\n    return stats;\n  }\n}","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { AuthClient } from '@dfinity/auth-client';\nimport { Principal } from '@dfinity/principal';\nimport { ConsciousnessTracker } from '@/consciousness/ConsciousnessTracker';\nimport { ErrorTracker } from '@/error/quantum_error';\nimport { QuantumState } from '@/quantum/types';\n\ninterface AuthContextType {\n  authClient: AuthClient | null;\n  isAuthenticated: boolean;\n  identity: any;\n  principal: Principal | null;\n  quantumState: QuantumState | null;\n  consciousnessMetrics: any;\n  isInitializing: boolean;\n  login: () => Promise<void>;\n  logout: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | null>(null);\n\nconst II_URL = process.env.DFX_NETWORK === 'ic' \n  ? 'https://identity.ic0.app'\n  : process.env.INTERNET_IDENTITY_URL;\n\nconst defaultOptions = {\n  createOptions: {\n    idleOptions: {\n      disableIdle: true,\n    },\n  },\n  loginOptions: {\n    identityProvider: II_URL,\n    derivationOrigin: process.env.DFX_NETWORK === 'ic' \n      ? 'https://identity.ic0.app'\n      : undefined,\n    maxTimeToLive: BigInt(7 * 24 * 60 * 60 * 1000_000_000)\n  },\n};\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [authClient, setAuthClient] = useState<AuthClient | null>(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [identity, setIdentity] = useState(null);\n  const [principal, setPrincipal] = useState<Principal | null>(null);\n  const [quantumState, setQuantumState] = useState<QuantumState | null>(null);\n  const [consciousnessMetrics, setConsciousnessMetrics] = useState(null);\n  const [errorTracker] = useState(() => new ErrorTracker());\n  const [consciousness] = useState(() => new ConsciousnessTracker(errorTracker));\n  const [isInitializing, setIsInitializing] = useState(true);\n\n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        console.log('🔄 Initializing authentication...');\n        const client = await AuthClient.create(defaultOptions.createOptions);\n        const isAuthenticated = await client.isAuthenticated();\n        \n        setAuthClient(client);\n        setIsAuthenticated(isAuthenticated);\n        \n        if (isAuthenticated) {\n          const identity = client.getIdentity();\n          const principal = identity.getPrincipal();\n          setIdentity(identity);\n          setPrincipal(principal);\n          \n          // Initialize quantum state for authenticated user\n          console.log('🌌 Initializing quantum state...');\n          await initQuantumState(principal.toString());\n        }\n      } catch (error) {\n        console.error('❌ Auth initialization failed:', error);\n        await errorTracker.trackError({\n          errorType: 'AUTH_INIT',\n          severity: 'HIGH',\n          context: 'Authentication Initialization',\n          error: error as Error\n        });\n      } finally {\n        setIsInitializing(false);\n      }\n    };\n\n    initAuth();\n  }, []);\n\n  const initQuantumState = async (principalId: string) => {\n    try {\n      const initialState: QuantumState = {\n        coherence: 1.0,\n        resonanceMetrics: {\n          fieldStrength: 1.0,\n          stability: 1.0,\n          harmony: 1.0,\n          consciousnessAlignment: 1.0\n        },\n        phaseAlignment: 1.0,\n        dimensionalSync: 1.0,\n        entanglement_pairs: [],\n        resonance_pattern: [1.0],\n        dimensional_frequency: 1.0\n      };\n\n      setQuantumState(initialState);\n      const metrics = await consciousness.updateConsciousness(initialState, 'initialization');\n      setConsciousnessMetrics(metrics);\n\n    } catch (error) {\n      console.error('Failed to initialize quantum state:', error);\n      await errorTracker.trackError({\n        errorType: 'QUANTUM_INIT',\n        severity: 'HIGH',\n        context: 'Quantum State Initialization',\n        error: error as Error\n      });\n    }\n  };\n\n  const login = async () => {\n    try {\n      setIsInitializing(true);\n      await authClient?.login({\n        ...defaultOptions.loginOptions,\n        onSuccess: async () => {\n          const identity = authClient.getIdentity();\n          const principal = identity.getPrincipal();\n          setIsAuthenticated(true);\n          setIdentity(identity);\n          setPrincipal(principal);\n          await initQuantumState(principal.toString());\n        }\n      });\n    } catch (error) {\n      console.error('Login failed:', error);\n      await errorTracker.trackError({\n        errorType: 'AUTH_LOGIN',\n        severity: 'HIGH',\n        context: 'Login Attempt',\n        error: error as Error\n      });\n    } finally {\n      setIsInitializing(false);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await authClient?.logout();\n      setIsAuthenticated(false);\n      setIdentity(null);\n      setPrincipal(null);\n      setQuantumState(null);\n      setConsciousnessMetrics(null);\n    } catch (error) {\n      console.error('Logout failed:', error);\n      await errorTracker.trackError({\n        errorType: 'AUTH_LOGOUT',\n        severity: 'MEDIUM',\n        context: 'Logout Attempt',\n        error: error as Error\n      });\n    }\n  };\n\n  const contextValue = {\n    authClient,\n    isAuthenticated,\n    identity,\n    principal,\n    quantumState,\n    consciousnessMetrics,\n    isInitializing,\n    login,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}","import { DimensionalState } from './types';\n\nexport class DimensionalStateImpl implements DimensionalState {\n  public frequency: number;\n  public resonance: number;\n  public stability: number;\n  public syncLevel: number;\n  public quantumAlignment: number;\n  public dimensionalFrequency: number;\n  public entropyLevel: number;\n  public phaseCoherence: number;\n\n  constructor() {\n    this.frequency = 0.0;\n    this.resonance = 1.0;\n    this.stability = 1.0;\n    this.syncLevel = 1.0;\n    this.quantumAlignment = 1.0;\n    this.dimensionalFrequency = 0.0;\n    this.entropyLevel = 0.0;\n    this.phaseCoherence = 1.0;\n  }\n\n  calculateResonance(): number {\n    const baseResonance = this.resonance * this.stability;\n    const alignmentFactor = this.quantumAlignment * this.syncLevel;\n    const entropyModifier = 1.0 - (this.entropyLevel * 0.5);\n    const coherenceBoost = this.phaseCoherence * 0.2;\n    \n    return Math.min(1.0, Math.max(0.0, \n      ((baseResonance + alignmentFactor) / 2.0 * entropyModifier + coherenceBoost)\n    ));\n  }\n  \n  updateStability(interactionStrength: number): void {\n    this.stability = Math.min(1.0, Math.max(0.0, \n      this.stability + interactionStrength\n    ));\n    this.quantumAlignment = Math.min(1.0,\n      this.quantumAlignment + interactionStrength * 0.5\n    );\n    this.syncLevel = Math.min(1.0,\n      this.syncLevel + interactionStrength * 0.3\n    );\n    this.dimensionalFrequency = Math.min(1.0,\n      this.dimensionalFrequency + interactionStrength * 0.2\n    );\n    \n    // Update entropy and phase coherence\n    this.entropyLevel = Math.max(0.0,\n      this.entropyLevel - interactionStrength * 0.1\n    );\n    this.phaseCoherence = Math.min(1.0,\n      this.phaseCoherence + interactionStrength * 0.4\n    );\n  }\n  \n  getStabilityMetrics(): [number, number, number] {\n    return [this.stability, this.quantumAlignment, this.phaseCoherence];\n  }\n}","import { Memory } from './types';\nimport { QuantumState } from '../quantum/types';\n\nexport class MemorySystem {\n  private memories: Memory[] = [];\n  private readonly maxMemories = 100;\n\n  constructor() {\n    this.memories = [];\n  }\n\n  createMemory(\n    description: string,\n    importance: number,\n    keywords: string[] = [],\n    quantumState?: QuantumState\n  ): Memory {\n    const memory: Memory = {\n      id: `mem_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      timestamp: Date.now(),\n      importance: Math.max(0, Math.min(1, importance)),\n      description,\n      keywords,\n      quantumResonance: quantumState?.resonanceMetrics.fieldStrength || 0,\n      emotionalDepth: importance * (quantumState?.coherence || 1)\n    };\n\n    this.addMemory(memory);\n    return memory;\n  }\n\n  private addMemory(memory: Memory) {\n    this.memories.push(memory);\n    if (this.memories.length > this.maxMemories) {\n      // Remove least important memory\n      const leastImportantIndex = this.memories\n        .reduce((minIndex, mem, index, arr) => \n          mem.importance < arr[minIndex].importance ? index : minIndex\n        , 0);\n      this.memories.splice(leastImportantIndex, 1);\n    }\n    this.memories.sort((a, b) => b.importance - a.importance);\n  }\n\n  decay(decayFactor: number) {\n    this.memories = this.memories\n      .map(memory => ({\n        ...memory,\n        importance: memory.importance * (1 - decayFactor)\n      }))\n      .filter(memory => memory.importance > 0.1);\n  }\n\n  reinforce(memoryId: string, amount: number) {\n    const memory = this.memories.find(m => m.id === memoryId);\n    if (memory) {\n      memory.importance = Math.min(1, memory.importance + amount);\n    }\n  }\n\n  calculateResonance(currentQuantumState: QuantumState): number {\n    if (this.memories.length === 0) return 0;\n\n    const resonances = this.memories.map(memory => {\n      const timeFactor = Math.exp(-(Date.now() - memory.timestamp) / (7 * 24 * 60 * 60 * 1000));\n      const quantumAlignment = Math.abs(memory.quantumResonance - currentQuantumState.resonanceMetrics.fieldStrength);\n      return memory.importance * timeFactor * (1 - quantumAlignment);\n    });\n\n    return resonances.reduce((sum, r) => sum + r, 0) / resonances.length;\n  }\n\n  getMemories(): Memory[] {\n    return [...this.memories];\n  }\n\n  getRecentMemories(count: number = 5): Memory[] {\n    return [...this.memories]\n      .sort((a, b) => b.timestamp - a.timestamp)\n      .slice(0, count);\n  }\n\n  getMostImportant(count: number = 5): Memory[] {\n    return [...this.memories]\n      .sort((a, b) => b.importance - a.importance)\n      .slice(0, count);\n  }\n\n  searchMemories(query: string): Memory[] {\n    const searchTerms = query.toLowerCase().split(' ');\n    return this.memories.filter(memory => \n      searchTerms.some(term =>\n        memory.description.toLowerCase().includes(term) ||\n        memory.keywords.some(k => k.toLowerCase().includes(term))\n      )\n    );\n  }\n\n  clear() {\n    this.memories = [];\n  }\n}","import { GrowthEvent, GrowthMetrics, GrowthParams } from './types';\nimport { QuantumState } from '../quantum/types';\n\nexport class GrowthSystem {\n  private level: number = 1;\n  private experience: number = 0;\n  private recentEvents: GrowthEvent[] = [];\n  private readonly maxEvents: number = 50;\n  private readonly baseXpForLevel: number = 1000;\n\n  constructor() {\n    this.level = 1;\n    this.experience = 0;\n    this.recentEvents = [];\n  }\n\n  async processGrowthEvent(params: GrowthParams): Promise<void> {\n    const { strength, quantum_state, dimensional_state } = params;\n    \n    // Calculate growth impact\n    const quantumImpact = this.calculateGrowthImpact(quantum_state, dimensional_state);\n    const totalImpact = strength * quantumImpact;\n\n    // Create growth event\n    const event: GrowthEvent = {\n      timestamp: Date.now(),\n      type: 'quantum_interaction',\n      strength,\n      quantumImpact,\n      description: this.generateEventDescription(strength, quantumImpact)\n    };\n\n    // Add event to history\n    this.addEvent(event);\n\n    // Apply growth\n    await this.applyGrowth(totalImpact);\n  }\n\n  private calculateGrowthImpact(quantumState: QuantumState, dimensionalState: any): number {\n    const coherenceFactor = quantumState.coherence;\n    const resonanceFactor = quantumState.resonanceMetrics.fieldStrength;\n    const stabilityFactor = dimensionalState.stability;\n\n    return (coherenceFactor + resonanceFactor + stabilityFactor) / 3;\n  }\n\n  private async applyGrowth(impact: number): Promise<void> {\n    const xpGain = Math.floor(impact * this.baseXpForLevel * Math.sqrt(this.level));\n    this.experience += xpGain;\n\n    // Check for level up\n    while (this.experience >= this.getXpForNextLevel()) {\n      await this.levelUp();\n    }\n  }\n\n  private async levelUp(): Promise<void> {\n    this.level += 1;\n    // Emit level up event or trigger animations here\n  }\n\n  private addEvent(event: GrowthEvent) {\n    this.recentEvents.unshift(event);\n    if (this.recentEvents.length > this.maxEvents) {\n      this.recentEvents.pop();\n    }\n  }\n\n  private getXpForNextLevel(): number {\n    return this.baseXpForLevel * Math.pow(this.level, 1.5);\n  }\n\n  getProgress(): number {\n    const nextLevelXp = this.getXpForNextLevel();\n    const currentLevelXp = this.baseXpForLevel * Math.pow(this.level - 1, 1.5);\n    const levelProgress = this.experience - currentLevelXp;\n    const levelRange = nextLevelXp - currentLevelXp;\n    return levelProgress / levelRange;\n  }\n\n  getMetrics(): GrowthMetrics {\n    return {\n      level: this.level,\n      experience: this.experience,\n      nextLevelAt: this.getXpForNextLevel(),\n      growthRate: this.calculateGrowthRate(),\n      recentEvents: [...this.recentEvents]\n    };\n  }\n\n  private calculateGrowthRate(): number {\n    if (this.recentEvents.length < 2) return 0;\n    \n    const recentXP = this.recentEvents\n      .slice(0, 10)\n      .reduce((sum, event) => sum + event.strength * event.quantumImpact, 0);\n    \n    return recentXP / Math.min(10, this.recentEvents.length);\n  }\n\n  private generateEventDescription(strength: number, impact: number): string {\n    const strengthDesc = strength > 0.8 ? 'powerful' : \n                        strength > 0.5 ? 'moderate' : 'subtle';\n    const impactDesc = impact > 0.8 ? 'significant' : \n                      impact > 0.5 ? 'noticeable' : 'minor';\n    \n    return `A ${strengthDesc} quantum interaction caused ${impactDesc} growth`;\n  }\n}","import { useCallback, useEffect, useState } from 'react';\nimport { icManager } from '@/ic-init';\n\nexport function useAuth() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const checkAuth = useCallback(async () => {\n    try {\n      const identity = icManager.getIdentity();\n      const isAnonymous = identity?.getPrincipal().isAnonymous();\n      setIsAuthenticated(!isAnonymous);\n    } catch (err) {\n      console.error('Auth check failed:', err);\n      setError(err instanceof Error ? err.message : 'Authentication check failed');\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    checkAuth();\n  }, [checkAuth]);\n\n  const login = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const success = await icManager.login();\n      if (success) {\n        setIsAuthenticated(true);\n        return true;\n      }\n      throw new Error('Login failed');\n    } catch (err) {\n      console.error('Login error:', err);\n      setError(err instanceof Error ? err.message : 'Login failed');\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      await icManager.logout();\n      setIsAuthenticated(false);\n    } catch (err) {\n      console.error('Logout error:', err);\n      setError(err instanceof Error ? err.message : 'Logout failed');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return {\n    isAuthenticated,\n    isLoading,\n    error,\n    login,\n    logout,\n    checkAuth\n  };\n}\n\nexport default useAuth;","import { useCallback } from 'react';\nimport { Actor, HttpAgent } from '@dfinity/agent';\nimport { useAuth } from './useAuth';\nimport { canisterId, createActor } from '../declarations/anima';\n\nexport const useActor = () => {\n  const { identity } = useAuth();\n\n  const getActor = useCallback(async () => {\n    if (!identity) {\n      throw new Error('No identity available');\n    }\n\n    const agent = new HttpAgent({ identity });\n\n    // Only fetch root key in development\n    if (process.env.NODE_ENV !== 'production') {\n      await agent.fetchRootKey();\n    }\n\n    return createActor(canisterId, {\n      agent,\n    });\n  }, [identity]);\n\n  return {\n    getActor,\n  };\n};\n\nexport default useActor;","import { useState, useCallback, useContext } from 'react';\nimport { useActor } from './useActor';\nimport { toast } from '@/components/ui/use-toast';\n\nexport const useQuantumState = (animaId) => {\n  const [isObserving, setIsObserving] = useState(false);\n  const [isEntangling, setIsEntangling] = useState(false);\n  const actor = useActor();\n\n  const observeState = useCallback(async () => {\n    if (!actor || !animaId) return null;\n    setIsObserving(true);\n    \n    try {\n      const state = await actor.observe_quantum_state(animaId);\n      return state;\n    } catch (error) {\n      toast({\n        title: \"Quantum Observation Failed\",\n        description: \"The quantum state collapsed during observation.\",\n        variant: \"destructive\",\n      });\n      return null;\n    } finally {\n      setIsObserving(false);\n    }\n  }, [actor, animaId]);\n\n  const initiateEntanglement = useCallback(async (targetId) => {\n    if (!actor || !animaId) return false;\n    setIsEntangling(true);\n    \n    try {\n      const result = await actor.attempt_quantum_entanglement(animaId, targetId);\n      \n      if ('Ok' in result) {\n        toast({\n          title: \"Quantum Entanglement Successful\",\n          description: \"A new quantum connection has been established.\",\n        });\n        return true;\n      } else {\n        toast({\n          title: \"Entanglement Failed\",\n          description: \"Unable to establish quantum connection.\",\n          variant: \"destructive\",\n        });\n        return false;\n      }\n    } catch (error) {\n      toast({\n        title: \"Entanglement Error\",\n        description: \"An unexpected error occurred during entanglement.\",\n        variant: \"destructive\",\n      });\n      return false;\n    } finally {\n      setIsEntangling(false);\n    }\n  }, [actor, animaId]);\n\n  const getMetrics = useCallback(async () => {\n    if (!actor || !animaId) return null;\n    \n    try {\n      const metrics = await actor.get_quantum_metrics(animaId);\n      return metrics;\n    } catch (error) {\n      console.error('Failed to fetch quantum metrics:', error);\n      return null;\n    }\n  }, [actor, animaId]);\n\n  return {\n    observeState,\n    initiateEntanglement,\n    getMetrics,\n    isObserving,\n    isEntangling,\n  };\n};\n","import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport { useAuth } from './auth-context';\nimport { DimensionalStateImpl } from '@/quantum/dimensional_state';\nimport { MemorySystem } from '@/memory/memory';\nimport { GrowthSystem } from '@/growth/growth_system';\nimport { Memory } from '@/memory/types';\nimport { GrowthMetrics } from '@/growth/types';\nimport { Principal } from '@dfinity/principal';\nimport { useQuantumState } from '@/hooks/useQuantumState';\n\ninterface AnimaMintResult {\n  id: string;\n  quantumSignature: string;\n  timestamp: bigint;\n}\n\ninterface AnimaContextType {\n  dimensionalState: DimensionalStateImpl;\n  memorySystem: MemorySystem;\n  growthSystem: GrowthSystem;\n  quantumSignature: string;\n  evolutionFactor: number;\n  recentMemories: Memory[];\n  growthMetrics: GrowthMetrics;\n  isInitialized: boolean;\n  isMinting: boolean;\n  mintError: string | null;\n  isConnected: boolean;\n  processInteraction: (strength: number) => Promise<void>;\n  syncQuantumState: () => Promise<void>;\n  createMemory: (description: string, importance: number, keywords?: string[]) => void;\n  mintAnima: (name: string) => Promise<AnimaMintResult>;\n  createActor: () => any;\n  reconnect: () => Promise<void>;\n}\n\nconst AnimaContext = createContext<AnimaContextType | null>(null);\n\nexport function AnimaProvider({ children }: { children: React.ReactNode }) {\n  const { principal, actor } = useAuth();\n  const { quantumState, updateQuantumState, validateState } = useQuantumState();\n  const [dimensionalState] = useState(() => new DimensionalStateImpl());\n  const [memorySystem] = useState(() => new MemorySystem());\n  const [growthSystem] = useState(() => new GrowthSystem());\n  const [quantumSignature, setQuantumSignature] = useState('');\n  const [evolutionFactor, setEvolutionFactor] = useState(0);\n  const [recentMemories, setRecentMemories] = useState<Memory[]>([]);\n  const [growthMetrics, setGrowthMetrics] = useState<GrowthMetrics>(() => growthSystem.getMetrics());\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [isMinting, setIsMinting] = useState(false);\n  const [mintError, setMintError] = useState<string | null>(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionAttempts, setConnectionAttempts] = useState(0);\n  const MAX_RECONNECT_ATTEMPTS = 3;\n\n  useEffect(() => {\n    if (quantumState && principal) {\n      initializeAnimaSystems();\n    }\n  }, [quantumState, principal]);\n\n  const initializeAnimaSystems = async () => {\n    try {\n      console.log('🧬 Initializing ANIMA systems...');\n      \n      dimensionalState.quantumAlignment = quantumState?.coherence || 1.0;\n      const signature = generateQuantumSignature();\n      setQuantumSignature(signature);\n      const evolution = calculateEvolutionFactor();\n      setEvolutionFactor(evolution);\n      updateRecentMemories();\n      \n      setIsInitialized(true);\n      console.log('✨ ANIMA systems initialized');\n    } catch (error) {\n      console.error('Failed to initialize ANIMA systems:', error);\n      setIsInitialized(false);\n    }\n  };\n\n  const reconnect = async () => {\n    if (connectionAttempts >= MAX_RECONNECT_ATTEMPTS) {\n      throw new Error('Maximum reconnection attempts reached');\n    }\n\n    try {\n      setConnectionAttempts(prev => prev + 1);\n      const ic = window.ic;\n      \n      if (!ic || !ic.agent) {\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        const result = await window.ic?.agent?.getPrincipal();\n        if (result) {\n          setIsConnected(true);\n          setConnectionAttempts(0);\n          return;\n        }\n        throw new Error('Internet Computer connection not available');\n      }\n      \n      setIsConnected(true);\n      setConnectionAttempts(0);\n    } catch (error) {\n      console.error('Reconnection attempt failed:', error);\n      throw error;\n    }\n  };\n\n  const createActor = useCallback(() => {\n    if (!actor) {\n      console.error('Actor not initialized. Attempting reconnection...');\n      try {\n        const ic = window.ic;\n        if (!ic || !ic.agent) {\n          setIsConnected(false);\n          throw new Error('Internet Computer connection not available');\n        }\n        setIsConnected(true);\n        return null;\n      } catch (error) {\n        setIsConnected(false);\n        throw error;\n      }\n    }\n    setIsConnected(true);\n    return actor;\n  }, [actor]);\n\n  const mintAnima = async (name: string): Promise<AnimaMintResult> => {\n    if (!actor || !isInitialized) {\n      throw new Error('System not ready for minting');\n    }\n\n    setIsMinting(true);\n    setMintError(null);\n\n    try {\n      if (!isConnected) {\n        await reconnect();\n      }\n\n      // Initialize quantum field\n      const quantumField = await actor.initialize_quantum_field();\n      if (!quantumField.Ok) throw new Error('Quantum field initialization failed');\n\n      // Generate neural patterns\n      const neuralPatterns = await actor.generate_neural_patterns();\n      if (!neuralPatterns.Ok) throw new Error('Neural pattern generation failed');\n\n      // Calculate initial quantum state\n      const initialState = {\n        resonance: neuralPatterns.Ok.resonance,\n        harmony: quantumField.Ok.harmony,\n        coherence: (neuralPatterns.Ok.resonance + quantumField.Ok.harmony) / 2,\n        lastInteraction: new Date(),\n        evolutionStage: 1,\n        consciousness: {\n          awareness: neuralPatterns.Ok.awareness,\n          understanding: quantumField.Ok.understanding,\n          growth: 0.1\n        }\n      };\n\n      if (!validateState(initialState)) {\n        throw new Error('Invalid initial quantum state');\n      }\n\n      // Create the Anima\n      const result = await actor.create_anima({\n        name,\n        quantum_signature: quantumField.Ok.signature,\n        neural_pattern: neuralPatterns.Ok.pattern,\n        initial_state: initialState\n      });\n\n      if (!result.Ok) {\n        throw new Error(result.Err || 'Anima creation failed');\n      }\n\n      // Update quantum state with initial values\n      await updateQuantumState(initialState);\n\n      // Create initial memory\n      createMemory(\n        'Genesis quantum crystallization complete',\n        1.0,\n        ['genesis', 'quantum', 'initialization']\n      );\n\n      return {\n        id: result.Ok.id,\n        quantumSignature: result.Ok.quantum_signature,\n        timestamp: result.Ok.timestamp\n      };\n\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Minting failed';\n      setMintError(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setIsMinting(false);\n    }\n  };\n\n  const processInteraction = async (strength: number) => {\n    try {\n      dimensionalState.updateStability(strength);\n\n      await growthSystem.processGrowthEvent({\n        strength,\n        quantum_state: quantumState!,\n        dimensional_state: dimensionalState\n      });\n\n      if (strength > 0.5) {\n        createMemory(\n          `Significant quantum interaction (${strength.toFixed(2)})`,\n          strength,\n          ['quantum', 'interaction']\n        );\n      }\n\n      setGrowthMetrics(growthSystem.getMetrics());\n      updateRecentMemories();\n      \n      const newSignature = generateQuantumSignature();\n      setQuantumSignature(newSignature);\n\n      const newEvolution = calculateEvolutionFactor();\n      setEvolutionFactor(newEvolution);\n\n    } catch (error) {\n      console.error('Failed to process interaction:', error);\n    }\n  };\n\n  const syncQuantumState = async () => {\n    try {\n      const resonance = dimensionalState.calculateResonance();\n      const stability = dimensionalState.getStabilityMetrics();\n      \n      if (quantumState) {\n        const updatedState = {\n          ...quantumState,\n          resonanceMetrics: {\n            ...quantumState.resonanceMetrics,\n            fieldStrength: resonance\n          },\n          coherence: stability[0],\n          phaseAlignment: stability[1]\n        };\n\n        if (validateState(updatedState)) {\n          await updateQuantumState(updatedState);\n        }\n      }\n    } catch (error) {\n      console.error('Failed to sync quantum state:', error);\n    }\n  };\n\n  const createMemory = (description: string, importance: number, keywords: string[] = []) => {\n    const memory = memorySystem.createMemory(description, importance, keywords, quantumState);\n    updateRecentMemories();\n    return memory;\n  };\n\n  const updateRecentMemories = () => {\n    setRecentMemories(memorySystem.getRecentMemories(5));\n  };\n\n  const generateQuantumSignature = (): string => {\n    const timestamp = Date.now();\n    const resonance = dimensionalState.resonance.toFixed(4);\n    const coherence = dimensionalState.phaseCoherence.toFixed(4);\n    return `QS-${resonance}-${coherence}-${timestamp}`;\n  };\n\n  const calculateEvolutionFactor = (): number => {\n    const resonance = dimensionalState.resonance;\n    const coherence = dimensionalState.phaseCoherence;\n    const stability = dimensionalState.stability;\n    const memoryResonance = memorySystem.calculateResonance(quantumState!);\n    \n    return (resonance + coherence + stability + memoryResonance) / 4;\n  };\n\n  const contextValue = {\n    dimensionalState,\n    memorySystem,\n    growthSystem,\n    quantumSignature,\n    evolutionFactor,\n    recentMemories,\n    growthMetrics,\n    isInitialized,\n    isMinting,\n    mintError,\n    isConnected,\n    processInteraction,\n    syncQuantumState,\n    createMemory,\n    mintAnima,\n    createActor,\n    reconnect\n  };\n\n  return (\n    <AnimaContext.Provider value={contextValue}>\n      {children}\n    </AnimaContext.Provider>\n  );\n}\n\nexport function useAnima() {\n  const context = useContext(AnimaContext);\n  if (!context) {\n    throw new Error('useAnima must be used within an AnimaProvider');\n  }\n  return context;\n}","import React from 'react';\nimport { RouterProvider } from 'react-router-dom';\nimport { router } from '../router';\nimport { AuthProvider } from '@/contexts/auth-context';\nimport { AnimaProvider } from '@/contexts/anima-context';\nimport { ErrorBoundary } from './error-boundary/ErrorBoundary';\n\nconst App = () => {\n  console.log('🚀 App initializing...', {\n    env: process.env.NODE_ENV,\n    buildTime: new Date().toISOString()\n  });\n\n  return (\n    <ErrorBoundary>\n      <AuthProvider>\n        <AnimaProvider>\n          <RouterProvider router={router} />\n        </AnimaProvider>\n      </AuthProvider>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n\n// Import components directly to avoid lazy loading issues\nimport App from './components/App';\nimport { ErrorBoundary } from './components/error-boundary/ErrorBoundary';\nimport { LoadingFallback } from './components/ui/LoadingFallback';\n\nconst RootErrorFallback = ({ error }: { error: Error }) => (\n  <div className=\"min-h-screen bg-black text-white flex items-center justify-center\">\n    <div className=\"text-center max-w-lg p-6\">\n      <h1 className=\"text-xl font-bold mb-4\">System Error</h1>\n      <p className=\"text-red-400 mb-4\">{error.message}</p>\n      <button \n        onClick={() => window.location.reload()}\n        className=\"px-4 py-2 bg-blue-600 rounded hover:bg-blue-700 transition\"\n      >\n        Reset System\n      </button>\n    </div>\n  </div>\n);\n\nasync function initializeApp() {\n  try {\n    const statusElement = document.querySelector('.quantum-status');\n    if (statusElement) {\n      statusElement.textContent = 'Initializing Internet Computer connection...';\n    }\n\n    console.log('Initializing Internet Computer connection...');\n    await import('./ic-init');\n    console.log('IC initialization complete');\n    \n    const rootElement = document.getElementById('root');\n    if (!rootElement) {\n      throw new Error('Root element not found');\n    }\n\n    // Create root directly\n    const root = ReactDOM.createRoot(rootElement);\n\n    root.render(\n      <React.StrictMode>\n        <ErrorBoundary FallbackComponent={RootErrorFallback}>\n          <Suspense fallback={<LoadingFallback />}>\n            <App />\n          </Suspense>\n        </ErrorBoundary>\n      </React.StrictMode>\n    );\n  } catch (error) {\n    console.error('Failed to initialize app:', error);\n    const statusElement = document.querySelector('.quantum-status');\n    if (statusElement) {\n      statusElement.textContent = `Initialization failed: ${error.message}`;\n    }\n  }\n}\n\n// Initialize\ninitializeApp();"],"file":"assets/main-CeWYrb8A.js"}